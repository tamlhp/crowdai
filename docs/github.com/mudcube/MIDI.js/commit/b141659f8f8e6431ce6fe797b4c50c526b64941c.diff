diff --git a/.gitignore b/.gitignore
index 1dea40c..05105d6 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,10 +1,18 @@
-generator/shell/node_modules/*
-generator/shell/build*
-generator/shell/sf2*
-generator/shell/testarea*
-soundfont-*
-*.gz
+generator/sf2/*
+generator/ruby/soundfont*
+**/source*
+**/build*
+*/soundfont/*
+!examples/soundfont/acoustic_grand_piano*
+!examples/soundfont/synth_drum*
 oggenc
 oggdec
+
+# NODE/NPM
 node_modules*
-*.DS_Store
\ No newline at end of file
+npm-debug.log
+
+# FORMATS
+*.gz
+*.DS_Store
+
diff --git a/Gruntfile.js b/Gruntfile.js
index f6f7cc5..f79dd59 100644
--- a/Gruntfile.js
+++ b/Gruntfile.js
@@ -1,28 +1,34 @@
 /*
+	----------------------------------------------------------
 	Build environment
-	----------------------------------------
+	----------------------------------------------------------
 	1) Install NodeJS:
 		http://nodejs.org/
 	2) Install dev dependencies
 	  npm install
 	3) Install Grunt CLI globally
 		npm install grunt-cli -g
+	----------------------------------------------------------
 */
 
 module.exports = function (grunt) {
 	grunt.initConfig({
 		concat: {
 			'build/MIDI.js': [
-				'js/MIDI/AudioDetect.js',
-				'js/MIDI/LoadPlugin.js',
-				'js/MIDI/Plugin.js',
-				'js/MIDI/Player.js',
-				'js/Window/DOMLoader.XMLHttp.js', // req when using XHR
-				'js/Window/DOMLoader.script.js', // req otherwise
-//				'js/Color/SpaceW3.js', // optional
-//				'js/MusicTheory/Synesthesia.js', // optional
-//				'js/Widgets/Loader.js', // optional
-//				'js/Window/Event.js' // optional
+//				'js/color/spaceW3.js', // optional
+				'js/midi/audioDetect.js',
+				'js/midi/gm.js',
+				'js/midi/loader.js',
+				'js/midi/player.js',
+				'js/midi/plugin.audiotag.js',
+				'js/midi/plugin.webaudio.js',
+				'js/midi/plugin.webmidi.js',
+//				'js/midi/synesthesia.js', // optional
+				'js/util/dom_request_xhr.js', // req when using XHR
+				'js/util/dom_request_script.js', // req otherwise
+//				'js/widget/loader.js', // optional
+				'inc/polyfill/Base64.js',
+				'inc/polyfill/base64binary.js'
 			]
 		},
 		uglify: {
diff --git a/README.md b/README.md
index 0becd63..dbd0d5c 100644
--- a/README.md
+++ b/README.md
@@ -1,34 +1,37 @@
-CODE EXAMPLES (from the repo)
+## Code examples (from the repo)
 
-* ./demo-Basic.html - the most basic implementation.
-* ./demo-MIDIPlayer.html - how to parse MIDI files, and interact with the data stream.
-* ./demo-MultipleInstruments.html - synth drum and piano playing together
-* ./demo-WhitneyMusicBox.html - a audio/visual experiment by Jim Bumgardner
+* [Basic](./examples/Basic.html) - the most basic implementation.
+* [MIDIPlayer](./examples/MIDIPlayer.html) - how to parse MIDI files, and interact with the data stream.
+* [MultipleInstruments](./examples/MultipleInstruments.html) - synth drum and piano playing together
+* [WhitneyMusicBox](./examples/WhitneyMusicBox.html) - a audio/visual experiment by Jim Bumgardner
 
--------------
+## Demos
 
-SOUND FONTS
+* [Color Piano](http://mudcu.be/piano) by Michael Deal @mudcube
+* [3D Piano Player w/ Three.js](http://www.rgba.org/r3d/3d-piano-player/) by Borja Morales @reality3d
+* [Simon Says](http://labs.uxmonk.com/simon-says/) by Daniel Christopher @uxmonk
+* [Brite Lite](http://labs.uxmonk.com/brite-lite/) by Daniel Christopher @uxmonk
+* [Euphony 3D Piano](http://qiao.github.com/euphony/) by Xueqiao Xu @qiao
+* [VexFlow](http://my.vexflow.com/articles/53) by Mohit Muthanna @11111110b
+* [Spiral Keyboard](http://spiral.qet.me/) by Patrick Snels
+* [Ragamroll](http://online-compute.rhcloud.com/ragamroll/) by Mani Balasubramanian
+* [Gbloink!](http://gbloink.com/alpha/) by Phil Jones
+* [Watch & Repeat](http://watchandrepeat.com/) by Etay Luz
 
-* <a href="https://github.com/SHMEDIALIMITED/SoundFontJS">NodeJS CLI for MIDI.js sound font creation</a>
-* <a href="https://github.com/gleitz/midi-js-soundfonts">Pre-rendered sound fonts</a>
+## Generating Base64 Soundfonts
 
-DEMOS
+There is two generators for MIDI.js soundfonts:
 
-* <a href="http://mudcu.be/piano/">Color Piano</a> by Michael Deal @mudcube
-* <a href="http://www.rgba.org/r3d/3d-piano-player/">3D Piano Player w/ Three.js</a> by Borja Morales @reality3d
-* <a href="http://labs.uxmonk.com/simon-says/">Simon Says</a> by Daniel Christopher @uxmonk
-* <a href="http://labs.uxmonk.com/brite-lite/">Brite Lite</a> by Daniel Christopher @uxmonk
-* <a href="http://qiao.github.com/euphony/">Euphony 3D Piano</a> by Xueqiao Xu @qiao
-* <a href="http://my.vexflow.com/articles/53">VexFlow</a> by Mohit Muthanna @11111110b
-* <a href="http://spiral.qet.me/">Spiral Keyboard</a> by Patrick Snels
-* <a href="http://online-compute.rhcloud.com/ragamroll/">Ragamroll</a> by Mani Balasubramanian
-* <a href="http://gbloink.com/alpha/">Gbloink!</a> by Phil Jones
+* NodeJS package for creating soundfonts from WAV files - by Patrick Wolleb
+* Ruby package for creating soundsfonts from SF2 files - by Mohit Muthanna
 
--------------
+To dive in quickly Benjamin Gleitzman has created a package of [pre-rendered sound fonts](https://github.com/gleitz/midi-js-soundfonts).
 
-* <a href="./js/MIDI/LoadPlugin.js">MIDI.loadPlugin.js</a>: Decides which framework is best to use, and sends request.
+## API
 
-<pre>
+### [MIDI.loadPlugin.js](./js/midi/LoadPlugin.js): Decides which framework is best to use, and sends request.
+
+```javascript
 // interface to download soundfont, then execute callback;
 MIDI.loadPlugin(callback);
 // simple example to get started;
@@ -37,22 +40,22 @@ MIDI.loadPlugin({
     instruments: [ "acoustic_grand_piano", "acoustic_guitar_nylon" ], // or multiple instruments
     callback: function() { }
 });
-</pre>
+```
 
-* <a href="./js/MIDI/Plugin.js">MIDI.Plugin.js</a>: Ties together the following frameworks;
+### [MIDI.Plugin.js](./js/midi/plugin.js): Ties together the following frameworks:
 
-<pre>
+```javascript
 MIDI.noteOn(channel, note, velocity, delay);
 MIDI.noteOff(channel, note, delay);
 MIDI.chordOn(channel, [note, note, note], velocity, delay);
 MIDI.chordOff(channel, [note, note, note], delay);
 MIDI.keyToNote = object; // A0 => 21
 MIDI.noteToKey = object; // 21 => A0
-</pre>
+```
 
-* <a href="./js/MIDI/Player.js">MIDI.Player.js</a>: Streams the MIDI to the browser.
+### [MIDI.Player.js](./js/midi/player.js): Streams the MIDI to the browser.
 
-<pre>
+```javascript
 MIDI.Player.currentTime = integer; // time we are at now within the song.
 MIDI.Player.endTime = integer; // time when song ends.
 MIDI.Player.playing = boolean; // are we playing? yes or no.
@@ -61,8 +64,11 @@ MIDI.Player.start(); // start the MIDI track (you can put this in the loadFile c
 MIDI.Player.resume(); // resume the MIDI track from pause.
 MIDI.Player.pause(); // pause the MIDI track.
 MIDI.Player.stop(); // stops all audio being played, and resets currentTime to 0.
+```
+
+### Callback whenever a note is played.
 
-// <b>Callback whenever a note is played;</b>
+```javascript
 MIDI.Player.removeListener(); // removes current listener.
 MIDI.Player.addListener(function(data) { // set it to your own function!
     var now = data.now; // where we are now
@@ -73,27 +79,132 @@ MIDI.Player.addListener(function(data) { // set it to your own function!
     var velocity = data.velocity; // the velocity of the note
     // then do whatever you want with the information!
 });
+```
 
-// <b>Smooth animation, interpolates between onMidiEvent calls;</b>
+### Smooth animation, interpolates between onMidiEvent calls
+
+```javascript
 MIDI.Player.clearAnimation(); // clears current animation.
 MIDI.Player.setAnimation(function(data) {
     var now = data.now; // where we are now
     var end = data.end; // time when song ends
     var events = data.events; // all the notes currently being processed
     // then do what you want with the information!
-});</pre>
-
-* <a href="./js/Color/SpaceW3.js">Color.js</a>: Color conversions, music isn&rsquo;t complete without!
+});
+```
+
+### Effects available for WebAudioContext (via Tuna.js)
+
+```javascript
+MIDI.setEffects([
+        {
+ 		type: "MoogFilter",
+		bufferSize: 4096,
+		bypass: false,
+		cutoff: 0.065,
+		resonance: 3.5
+	},
+	{
+		type: "Bitcrusher",
+		bits: 4,
+		bufferSize: 4096,
+		bypass: false,
+		normfreq: 0.1
+	},
+	{
+		type: "Phaser",
+		rate: 1.2, // 0.01 to 8 is a decent range, but higher values are possible
+		depth: 0.3, // 0 to 1
+		feedback: 0.2, // 0 to 1+
+		stereoPhase: 30, // 0 to 180
+		baseModulationFrequency: 700, // 500 to 1500
+		bypass: 0
+	}, {
+		type: "Chorus",
+		rate: 1.5,
+		feedback: 0.2,
+		delay: 0.0045,
+		bypass: 0
+	}, {
+		type: "Delay",
+		feedback: 0.45, // 0 to 1+
+		delayTime: 150, // how many milliseconds should the wet signal be delayed? 
+		wetLevel: 0.25, // 0 to 1+
+		dryLevel: 1, // 0 to 1+
+		cutoff: 20, // cutoff frequency of the built in highpass-filter. 20 to 22050
+		bypass: 0
+	}, {
+		type: "Overdrive",
+		outputGain: 0.5, // 0 to 1+
+		drive: 0.7, // 0 to 1
+		curveAmount: 1, // 0 to 1
+		algorithmIndex: 0, // 0 to 5, selects one of our drive algorithms
+		bypass: 0
+	}, {
+		type: "Compressor",
+		threshold: 0.5, // -100 to 0
+		makeupGain: 1, // 0 and up
+		attack: 1, // 0 to 1000
+		release: 0, // 0 to 3000
+		ratio: 4, // 1 to 20
+		knee: 5, // 0 to 40
+		automakeup: true, // true/false
+		bypass: 0
+	}, {
+		type: "Convolver",
+		highCut: 22050, // 20 to 22050
+		lowCut: 20, // 20 to 22050
+		dryLevel: 1, // 0 to 1+
+		wetLevel: 1, // 0 to 1+
+		level: 1, // 0 to 1+, adjusts total output of both wet and dry
+		impulse: "./inc/tuna/impulses/impulse_rev.wav", // the path to your impulse response
+		bypass: 0
+	}, {
+		type: "Filter",
+		frequency: 20, // 20 to 22050
+		Q: 1, // 0.001 to 100
+		gain: 0, // -40 to 40
+		bypass: 1, // 0 to 1+
+		filterType: 0 // 0 to 7, corresponds to the filter types in the native filter node: lowpass, highpass, bandpass, lowshelf, highshelf, peaking, notch, allpass in that order
+	}, {
+		type: "Cabinet",
+		makeupGain: 1, // 0 to 20
+		impulsePath: "./inc/tuna/impulses/impulse_guitar.wav", // path to your speaker impulse
+		bypass: 0
+	}, {
+		type: "Tremolo",
+		intensity: 0.3, // 0 to 1
+		rate: 0.1, // 0.001 to 8
+		stereoPhase: 0, // 0 to 180
+		bypass: 0
+	}, {
+		type: "WahWah",
+		automode: true, // true/false
+		baseFrequency: 0.5, // 0 to 1
+		excursionOctaves: 2, // 1 to 6
+		sweep: 0.2, // 0 to 1
+		resonance: 10, // 1 to 100
+		sensitivity: 0.5, // -1 to 1
+		bypass: 0
+	}
+]);
+```
+
+## Libraries
+
+* [Color.js](./js/color/spaceW3.js): Color conversions, music isn&rsquo;t complete without!
 <pre>Color.Space(0xff0000, "HEX>RGB>HSL");</pre>
-* <a href="./js/Window/DOMLoader.script.js">DOMLoader.script.js</a>: Loads scripts in synchronously, or asynchronously.
+* [DOMLoader.script.js](./js/Window/DOMLoader.script.js): Loads scripts in synchronously, or asynchronously.
 <pre>DOMLoader.script.add(src, callback);</pre>
-* <a href="./js/Window/DOMLoader.XMLHttp.js">DOMLoader.XMLHttp.js</a>: Cross-browser XMLHttpd request.
+* [DOMLoader.XMLHttp.js](./js/Window/DOMLoader.XMLHttp.js): Cross-browser XMLHttpd request.
 <pre>DOMLoader.sendRequest(src, callback);</pre>
-* <a href="./js/MusicTheory/Synesthesia.js">MusicTheory.Synesthesia.js</a>: Note-to-color mappings (from Isaac Newton onwards).
- <h3>Many thanks to the authors of these libraries;</h3>
-* <a href="http://webaudio.github.io/web-midi-api/">Web MIDI API</a>: W3C proposal by Jussi Kalliokoski & Chris Wilson
-* <a href="https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html">Web Audio API</a>: W3C proposal by Chris Rogers
-* <a href="http://dev.w3.org/html5/spec/Overview.html">&lt;audio&gt;</a>: HTML5 specs
-* Flash package: <a href="http://www.schillmania.com/projects/soundmanager2/">SoundManager2</a> by <a href="http://schillmania.com">Scott Schiller</a>
-* <a href="https://github.com/gasman/jasmid">jasmid</a>: Reads MIDI file byte-code, and translats into a Javascript array.
-* <a href="http://blog.danguer.com/2011/10/24/base64-binary-decoding-in-javascript/">base642binary.js</a>: Cleans up XML base64-requests for Web Audio API.
+* [MusicTheory.Synesthesia.js](./js/MusicTheory/Synesthesia.js): Note-to-color mappings (from Isaac Newton onwards).
+
+### Many thanks to the authors of these libraries
+
+* [Web MIDI API](http://webaudio.github.io/web-midi-api/): W3C proposal by Jussi Kalliokoski & Chris Wilson
+* [Web Audio API](https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html): W3C proposal by Chris Rogers
+* [&lt;audio&gt;](http://dev.w3.org/html5/spec/Overview.html): HTML5 specs
+* Flash package: [SoundManager2](http://www.schillmania.com/projects/soundmanager2/) by [Scott Schiller](http://schillmania.com)
+* [jasmid](https://github.com/gasman/jasmid): Reads MIDI file byte-code, and translats into a Javascript array.
+* [base642binary.js](http://blog.danguer.com/2011/10/24/base64-binary-decoding-in-javascript/): Cleans up XML base64-requests for Web Audio API.
diff --git a/TODO b/TODO
new file mode 100644
index 0000000..1d7da63
--- /dev/null
+++ b/TODO
@@ -0,0 +1,21 @@
+----------------------------------------------------------
+TODO
+----------------------------------------------------------
+	* Sound on Android/iOS working? Check various devices
+	------------------------------------------------------
+	* Add browser supports to the project
+	------------------------------------------------------
+	* Loading progress feedback example
+	------------------------------------------------------
+	* Document how to support from file://
+		<script src="./soundfont/acoustic_grand_piano-ogg.js"></script>
+	------------------------------------------------------
+	* better on event listeners for MIDIPlayer, get inspiration from these?
+		https://github.com/hhromic/midi-utils-js
+		https://github.com/justinlatimer/node-midi
+	------------------------------------------------------
+	* add some docs on color music history: http://www.musanim.com/
+	------------------------------------------------------
+	* List of Developers who work w/ MIDI.js
+		???
+	------------------------------------------------------
\ No newline at end of file
diff --git a/build/MIDI.js b/build/MIDI.js
index 6093ae0..17449c3 100644
--- a/build/MIDI.js
+++ b/build/MIDI.js
@@ -1,870 +1,552 @@
 /*
-	-------------------------------------
-	MIDI.audioDetect : 0.3
-	-------------------------------------
+	----------------------------------------------------------
+	MIDI.audioDetect : 0.3.2 : 2015-01-15
+	----------------------------------------------------------
 	https://github.com/mudcube/MIDI.js
-	-------------------------------------
+	----------------------------------------------------------
 	Probably, Maybe, No... Absolutely!
-	-------------------------------------
 	Test to see what types of <audio> MIME types are playable by the browser.
-	-------------------------------------
+	----------------------------------------------------------
 */
 
-if (typeof(MIDI) === "undefined") var MIDI = {};
-
-(function() { "use strict";
-
-var supports = {};	
-var canPlayThrough = function (src) {
-	var audio = new Audio();
-	var mime = src.split(";")[0];
-	audio.id = "audio";
-	audio.setAttribute("preload", "auto");
-	audio.setAttribute("audiobuffer", true);
-	audio.addEventListener("canplaythrough", function() {
-		supports[mime] = true;
-	}, false);
-	audio.src = "data:" + src;
-	document.body.appendChild(audio);
-};
-
-MIDI.audioDetect = function(callback) {
-	// check whether <audio> tag is supported
-	if (typeof(Audio) === "undefined") return callback({});
-	// check whether canPlayType is supported
-	var audio = new Audio();
-	if (typeof(audio.canPlayType) === "undefined") return callback(supports);
-	// see what we can learn from the browser
-	var vorbis = audio.canPlayType('audio/ogg; codecs="vorbis"');
-	vorbis = (vorbis === "probably" || vorbis === "maybe");
-	var mpeg = audio.canPlayType('audio/mpeg');
-	mpeg = (mpeg === "probably" || mpeg === "maybe");
-	// maybe nothing is supported
-	if (!vorbis && !mpeg) {
-		callback(supports);
-		return;
-	}
-	// or maybe something is supported
-	if (vorbis) canPlayThrough("audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA=");
-	if (mpeg) canPlayThrough("audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq");
-	// lets find out!
-	var time = (new Date()).getTime(); 
-	var interval = window.setInterval(function() {
-		for (var key in supports) {}
-		var now = (new Date()).getTime();
-		var maxExecution = now - time > 5000;
-		if (key || maxExecution) {
-			window.clearInterval(interval);
-			callback(supports);
-		}
-	}, 1);
-};
-
-})();
-/*
-	-----------------------------------------------------------
-	MIDI.loadPlugin : 0.1.2 : 01/18/2012
-	-----------------------------------------------------------
-	https://github.com/mudcube/MIDI.js
-	-----------------------------------------------------------
-	MIDI.loadPlugin({
-		instrument: "acoustic_grand_piano", // or 1 (default)
-		instruments: [ "acoustic_grand_piano", "acoustic_guitar_nylon" ], // or multiple instruments
-		callback: function() { }
-	});
-*/
-
-if (typeof (MIDI) === "undefined") var MIDI = {};
-if (typeof (MIDI.Soundfont) === "undefined") MIDI.Soundfont = {};
-
-(function() { "use strict";
-
-// Turn on to get "onprogress" event. XHR will not work from file://
-var USE_XHR = false; 
-
-MIDI.loadPlugin = function(conf) {
-	if (typeof(conf) === "function") conf = { callback: conf };
-	/// Get the instrument name.
-	var instruments = conf.instruments || conf.instrument || "acoustic_grand_piano";
-	if (typeof(instruments) !== "object") instruments = [ instruments ];
-	instruments.map(function(data) {
-		if (typeof(data) === "number") data = MIDI.GeneralMIDI.byId[data];
-		return data;		
-	});
-	///
-	MIDI.soundfontUrl = conf.soundfontUrl || MIDI.soundfontUrl || "./soundfont/";
-	/// Detect the best type of audio to use.
-	MIDI.audioDetect(function(types) {
-		var type = "";
-		// use the most appropriate plugin if not specified
-		if (typeof(type) === 'undefined') {
-			if (plugins[window.location.hash]) {
-				type = window.location.hash.substr(1);
-			} else { //
-				type = "";
-			}
-		}
-		if (type === "") {
-			if (navigator.requestMIDIAccess) {
-				type = "webmidi";
-			} else if (window.webkitAudioContext) { // Chrome
-				type = "webaudio";
-			} else if (window.Audio) { // Firefox
-				type = "audiotag";
-			} else { // Internet Explorer
-				type = "flash";
-			}
-		}
-		if (!connect[type]) return;
-		// use audio/ogg when supported
-		var filetype = types["audio/ogg"] ? "ogg" : "mp3";
-		// load the specified plugin
-		connect[type](filetype, instruments, conf.callback);
-	});
-};
-
-///
-
-var connect = {};
-
-connect.webmidi = function(filetype, instruments, callback) {
-	if (MIDI.loader) MIDI.loader.message("Web MIDI API...");
-	MIDI.WebMIDI.connect(callback);
-};
-
-connect.flash = function(filetype, instruments, callback) {
-	// fairly quick, but requires loading of individual MP3s (more http requests).
-	if (MIDI.loader) MIDI.loader.message("Flash API...");
-	DOMLoader.script.add({
-		src: "./inc/SoundManager2/script/soundmanager2.js",
-		verify: "SoundManager",
-		callback: function () {
-			MIDI.Flash.connect(callback);
-		}
-	});
-};
-
-connect.audiotag = function(filetype, instruments, callback) {
-	if (MIDI.loader) MIDI.loader.message("HTML5 Audio API...");
-	// works ok, kinda like a drunken tuna fish, across the board.
-	var queue = createQueue({
-		items: instruments,
-		getNext: function(instrumentId) {
-			if (USE_XHR) {
-				DOMLoader.sendRequest({
-					url: MIDI.soundfontUrl + instrumentId + "-" + filetype + ".js",
-					onprogress: getPercent,
-					onload: function (response) {
-						MIDI.Soundfont[instrumentId] = JSON.parse(response.responseText);
-						if (MIDI.loader) MIDI.loader.update(null, "Downloading", 100);
-						queue.getNext();
-					}
-				});
-			} else {
-				DOMLoader.script.add({
-					src: MIDI.soundfontUrl + instrumentId + "-" + filetype + ".js",
-					verify: "MIDI.Soundfont." + instrumentId,
-					callback: function() {
-						if (MIDI.loader) MIDI.loader.update(null, "Downloading...", 100);
-						queue.getNext();
-					}
-				});
-			}
-		},
-		onComplete: function() {
-			MIDI.AudioTag.connect(callback);
-		}
-	});
-};
+if (typeof MIDI === 'undefined') MIDI = {};
+
+(function(root) { 'use strict';
+
+	var supports = {}; // object of supported file types
+	var pending = 0; // pending file types to process
+	var canPlayThrough = function (src) { // check whether format plays through
+		pending ++;
+		var audio = new Audio();
+		var mime = src.split(';')[0];
+		audio.id = 'audio';
+		audio.setAttribute('preload', 'auto');
+		audio.setAttribute('audiobuffer', true);
+		audio.addEventListener('error', function() {
+			supports[mime] = false;
+			pending --;
+		}, false);
+		audio.addEventListener('canplaythrough', function() {
+			supports[mime] = true;
+			pending --;
+		}, false);
+		audio.src = 'data:' + src;
+		document.body.appendChild(audio);
+	};
 
-connect.webaudio = function(filetype, instruments, callback) {
-	if (MIDI.loader) MIDI.loader.message("Web Audio API...");
-	// works awesome! safari and chrome support
-	var queue = createQueue({
-		items: instruments,
-		getNext: function(instrumentId) {
-			if (USE_XHR) {
-				DOMLoader.sendRequest({
-					url: MIDI.soundfontUrl + instrumentId + "-" + filetype + ".js",
-					onprogress: getPercent,
-					onload: function(response) {
-						MIDI.Soundfont[instrumentId] = JSON.parse(response.responseText);
-						if (MIDI.loader) MIDI.loader.update(null, "Downloading...", 100);
-						queue.getNext();
-					}
-				});
-			} else {
-				DOMLoader.script.add({
-					src: MIDI.soundfontUrl + instrumentId + "-" + filetype + ".js",
-					verify: "MIDI.Soundfont." + instrumentId,
-					callback: function() {
-						if (MIDI.loader) MIDI.loader.update(null, "Downloading...", 100);
-						queue.getNext();
+	root.audioDetect = function(callback) {
+		/// detect jazz-midi plugin
+		if (navigator.requestMIDIAccess) {
+			var isNative = Function.prototype.toString.call(navigator.requestMIDIAccess).indexOf('[native code]');
+			if (isNative) { // has native midiapi support
+				supports['webmidi'] = true;
+			} else { // check for jazz plugin midiapi support
+				for (var n = 0; navigator.plugins.length > n; n ++) {
+					var plugin = navigator.plugins[n];
+					if (plugin.name.indexOf('Jazz-Plugin') >= 0) {
+						supports['webmidi'] = true;
 					}
-				});
+				}
 			}
-		},
-		onComplete: function() {
-			MIDI.WebAudioAPI.connect(callback);
 		}
-	});
-};
-
-/// Helpers
-
-var plugins = {
-	"#webmidi": true, 
-	"#webaudio": true, 
-	"#audiotag": true, 
-	"#flash": true 
-};
 
-var getPercent = function(event) {
-	if (!this.totalSize) {
-		if (this.getResponseHeader("Content-Length-Raw")) {
-			this.totalSize = parseInt(this.getResponseHeader("Content-Length-Raw"));
+		/// check whether <audio> tag is supported
+		if (typeof(Audio) === 'undefined') {
+			return callback({});
 		} else {
-			this.totalSize = event.total;
+			supports['audiotag'] = true;
 		}
-	}
-	var percent = this.totalSize ? Math.round(event.loaded / this.totalSize * 100) : "";
-	if (MIDI.loader) MIDI.loader.update(null, "Downloading...", percent);
-};
-
-var createQueue = function(conf) {
-	var self = {};
-	self.queue = [];
-	for (var key in conf.items) {
-		self.queue.push(conf.items[key]);
-	}
-	self.getNext = function() {
-		if (!self.queue.length) return conf.onComplete();
-		conf.getNext(self.queue.shift());
-	};
-	setTimeout(self.getNext, 1);
-	return self;
-};
-
-})();
-/*
-	--------------------------------------------
-	MIDI.Plugin : 0.3.2 : 2013/01/24
-	--------------------------------------------
-	https://github.com/mudcube/MIDI.js
-	--------------------------------------------
-	Inspired by javax.sound.midi (albeit a super simple version): 
-		http://docs.oracle.com/javase/6/docs/api/javax/sound/midi/package-summary.html
-	--------------------------------------------
-	Technologies:
-		MIDI.WebMIDIAPI
-		MIDI.WebAudioAPI
-		MIDI.Flash
-		MIDI.HTML5
-	--------------------------------------------
-	Helpers:
-		MIDI.GeneralMIDI
-		MIDI.channels
-		MIDI.keyToNote
-		MIDI.noteToKey
-*/
-
-if (typeof (MIDI) === "undefined") var MIDI = {};
-
-(function() { "use strict";
-
-/*
-	--------------------------------------------
-	Web MIDI API - Native Soundbank
-	--------------------------------------------
-	https://dvcs.w3.org/hg/audio/raw-file/tip/midi/specification.html
-*/
-
-(function () {
-	var plugin = null;
-	var output = null;
-	var channels = [];
-	var root = MIDI.WebMIDI = {};
-
-	root.setVolume = function (channel, volume) { // set channel volume
-		output.send([0xB0 + channel, 0x07, volume]);
-	};
-
-	root.programChange = function (channel, program) { // change channel instrument
-		output.send([0xC0 + channel, program]);
-	};
-
-	root.noteOn = function (channel, note, velocity, delay) {
-		output.send([0x90 + channel, note, velocity], delay * 1000);
-	};
 
-	root.noteOff = function (channel, note, delay) {
-		output.send([0x80 + channel, note], delay * 1000);
-	};
-
-	root.chordOn = function (channel, chord, velocity, delay) {
-		for (var n = 0; n < chord.length; n ++) {
-			var note = chord[n];
-			output.send([0x90 + channel, note, velocity], delay * 1000);
+		/// check for webaudio api support
+		if (window.AudioContext || window.webkitAudioContext) {
+			supports['webaudio'] = true;
 		}
-	};
-	
-	root.chordOff = function (channel, chord, delay) {
-		for (var n = 0; n < chord.length; n ++) {
-			var note = chord[n];
-			output.send([0x80, channel, note, velocity], delay * 1000);
+
+		/// check whether canPlayType is supported
+		var audio = new Audio();
+		if (typeof(audio.canPlayType) === 'undefined') {
+			return callback(supports);
 		}
-	};
-	
-	root.stopAllNotes = function () {
-		for (var channel = 0; channel < 16; channel ++) {
-			output.send([0xB0 + channel, 0x7B, 0]);
+
+		/// see what we can learn from the browser
+		var vorbis = audio.canPlayType('audio/ogg; codecs="vorbis"');
+		vorbis = (vorbis === 'probably' || vorbis === 'maybe');
+		var mpeg = audio.canPlayType('audio/mpeg');
+		mpeg = (mpeg === 'probably' || mpeg === 'maybe');
+		// maybe nothing is supported
+		if (!vorbis && !mpeg) {
+			callback(supports);
+			return;
 		}
-	};
 
-	root.getInput = function () {
-		return plugin.getInputs();
-	};
-	
-	root.getOutputs = function () {
-		return plugin.getOutputs();
-	};
+		/// or maybe something is supported
+		if (vorbis) canPlayThrough('audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA=');
+		if (mpeg) canPlayThrough('audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq');
 
-	root.connect = function (callback) {
-		MIDI.technology = "Web MIDI API";
-		MIDI.setVolume = root.setVolume;
-		MIDI.programChange = root.programChange;
-		MIDI.noteOn = root.noteOn;
-		MIDI.noteOff = root.noteOff;
-		MIDI.chordOn = root.chordOn;
-		MIDI.chordOff = root.chordOff;
-		MIDI.stopAllNotes = root.stopAllNotes;
-		MIDI.getInput = root.getInput;
-		MIDI.getOutputs = root.getOutputs;
-
-		navigator.requestMIDIAccess(function (access) {
-			plugin = access;
-			output = plugin.getOutput(0);
-			if (callback) callback();
-		}, function (err) {
-			console.log("uh-oh! Something went wrong!  Error code: " + err.code );
-		});
+		/// lets find out!
+		var time = (new Date()).getTime(); 
+		var interval = window.setInterval(function() {
+			var now = (new Date()).getTime();
+			var maxExecution = now - time > 5000;
+			if (!pending || maxExecution) {
+				window.clearInterval(interval);
+				callback(supports);
+			}
+		}, 1);
 	};
-})();
 
+})(MIDI);
 /*
-	--------------------------------------------
-	Web Audio API - OGG or MPEG Soundbank
-	--------------------------------------------
-	https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html
-	--------------------------------------------
+	---------------------------------------------------
+	GeneralMIDI
+	---------------------------------------------------
 */
 
-if (typeof (MIDI.WebAudioAPI) === "undefined") MIDI.WebAudioAPI = {};
-
-if (window.AudioContext || window.webkitAudioContext) (function () {
-
-	var AudioContext = window.AudioContext || window.webkitAudioContext;
-	var root = MIDI.WebAudioAPI;
-	var ctx;
-	var sources = {};
-	var masterVolume = 1;
-	var audioBuffers = {};
-	var audioLoader = function (instrument, urlList, index, bufferList, callback) {
-		var synth = MIDI.GeneralMIDI.byName[instrument];
-		var instrumentId = synth.number;
-		var url = urlList[index];
-		var base64 = MIDI.Soundfont[instrument][url].split(",")[1];
-		var buffer = Base64Binary.decodeArrayBuffer(base64);
-		ctx.decodeAudioData(buffer, function (buffer) {
-			var msg = url;
-			while (msg.length < 3) msg += "&nbsp;";
-			if (typeof (MIDI.loader) !== "undefined") {
-				MIDI.loader.update(null, synth.instrument + "<br>Processing: " + (index / 87 * 100 >> 0) + "%<br>" + msg);
-			}
-			buffer.id = url;
-			bufferList[index] = buffer;
-			//
-			if (bufferList.length === urlList.length) {
-				while (bufferList.length) {
-					buffer = bufferList.pop();
-					if (!buffer) continue;
-					var nodeId = MIDI.keyToNote[buffer.id];
-					audioBuffers[instrumentId + "" + nodeId] = buffer;
-				}
-				callback(instrument);
-			}
-		});
-	};
-
-	root.setVolume = function (n) {
-		masterVolume = n;
-	};
+(function(root) { 'use strict';
 
-	root.programChange = function (channel, program) {
-		MIDI.channels[channel].instrument = program;
-	};
-
-	root.noteOn = function (channel, note, velocity, delay) {
-		/// check whether the note exists
-		if (!MIDI.channels[channel]) return;
-		var instrument = MIDI.channels[channel].instrument;
-		if (!audioBuffers[instrument + "" + note]) return;
-		/// convert relative delay to absolute delay
-		if (delay < ctx.currentTime) delay += ctx.currentTime;
-		/// crate audio buffer
-		var source = ctx.createBufferSource();
-		sources[channel + "" + note] = source;
-		source.buffer = audioBuffers[instrument + "" + note];
-		source.connect(ctx.destination);
-		///
-		var gainNode = ctx.createGainNode();
-		var value = (velocity / 100) * masterVolume * 2 - 1;
-		gainNode.connect(ctx.destination);
-		gainNode.gain.value = Math.max(-1, value);
-		source.connect(gainNode);
-		source.noteOn(delay || 0);
-		return source;
-	};
+	root.GM = (function(arr) {
+		var clean = function(name) {
+			return name.replace(/[^a-z0-9 ]/gi, '').replace(/[ ]/g, '_').toLowerCase();
+		};
+		var res = {
+			byName: { },
+			byId: { },
+			byCategory: { }
+		};
+		for (var key in arr) {
+			var list = arr[key];
+			for (var n = 0, length = list.length; n < length; n++) {
+				var instrument = list[n];
+				if (!instrument) continue;
+				var num = parseInt(instrument.substr(0, instrument.indexOf(' ')), 10);
+				instrument = instrument.replace(num + ' ', '');
+				res.byId[--num] = 
+				res.byName[clean(instrument)] = 
+				res.byCategory[clean(key)] = {
+					id: clean(instrument),
+					instrument: instrument,
+					number: num,
+					category: key
+				};
+			}
+		}
+		return res;
+	})({
+		'Piano': ['1 Acoustic Grand Piano', '2 Bright Acoustic Piano', '3 Electric Grand Piano', '4 Honky-tonk Piano', '5 Electric Piano 1', '6 Electric Piano 2', '7 Harpsichord', '8 Clavinet'],
+		'Chromatic Percussion': ['9 Celesta', '10 Glockenspiel', '11 Music Box', '12 Vibraphone', '13 Marimba', '14 Xylophone', '15 Tubular Bells', '16 Dulcimer'],
+		'Organ': ['17 Drawbar Organ', '18 Percussive Organ', '19 Rock Organ', '20 Church Organ', '21 Reed Organ', '22 Accordion', '23 Harmonica', '24 Tango Accordion'],
+		'Guitar': ['25 Acoustic Guitar (nylon)', '26 Acoustic Guitar (steel)', '27 Electric Guitar (jazz)', '28 Electric Guitar (clean)', '29 Electric Guitar (muted)', '30 Overdriven Guitar', '31 Distortion Guitar', '32 Guitar Harmonics'],
+		'Bass': ['33 Acoustic Bass', '34 Electric Bass (finger)', '35 Electric Bass (pick)', '36 Fretless Bass', '37 Slap Bass 1', '38 Slap Bass 2', '39 Synth Bass 1', '40 Synth Bass 2'],
+		'Strings': ['41 Violin', '42 Viola', '43 Cello', '44 Contrabass', '45 Tremolo Strings', '46 Pizzicato Strings', '47 Orchestral Harp', '48 Timpani'],
+		'Ensemble': ['49 String Ensemble 1', '50 String Ensemble 2', '51 Synth Strings 1', '52 Synth Strings 2', '53 Choir Aahs', '54 Voice Oohs', '55 Synth Choir', '56 Orchestra Hit'],
+		'Brass': ['57 Trumpet', '58 Trombone', '59 Tuba', '60 Muted Trumpet', '61 French Horn', '62 Brass Section', '63 Synth Brass 1', '64 Synth Brass 2'],
+		'Reed': ['65 Soprano Sax', '66 Alto Sax', '67 Tenor Sax', '68 Baritone Sax', '69 Oboe', '70 English Horn', '71 Bassoon', '72 Clarinet'],
+		'Pipe': ['73 Piccolo', '74 Flute', '75 Recorder', '76 Pan Flute', '77 Blown Bottle', '78 Shakuhachi', '79 Whistle', '80 Ocarina'],
+		'Synth Lead': ['81 Lead 1 (square)', '82 Lead 2 (sawtooth)', '83 Lead 3 (calliope)', '84 Lead 4 (chiff)', '85 Lead 5 (charang)', '86 Lead 6 (voice)', '87 Lead 7 (fifths)', '88 Lead 8 (bass + lead)'],
+		'Synth Pad': ['89 Pad 1 (new age)', '90 Pad 2 (warm)', '91 Pad 3 (polysynth)', '92 Pad 4 (choir)', '93 Pad 5 (bowed)', '94 Pad 6 (metallic)', '95 Pad 7 (halo)', '96 Pad 8 (sweep)'],
+		'Synth Effects': ['97 FX 1 (rain)', '98 FX 2 (soundtrack)', '99 FX 3 (crystal)', '100 FX 4 (atmosphere)', '101 FX 5 (brightness)', '102 FX 6 (goblins)', '103 FX 7 (echoes)', '104 FX 8 (sci-fi)'],
+		'Ethnic': ['105 Sitar', '106 Banjo', '107 Shamisen', '108 Koto', '109 Kalimba', '110 Bagpipe', '111 Fiddle', '112 Shanai'],
+		'Percussive': ['113 Tinkle Bell', '114 Agogo', '115 Steel Drums', '116 Woodblock', '117 Taiko Drum', '118 Melodic Tom', '119 Synth Drum'],
+		'Sound effects': ['120 Reverse Cymbal', '121 Guitar Fret Noise', '122 Breath Noise', '123 Seashore', '124 Bird Tweet', '125 Telephone Ring', '126 Helicopter', '127 Applause', '128 Gunshot']
+	});
 
-	root.noteOff = function (channel, note, delay) {
-		delay = delay || 0;
-		if (delay < ctx.currentTime) delay += ctx.currentTime;
-		var source = sources[channel + "" + note];
-		if (!source) return;
-		// @Miranet: "the values of 0.2 and 0.3 could ofcourse be used as 
-		// a 'release' parameter for ADSR like time settings."
-		source.gain.linearRampToValueAtTime(1, delay);
-		source.gain.linearRampToValueAtTime(0, delay + 0.2);
-		source.noteOff(delay + 0.3);
-		return source;
+	/* get/setInstrument
+	--------------------------------------------------- */
+	root.getInstrument = function(channelId) {
+		var channel = root.channels[channelId];
+		return channel && channel.instrument;
 	};
 
-	root.chordOn = function (channel, chord, velocity, delay) {
-		var ret = {}, note;
-		for (var n = 0, length = chord.length; n < length; n++) {
-			ret[note = chord[n]] = root.noteOn(channel, note, velocity, delay);
+	root.setInstrument = function(channelId, program, delay) {
+		var channel = root.channels[channelId];
+		if (delay) {
+			return setTimeout(function() {
+				channel.instrument = program;
+			}, delay);
+		} else {
+			channel.instrument = program;
 		}
-		return ret;
 	};
 
-	root.chordOff = function (channel, chord, delay) {
-		var ret = {}, note;
-		for (var n = 0, length = chord.length; n < length; n++) {
-			ret[note = chord[n]] = root.noteOff(channel, note, delay);
-		}
-		return ret;
+	/* get/setMono
+	--------------------------------------------------- */
+	root.getMono = function(channelId) {
+		var channel = root.channels[channelId];
+		return channel && channel.mono;
 	};
 
-	root.connect = function (callback) {
-		MIDI.technology = "Web Audio API";
-		MIDI.setVolume = root.setVolume;
-		MIDI.programChange = root.programChange;
-		MIDI.noteOn = root.noteOn;
-		MIDI.noteOff = root.noteOff;
-		MIDI.chordOn = root.chordOn;
-		MIDI.chordOff = root.chordOff;
-		//
-		MIDI.Player.ctx = ctx = new AudioContext();
-		///
-		var urlList = [];
-		var keyToNote = MIDI.keyToNote;
-		for (var key in keyToNote) urlList.push(key);
-		var bufferList = [];
-		var pending = {};
-		var oncomplete = function(instrument) {
-			delete pending[instrument];
-			for (var key in pending) break;
-			if (!key) callback();
-		};
-		for (var instrument in MIDI.Soundfont) {
-			pending[instrument] = true;
-			for (var i = 0; i < urlList.length; i++) {
-				audioLoader(instrument, urlList, i, bufferList, oncomplete);
-			}
+	root.setMono = function(channelId, truthy, delay) {
+		var channel = root.channels[channelId];
+		if (delay) {
+			return setTimeout(function() {
+				channel.mono = truthy;
+			}, delay);
+		} else {
+			channel.mono = truthy;
 		}
 	};
-})();
-
-/*
-	AudioTag <audio> - OGG or MPEG Soundbank
-	--------------------------------------
-	http://dev.w3.org/html5/spec/Overview.html#the-audio-element
-*/
-
-if (window.Audio) (function () {
 
-	var root = MIDI.AudioTag = {};
-	var note2id = {};
-	var volume = 1; // floating point 
-	var channel_nid = -1; // current channel
-	var channels = []; // the audio channels
-	var notes = {}; // the piano keys
-	for (var nid = 0; nid < 12; nid++) {
-		channels[nid] = new Audio();
-	}
-
-	var playChannel = function (channel, note) {
-		if (!MIDI.channels[channel]) return;
-		var instrument = MIDI.channels[channel].instrument;
-		var id = MIDI.GeneralMIDI.byId[instrument].id;
-		var note = notes[note];
-		if (!note) return;
-		var nid = (channel_nid + 1) % channels.length;
-		var time = (new Date()).getTime();
-		var audio = channels[nid];
-		audio.src = MIDI.Soundfont[id][note.id];
-		audio.volume = volume;
-		audio.play();
-		channel_nid = nid;
+	/* get/setOmni
+	--------------------------------------------------- */
+	root.getOmni = function(channelId) {
+		var channel = root.channels[channelId];
+		return channel && channel.omni;
 	};
 
-	root.programChange = function (channel, program) {
-		MIDI.channels[channel].instrument = program;
+	root.setOmni = function(channelId, truthy) {
+		var channel = root.channels[channelId];
+		if (delay) {
+			return setTimeout(function() {
+				channel.omni = truthy;	
+			}, delay);
+		} else {
+			channel.omni = truthy;
+		}
 	};
 
-	root.setVolume = function (n) {
-		volume = n;
+	/* get/setSolo
+	--------------------------------------------------- */
+	root.getSolo = function(channelId) {
+		var channel = root.channels[channelId];
+		return channel && channel.solo;
 	};
 
-	root.noteOn = function (channel, note, velocity, delay) {
-		var id = note2id[note];
-		if (!notes[id]) return;
+	root.setSolo = function(channelId, truthy) {
+		var channel = root.channels[channelId];
 		if (delay) {
-			return window.setTimeout(function () {
-				playChannel(channel, id);
-			}, delay * 1000);
+			return setTimeout(function() {
+				channel.solo = truthy;	
+			}, delay);
 		} else {
-			playChannel(channel, id);
+			channel.solo = truthy;
 		}
 	};
-	
-	root.noteOff = function (channel, note, delay) {
 
-	};
-	
-	root.chordOn = function (channel, chord, velocity, delay) {
-		for (var key in chord) {
-			var n = chord[key];
-			var id = note2id[n];
-			if (!notes[id]) continue;
-			playChannel(channel, id);
+	/* channels
+	--------------------------------------------------- */
+	root.channels = (function() { // 0 - 15 channels
+		var channels = {};
+		for (var i = 0; i < 16; i++) {
+			channels[i] = { // default values
+				instrument: i,
+				pitchBend: 0,
+				mute: false,
+				mono: false,
+				omni: false,
+				solo: false
+			};
 		}
-	};
-	
-	root.chordOff = function (channel, chord, delay) {
+		return channels;
+	})();
 
-	};
-	
-	root.stopAllNotes = function () {
-		for (var nid = 0, length = channels.length; nid < length; nid++) {
-			channels[nid].pause();
-		}
-	};
-	root.connect = function (callback) {
-		var loading = {};
-		for (var key in MIDI.keyToNote) {
-			note2id[MIDI.keyToNote[key]] = key;
-			notes[key] = {
-				id: key
-			};
+	/* note conversions
+	--------------------------------------------------- */
+	root.keyToNote = {}; // C8  == 108
+	root.noteToKey = {}; // 108 ==  C8
+
+	(function() {
+		var A0 = 0x15; // first note
+		var C8 = 0x6C; // last note
+		var number2key = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];
+		for (var n = A0; n <= C8; n++) {
+			var octave = (n - 12) / 12 >> 0;
+			var name = number2key[n % 12] + octave;
+			root.keyToNote[name] = n;
+			root.noteToKey[n] = name;
 		}
-		MIDI.technology = "HTML Audio Tag";
-		MIDI.setVolume = root.setVolume;
-		MIDI.programChange = root.programChange;
-		MIDI.noteOn = root.noteOn;
-		MIDI.noteOff = root.noteOff;
-		MIDI.chordOn = root.chordOn;
-		MIDI.chordOff = root.chordOff;
-		///
-		if (callback) callback();
-	};
-})();
+	})();
 
+})(MIDI);
 /*
-	--------------------------------------------
-	Flash - MP3 Soundbank
-	--------------------------------------------
-	http://www.schillmania.com/projects/soundmanager2/
-	--------------------------------------------
+	----------------------------------------------------------
+	MIDI.Plugin : 0.3.4 : 2015-01-15
+	----------------------------------------------------------
+	https://github.com/mudcube/MIDI.js
+	----------------------------------------------------------
+	Inspired by javax.sound.midi (albeit a super simple version): 
+		http://docs.oracle.com/javase/6/docs/api/javax/sound/midi/package-summary.html
+	----------------------------------------------------------
+	Technologies
+	----------------------------------------------------------
+		Web MIDI API - no native support yet (jazzplugin)
+		Web Audio API - firefox 25+, chrome 10+, safari 6+, opera 15+
+		HTML5 Audio Tag - ie 9+, firefox 3.5+, chrome 4+, safari 4+, opera 9.5+, ios 4+, android 2.3+
+	----------------------------------------------------------
 */
-	
-(function () {
 
-	var root = MIDI.Flash = {};
-	var noteReverse = {};
-	var notes = {};
+if (typeof MIDI === 'undefined') MIDI = {};
 
-	root.programChange = function (channel, program) {
-		MIDI.channels[channel].instrument = program;
-	};
+MIDI.Soundfont = MIDI.Soundfont || {};
+MIDI.Player = MIDI.Player || {};
 
-	root.setVolume = function (channel, note) {
+(function(root) { 'use strict';
 
-	};
+	root.DEBUG = true;
+	root.USE_XHR = true;
+	root.soundfontUrl = './soundfont/';
 
-	root.noteOn = function (channel, note, velocity, delay) {
-		if (!MIDI.channels[channel]) return;
-		var instrument = MIDI.channels[channel].instrument;
-		var id = MIDI.GeneralMIDI.byId[instrument].number;
-		note = id + "" + noteReverse[note];
-		if (!notes[note]) return;
-		if (delay) {
-			return window.setTimeout(function() { 
-				notes[note].play({ volume: velocity * 2 });
-			}, delay * 1000);
-		} else {
-			notes[note].play({ volume: velocity * 2 });
+	/*
+		MIDI.loadPlugin({
+			callback: function() { },
+			onprogress: function(state, percent) { },
+			targetFormat: 'mp3', // optionally can force to use MP3 (for instance on mobile networks)
+			instrument: 'acoustic_grand_piano', // or 1 (default)
+			instruments: [ 'acoustic_grand_piano', 'acoustic_guitar_nylon' ] // or multiple instruments
+		});
+	*/
+
+	root.loadPlugin = function(opts) {
+		if (typeof opts === 'function') {
+			opts = {callback: opts};
 		}
-	};
 
-	root.noteOff = function (channel, note, delay) {
+		root.soundfontUrl = opts.soundfontUrl || root.soundfontUrl;
+
+		/// Detect the best type of audio to use
+		root.audioDetect(function(supports) {
+			var hash = window.location.hash;
+			var api = '';
+
+			/// use the most appropriate plugin if not specified
+			if (supports[opts.api]) {
+				api = opts.api;
+			} else if (supports[hash.substr(1)]) {
+				api = hash.substr(1);
+			} else if (supports.webmidi) {
+				api = 'webmidi';
+			} else if (window.AudioContext) { // Chrome
+				api = 'webaudio';
+			} else if (window.Audio) { // Firefox
+				api = 'audiotag';
+			}
 
-	};
+			if (connect[api]) {
+				/// use audio/ogg when supported
+				if (opts.targetFormat) {
+					var audioFormat = opts.targetFormat;
+				} else { // use best quality
+					var audioFormat = supports['audio/ogg'] ? 'ogg' : 'mp3';
+				}
 
-	root.chordOn = function (channel, chord, velocity, delay) {
-		if (!MIDI.channels[channel]) return;
-		var instrument = MIDI.channels[channel].instrument;
-		var id = MIDI.GeneralMIDI.byId[instrument].number;
-		for (var key in chord) {
-			var n = chord[key];
-			var note = id + "" + noteReverse[n];
-			if (notes[note]) {
-				notes[note].play({ volume: velocity * 2 });
+				/// load the specified plugin
+				root.__api = api;
+				root.__audioFormat = audioFormat;
+				root.supports = supports;
+				root.loadResource(opts);
 			}
-		}
+		});
 	};
 
-	root.chordOff = function (channel, chord, delay) {
+	/*
+		root.loadResource({
+			callback: function() { },
+			onprogress: function(state, percent) { },
+			instrument: 'banjo'
+		})
+	*/
 
+	root.loadResource = function(opts) {
+		var instruments = opts.instruments || opts.instrument || 'acoustic_grand_piano';
+		///
+		if (typeof instruments !== 'object') {
+			if (instruments || instruments === 0) {
+				instruments = [instruments];
+			} else {
+				instruments = [];
+			}
+		}
+		/// convert numeric ids into strings
+		for (var i = 0; i < instruments.length; i ++) {
+			var instrument = instruments[i];
+			if (instrument === +instrument) { // is numeric
+				if (root.GM.byId[instrument]) {
+					instruments[i] = root.GM.byId[instrument].id;
+				}
+			}
+		}
+		///
+		opts.format = root.__audioFormat;
+		opts.instruments = instruments;
+		///
+		connect[root.__api](opts);
 	};
 
-	root.stopAllNotes = function () {
-
+	var connect = {
+		webmidi: function(opts) {
+			// cant wait for this to be standardized!
+			root.WebMIDI.connect(opts);
+		},
+		audiotag: function(opts) {
+			// works ok, kinda like a drunken tuna fish, across the board
+			// http://caniuse.com/audio
+			requestQueue(opts, 'AudioTag');
+		},
+		webaudio: function(opts) {
+			// works awesome! safari, chrome and firefox support
+			// http://caniuse.com/web-audio
+			requestQueue(opts, 'WebAudio');
+		}
 	};
 
-	root.connect = function (callback) {
-		soundManager.flashVersion = 9;
-		soundManager.useHTML5Audio = true;
-		soundManager.url = '../inc/SoundManager2/swf/';
-		soundManager.useHighPerformance = true;
-		soundManager.wmode = 'transparent';
-		soundManager.flashPollingInterval = 1;
-		soundManager.debugMode = false;
-		soundManager.onload = function () {
-			var createBuffer = function(instrument, id, onload) {
-				var synth = MIDI.GeneralMIDI.byName[instrument];
-				var instrumentId = synth.number;
-				notes[instrumentId+""+id] = soundManager.createSound({
-					id: id,
-					url: MIDI.soundfontUrl + instrument + "-mp3/" + id + ".mp3",
-					multiShot: true,
-					autoLoad: true,
-					onload: onload
-				});			
-			};
-			for (var instrument in MIDI.Soundfont) {
-				var loaded = [];
-				var onload = function () {
-					loaded.push(this.sID);
-					if (typeof (MIDI.loader) === "undefined") return;
-					MIDI.loader.update(null, "Processing: " + this.sID);
-				};
-				for (var i = 0; i < 88; i++) {
-					var id = noteReverse[i + 21];
-					createBuffer(instrument, id, onload);
-				}
+	var requestQueue = function(opts, context) {
+		var audioFormat = opts.format;
+		var instruments = opts.instruments;
+		var onprogress = opts.onprogress;
+		var onerror = opts.onerror;
+		var onload = opts.callback;
+		///
+		var length = instruments.length;
+		var pending = length;
+		var waitForEnd = function() {
+			if (!--pending) {
+				onprogress && onprogress('load', 1.0);
+				root[context].connect(opts);
 			}
-			///
-			MIDI.technology = "Flash";
-			MIDI.setVolume = root.setVolume;
-			MIDI.programChange = root.programChange;
-			MIDI.noteOn = root.noteOn;
-			MIDI.noteOff = root.noteOff;
-			MIDI.chordOn = root.chordOn;
-			MIDI.chordOff = root.chordOff;
-			//
-			var interval = window.setInterval(function () {
-				if (loaded.length !== 88) return;
-				window.clearInterval(interval);
-				if (callback) callback();
-			}, 25);
 		};
-		soundManager.onerror = function () {
-
+		///
+		for (var i = 0; i < length; i ++) {
+			var instrumentId = instruments[i];
+			if (MIDI.Soundfont[instrumentId]) { // already loaded
+				waitForEnd();
+			} else { // needs to be requested
+				sendRequest(instruments[i], audioFormat, function(fpoint) {
+					onprogress && onprogress('load', fpoint + (pending - 1) / length, instrumentId);
+				}, function() {
+					waitForEnd();
+				}, onerror);
+			}
 		};
-		for (var key in MIDI.keyToNote) {
-			noteReverse[MIDI.keyToNote[key]] = key;
-		}
 	};
-})();
 
-/*
-	helper functions
-*/
-
-// instrument-tracker
-MIDI.GeneralMIDI = (function (arr) {
-	var clean = function(v) {
-		return v.replace(/[^a-z0-9 ]/gi, "").replace(/[ ]/g, "_").toLowerCase();
-	};
-	var ret = {
-		byName: {},
-		byId: {},
-		byCategory: {}
-	};
-	for (var key in arr) {
-		var list = arr[key];
-		for (var n = 0, length = list.length; n < length; n++) {
-			var instrument = list[n];
-			if (!instrument) continue;
-			var num = parseInt(instrument.substr(0, instrument.indexOf(" ")), 10);
-			instrument = instrument.replace(num + " ", "");
-			ret.byId[--num] = 
-			ret.byName[clean(instrument)] = 
-			ret.byCategory[clean(key)] = {
-				id: clean(instrument),
-				instrument: instrument,
-				number: num,
-				category: key
-			};
+	var sendRequest = function(instrumentId, audioFormat, onprogress, onload, onerror) {
+		var soundfontPath = root.soundfontUrl + instrumentId + '-' + audioFormat + '.js';
+		if (root.USE_XHR) {
+			root.util.request({
+				url: soundfontPath,
+				onerror: onerror,
+				onprogress: function(event) {
+					if (!this.totalBytes) { // requires server to send Content-Length-Raw - actual bytes non-gzipped
+						var rawLength = this.getResponseHeader('Content-Length-Raw');
+						if (rawLength) {
+							this.totalBytes = parseInt(rawLength);
+						} else {
+							this.totalBytes = event.total;
+						}
+					}
+					///
+					if (this.totalBytes) {
+						onprogress(event.loaded / this.totalBytes);
+					}
+				},
+				onload: function(response) {
+					var script = document.createElement('script');
+					script.language = 'javascript';
+					script.type = 'text/javascript';
+					script.text = response.responseText;
+					document.body.appendChild(script);
+					///
+					onload();
+				}
+			});
+		} else {
+			dom.loadScript.add({
+				url: soundfontPath,
+				verify: 'MIDI.Soundfont["' + instrumentId + '"]',
+				onerror: onerror,
+				callback: function() {
+					onload();
+				}
+			});
 		}
-	}
-	return ret;
-})({
-	'Piano': ['1 Acoustic Grand Piano', '2 Bright Acoustic Piano', '3 Electric Grand Piano', '4 Honky-tonk Piano', '5 Electric Piano 1', '6 Electric Piano 2', '7 Harpsichord', '8 Clavinet'],
-	'Chromatic Percussion': ['9 Celesta', '10 Glockenspiel', '11 Music Box', '12 Vibraphone', '13 Marimba', '14 Xylophone', '15 Tubular Bells', '16 Dulcimer'],
-	'Organ': ['17 Drawbar Organ', '18 Percussive Organ', '19 Rock Organ', '20 Church Organ', '21 Reed Organ', '22 Accordion', '23 Harmonica', '24 Tango Accordion'],
-	'Guitar': ['25 Acoustic Guitar (nylon)', '26 Acoustic Guitar (steel)', '27 Electric Guitar (jazz)', '28 Electric Guitar (clean)', '29 Electric Guitar (muted)', '30 Overdriven Guitar', '31 Distortion Guitar', '32 Guitar Harmonics'],
-	'Bass': ['33 Acoustic Bass', '34 Electric Bass (finger)', '35 Electric Bass (pick)', '36 Fretless Bass', '37 Slap Bass 1', '38 Slap Bass 2', '39 Synth Bass 1', '40 Synth Bass 2'],
-	'Strings': ['41 Violin', '42 Viola', '43 Cello', '44 Contrabass', '45 Tremolo Strings', '46 Pizzicato Strings', '47 Orchestral Harp', '48 Timpani'],
-	'Ensemble': ['49 String Ensemble 1', '50 String Ensemble 2', '51 Synth Strings 1', '52 Synth Strings 2', '53 Choir Aahs', '54 Voice Oohs', '55 Synth Choir', '56 Orchestra Hit'],
-	'Brass': ['57 Trumpet', '58 Trombone', '59 Tuba', '60 Muted Trumpet', '61 French Horn', '62 Brass Section', '63 Synth Brass 1', '64 Synth Brass 2'],
-	'Reed': ['65 Soprano Sax', '66 Alto Sax', '67 Tenor Sax', '68 Baritone Sax', '69 Oboe', '70 English Horn', '71 Bassoon', '72 Clarinet'],
-	'Pipe': ['73 Piccolo', '74 Flute', '75 Recorder', '76 Pan Flute', '77 Blown Bottle', '78 Shakuhachi', '79 Whistle', '80 Ocarina'],
-	'Synth Lead': ['81 Lead 1 (square)', '82 Lead 2 (sawtooth)', '83 Lead 3 (calliope)', '84 Lead 4 (chiff)', '85 Lead 5 (charang)', '86 Lead 6 (voice)', '87 Lead 7 (fifths)', '88 Lead 8 (bass + lead)'],
-	'Synth Pad': ['89 Pad 1 (new age)', '90 Pad 2 (warm)', '91 Pad 3 (polysynth)', '92 Pad 4 (choir)', '93 Pad 5 (bowed)', '94 Pad 6 (metallic)', '95 Pad 7 (halo)', '96 Pad 8 (sweep)'],
-	'Synth Effects': ['97 FX 1 (rain)', '98 FX 2 (soundtrack)', '99 FX 3 (crystal)', '100 FX 4 (atmosphere)', '101 FX 5 (brightness)', '102 FX 6 (goblins)', '103 FX 7 (echoes)', '104 FX 8 (sci-fi)'],
-	'Ethnic': ['105 Sitar', '106 Banjo', '107 Shamisen', '108 Koto', '109 Kalimba', '110 Bagpipe', '111 Fiddle', '112 Shanai'],
-	'Percussive': ['113 Tinkle Bell', '114 Agogo', '115 Steel Drums', '116 Woodblock', '117 Taiko Drum', '118 Melodic Tom', '119 Synth Drum'],
-	'Sound effects': ['120 Reverse Cymbal', '121 Guitar Fret Noise', '122 Breath Noise', '123 Seashore', '124 Bird Tweet', '125 Telephone Ring', '126 Helicopter', '127 Applause', '128 Gunshot']
-});
-
-// channel-tracker
-MIDI.channels = (function () { // 0 - 15 channels
-	var channels = {};
-	for (var n = 0; n < 16; n++) {
-		channels[n] = { // default values
-			instrument: 0,
-			// Acoustic Grand Piano
-			mute: false,
-			mono: false,
-			omni: false,
-			solo: false
-		};
-	}
-	return channels;
-})();
+	};
 
-//
-MIDI.pianoKeyOffset = 21;
-
-// note conversions
-MIDI.keyToNote = {}; // C8  == 108
-MIDI.noteToKey = {}; // 108 ==  C8
-(function () {
-	var A0 = 0x15; // first note
-	var C8 = 0x6C; // last note
-	var number2key = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "B"];
-	for (var n = A0; n <= C8; n++) {
-		var octave = (n - 12) / 12 >> 0;
-		var name = number2key[n % 12] + octave;
-		MIDI.keyToNote[name] = n;
-		MIDI.noteToKey[n] = name;
-	}
-})();
+	root.setDefaultPlugin = function(midi) {
+		for (var key in midi) {
+			root[key] = midi[key];
+		}
+	};
 
-})();
+})(MIDI);
 /*
-	-------------------------------------
-	MIDI.Player : 0.3
-	-------------------------------------
+	----------------------------------------------------------
+	MIDI.Player : 0.3.1 : 2015-01-15
+	----------------------------------------------------------
 	https://github.com/mudcube/MIDI.js
-	-------------------------------------
-	#jasmid
-	-------------------------------------
+	----------------------------------------------------------
 */
 
-if (typeof (MIDI) === "undefined") var MIDI = {};
-if (typeof (MIDI.Player) === "undefined") MIDI.Player = {};
-
-(function() { "use strict";
-
-var root = MIDI.Player;
-root.callback = undefined; // your custom callback goes here!
-root.currentTime = 0;
-root.endTime = 0; 
-root.restart = 0; 
-root.playing = false;
-root.timeWarp = 1;
-
-//
-root.start =
-root.resume = function () {
-	if (root.currentTime < -1) root.currentTime = -1;
-	startAudio(root.currentTime);
+if (typeof MIDI === 'undefined') MIDI = {};
+if (typeof MIDI.Player === 'undefined') MIDI.Player = {};
+
+(function() { 'use strict';
+
+var midi = MIDI.Player;
+midi.callback = undefined; // your custom callback goes here!
+midi.currentTime = 0;
+midi.endTime = 0; 
+midi.restart = 0; 
+midi.playing = false;
+midi.timeWarp = 1;
+midi.startDelay = 0;
+midi.BPM = 120;
+
+midi.start =
+midi.resume = function (callback) {
+    if (midi.currentTime < -1) midi.currentTime = -1;
+    startAudio(midi.currentTime, null, callback);
 };
 
-root.pause = function () {
-	var tmp = root.restart;
+midi.pause = function () {
+	var tmp = midi.restart;
 	stopAudio();
-	root.restart = tmp;
+	midi.restart = tmp;
 };
 
-root.stop = function () {
+midi.stop = function () {
 	stopAudio();
-	root.restart = 0;
-	root.currentTime = 0;
+	midi.restart = 0;
+	midi.currentTime = 0;
 };
 
-root.addListener = function(callback) {
+midi.addListener = function(callback) {
 	onMidiEvent = callback;
 };
 
-root.removeListener = function() {
+midi.removeListener = function() {
 	onMidiEvent = undefined;
 };
 
-root.clearAnimation = function() {
-	if (root.interval)  {
-		window.clearInterval(root.interval);
+midi.clearAnimation = function() {
+	if (midi.interval)  {
+		window.clearInterval(midi.interval);
 	}
 };
 
-root.setAnimation = function(config) {
-	var callback = (typeof(config) === "function") ? config : config.callback;
+midi.setAnimation = function(config) {
+	var callback = (typeof(config) === 'function') ? config : config.callback;
 	var interval = config.interval || 30;
 	var currentTime = 0;
 	var tOurTime = 0;
 	var tTheirTime = 0;
 	//
-	root.clearAnimation();
-	root.interval = window.setInterval(function () {
-		if (root.endTime === 0) return;
-		if (root.playing) {
-			currentTime = (tTheirTime === root.currentTime) ? tOurTime - (new Date).getTime() : 0;
-			if (root.currentTime === 0) {
+	midi.clearAnimation();
+	midi.interval = setInterval(function () {
+		if (midi.endTime === 0) return;
+		if (midi.playing) {
+			currentTime = (tTheirTime === midi.currentTime) ? tOurTime - (new Date).getTime() : 0;
+			if (midi.currentTime === 0) {
 				currentTime = 0;
 			} else {
-				currentTime = root.currentTime - currentTime;
+				currentTime = midi.currentTime - currentTime;
 			}
-			if (tTheirTime !== root.currentTime) {
+			if (tTheirTime !== midi.currentTime) {
 				tOurTime = (new Date).getTime();
-				tTheirTime = root.currentTime;
+				tTheirTime = midi.currentTime;
 			}
 		} else { // paused
-			currentTime = root.currentTime;
+			currentTime = midi.currentTime;
 		}
-		var endTime = root.endTime;
+		var endTime = midi.endTime;
 		var percent = currentTime / endTime;
 		var total = currentTime / 1000;
 		var minutes = total / 60;
@@ -882,46 +564,84 @@ root.setAnimation = function(config) {
 
 // helpers
 
-root.loadMidiFile = function() { // reads midi into javascript array of events
-	root.replayer = new Replayer(MidiFile(root.currentData), root.timeWarp);
-	root.data = root.replayer.getData();
-	root.endTime = getLength();
+midi.loadMidiFile = function(onsuccess, onprogress, onerror) { // reads midi into javascript array of events
+	try {
+		midi.replayer = new Replayer(MidiFile(midi.currentData), midi.timeWarp, null, midi.BPM);
+		midi.data = midi.replayer.getData();
+		midi.endTime = getLength();
+		///
+		MIDI.loadPlugin({
+	//		instruments: midi.getFileInstruments(),
+			callback: onsuccess,
+			onprogress: onprogress,
+			onerror: onerror
+		});
+	} catch(err) {
+		onerror && onerror(err);
+	}
 };
 
-root.loadFile = function (file, callback) {
-	root.stop();
-	if (file.indexOf("base64,") !== -1) {
-		var data = window.atob(file.split(",")[1]);
-		root.currentData = data;
-		root.loadMidiFile();
-		if (callback) callback(data);
+midi.loadFile = function (file, onsuccess, onprogress, onerror) {
+	midi.stop();
+	if (file.indexOf('base64,') !== -1) {
+		var data = window.atob(file.split(',')[1]);
+		midi.currentData = data;
+		midi.loadMidiFile(onsuccess, onprogress, onerror);
 		return;
 	}
 	///
-	var title = file.split(" - ")[1] || file;
-	document.getElementById("playback-title").innerHTML = title.replace(".mid","");
-	///
 	var fetch = new XMLHttpRequest();
 	fetch.open('GET', file);
-	fetch.overrideMimeType("text/plain; charset=x-user-defined");
+	fetch.overrideMimeType('text/plain; charset=x-user-defined');
 	fetch.onreadystatechange = function () {
-		if (this.readyState === 4 && this.status === 200) {
-			var t = this.responseText || "";
-			var ff = [];
-			var mx = t.length;
-			var scc = String.fromCharCode;
-			for (var z = 0; z < mx; z++) {
-				ff[z] = scc(t.charCodeAt(z) & 255);
+		if (this.readyState === 4) {
+			if (this.status === 200) {
+				var t = this.responseText || '';
+				var ff = [];
+				var mx = t.length;
+				var scc = String.fromCharCode;
+				for (var z = 0; z < mx; z++) {
+					ff[z] = scc(t.charCodeAt(z) & 255);
+				}
+				var data = ff.join('');
+				midi.currentData = data;
+				midi.loadMidiFile(onsuccess, onprogress, onerror);
+			} else {
+				onerror && onerror('Unable to load MIDI file');
 			}
-			var data = ff.join("");
-			root.currentData = data;
-			root.loadMidiFile();
-			if (callback) callback(data);
 		}
 	};
 	fetch.send();
 };
 
+midi.getFileInstruments = function() {
+	var instruments = {};
+	var programs = {};
+	for (var n = 0; n < midi.data.length; n ++) {
+		var event = midi.data[n][0].event;
+		if (event.type !== 'channel') continue;
+		var channel = event.channel;
+		switch(event.subtype) {
+			case 'controller':
+//				console.log(event.channel, MIDI.defineControl[event.controllerType], event.value);
+				break;
+			case 'programChange':
+				programs[channel] = event.programNumber;
+				break;
+			case 'noteOn':
+				var program = programs[channel];
+				var gm = MIDI.GM.byId[isFinite(program) ? program : channel];
+				instruments[gm.id] = true;
+				break;
+		}
+	}
+	var ret = [];
+	for (var key in instruments) {
+		ret.push(key);
+	}
+	return ret;
+};
+
 // Playing the audio
 
 var eventQueue = []; // hold events to be triggered
@@ -929,13 +649,13 @@ var queuedTime; //
 var startTime = 0; // to measure time elapse
 var noteRegistrar = {}; // get event for requested note
 var onMidiEvent = undefined; // listener callback
-var scheduleTracking = function (channel, note, currentTime, offset, message, velocity) {
-	var interval = window.setTimeout(function () {
+var scheduleTracking = function (channel, note, currentTime, offset, message, velocity, time) {
+	return setTimeout(function () {
 		var data = {
 			channel: channel,
 			note: note,
 			now: currentTime,
-			end: root.endTime,
+			end: midi.endTime,
 			message: message,
 			velocity: velocity
 		};
@@ -948,25 +668,29 @@ var scheduleTracking = function (channel, note, currentTime, offset, message, ve
 		if (onMidiEvent) {
 			onMidiEvent(data);
 		}
-		root.currentTime = currentTime;
-		if (root.currentTime === queuedTime && queuedTime < root.endTime) { // grab next sequence
+		midi.currentTime = currentTime;
+		///
+		eventQueue.shift();
+		///
+		if (eventQueue.length < 1000) {
+			startAudio(queuedTime, true);
+		} else if (midi.currentTime === queuedTime && queuedTime < midi.endTime) { // grab next sequence
 			startAudio(queuedTime, true);
 		}
 	}, currentTime - offset);
-	return interval;
 };
 
 var getContext = function() {
-	if (MIDI.lang === 'WebAudioAPI') {
-		return MIDI.Player.ctx;
-	} else if (!root.ctx) {
-		root.ctx = { currentTime: 0 };
+	if (MIDI.api === 'webaudio') {
+		return MIDI.WebAudio.getContext();
+	} else {
+		midi.ctx = {currentTime: 0};
 	}
-	return root.ctx;
+	return midi.ctx;
 };
 
 var getLength = function() {
-	var data =  root.data;
+	var data =  midi.data;
 	var length = data.length;
 	var totalTime = 0.5;
 	for (var n = 0; n < length; n++) {
@@ -975,76 +699,123 @@ var getLength = function() {
 	return totalTime;
 };
 
-var startAudio = function (currentTime, fromCache) {
-	if (!root.replayer) return;
+var __now;
+var getNow = function() {
+    if (window.performance && window.performance.now) {
+        return window.performance.now();
+    } else {
+		return Date.now();
+	}
+};
+
+var startAudio = function (currentTime, fromCache, callback) {
+	if (!midi.replayer) {
+		return;
+	}
 	if (!fromCache) {
-		if (typeof (currentTime) === "undefined") currentTime = root.restart;
-		if (root.playing) stopAudio();
-		root.playing = true;
-		root.data = root.replayer.getData();
-		root.endTime = getLength();
+		if (typeof currentTime === 'undefined') {
+			currentTime = midi.restart;
+		}
+		///
+		midi.playing && stopAudio();
+		midi.playing = true;
+		midi.data = midi.replayer.getData();
+		midi.endTime = getLength();
 	}
+	///
 	var note;
 	var offset = 0;
 	var messages = 0;
-	var data = root.data;	
+	var data = midi.data;
 	var ctx = getContext();
 	var length = data.length;
 	//
 	queuedTime = 0.5;
+	///
+	var interval = eventQueue[0] && eventQueue[0].interval || 0;
+	var foffset = currentTime - midi.currentTime;
+	///
+	if (MIDI.api !== 'webaudio') { // set currentTime on ctx
+		var now = getNow();
+		__now = __now || now;
+		ctx.currentTime = (now - __now) / 1000;
+	}
+	///
 	startTime = ctx.currentTime;
-	//
+	///
 	for (var n = 0; n < length && messages < 100; n++) {
-		queuedTime += data[n][1];
-		if (queuedTime < currentTime) {
+		var obj = data[n];
+		if ((queuedTime += obj[1]) <= currentTime) {
 			offset = queuedTime;
 			continue;
 		}
+		///
 		currentTime = queuedTime - offset;
-		var event = data[n][0].event;
-		if (event.type !== "channel") continue;
-		var channel = event.channel;
+		///
+		var event = obj[0].event;
+		if (event.type !== 'channel') {
+			continue;
+		}
+		///
+		var channelId = event.channel;
+		var channel = MIDI.channels[channelId];
+		var delay = ctx.currentTime + ((currentTime + foffset + midi.startDelay) / 1000);
+		var queueTime = queuedTime - offset + midi.startDelay;
 		switch (event.subtype) {
+			case 'controller':
+				MIDI.setController(channelId, event.controllerType, event.value, delay);
+				break;
+			case 'programChange':
+				MIDI.programChange(channelId, event.programNumber, delay);
+				break;
+			case 'pitchBend':
+				MIDI.pitchBend(channelId, event.value, delay);
+				break;
 			case 'noteOn':
-				if (MIDI.channels[channel].mute) break;
-				note = event.noteNumber - (root.MIDIOffset || 0);
-				eventQueue.push({
-					event: event,
-					source: MIDI.noteOn(channel, event.noteNumber, event.velocity, currentTime / 1000 + ctx.currentTime),
-					interval: scheduleTracking(channel, note, queuedTime, offset, 144, event.velocity)
-				});
-				messages ++;
+				if (channel.mute) break;
+				note = event.noteNumber - (midi.MIDIOffset || 0);
+				var obj = {
+				    event: event,
+				    time: queueTime,
+				    source: MIDI.noteOn(channelId, event.noteNumber, event.velocity, delay),
+				    interval: scheduleTracking(channelId, note, queuedTime + midi.startDelay, offset - foffset, 144, event.velocity)
+				};
+				eventQueue.push(obj);
+				messages++;
 				break;
 			case 'noteOff':
-				if (MIDI.channels[channel].mute) break;
-				note = event.noteNumber - (root.MIDIOffset || 0);
-				eventQueue.push({
-					event: event,
-					source: MIDI.noteOff(channel, event.noteNumber, currentTime / 1000 + ctx.currentTime),
-					interval: scheduleTracking(channel, note, queuedTime, offset, 128)
-				});
+				if (channel.mute) break;
+				note = event.noteNumber - (midi.MIDIOffset || 0);
+				var obj = {
+				    event: event,
+				    time: queueTime,
+				    source: MIDI.noteOff(channelId, event.noteNumber, delay),
+				    interval: scheduleTracking(channelId, note, queuedTime, offset - foffset, 128, 0)
+				};
+				eventQueue.push(obj);
 				break;
 			default:
 				break;
 		}
 	}
+	if (callback) {
+	    callback(eventQueue);
+	}
 };
 
 var stopAudio = function () {
 	var ctx = getContext();
-	root.playing = false;
-	root.restart += (ctx.currentTime - startTime) * 1000;
+	midi.playing = false;
+	midi.restart += (ctx.currentTime - startTime) * 1000;
 	// stop the audio, and intervals
 	while (eventQueue.length) {
 		var o = eventQueue.pop();
 		window.clearInterval(o.interval);
 		if (!o.source) continue; // is not webaudio
-		if (typeof(o.source) === "number") {
+		if (typeof(o.source) === 'number') {
 			window.clearTimeout(o.source);
 		} else { // webaudio
-			var source = o.source;
-			source.disconnect(0);
-			source.noteOff(0);
+			o.source.disconnect(0);
 		}
 	}
 	// run callback to cancel any notes still playing
@@ -1067,156 +838,687 @@ var stopAudio = function () {
 
 })();
 /*
+	----------------------------------------------------------------------
+	AudioTag <audio> - OGG or MPEG Soundbank
+	----------------------------------------------------------------------
+	http://dev.w3.org/html5/spec/Overview.html#the-audio-element
+	----------------------------------------------------------------------
+*/
+
+(function(root) { 'use strict';
+
+	window.Audio && (function() {
+		var midi = root.AudioTag = { api: 'audiotag' };
+		var noteToKey = {};
+		var volume = 127; // floating point 
+		var buffer_nid = -1; // current channel
+		var audioBuffers = []; // the audio channels
+		var notesOn = []; // instrumentId + noteId that is currently playing in each 'channel', for routing noteOff/chordOff calls
+		var notes = {}; // the piano keys
+		for (var nid = 0; nid < 12; nid ++) {
+			audioBuffers[nid] = new Audio();
+		}
+
+		var playChannel = function(channel, note) {
+			if (!root.channels[channel]) return;
+			var instrument = root.channels[channel].instrument;
+			var instrumentId = root.GM.byId[instrument].id;
+			var note = notes[note];
+			if (note) {
+				var instrumentNoteId = instrumentId + '' + note.id;
+				var nid = (buffer_nid + 1) % audioBuffers.length;
+				var audio = audioBuffers[nid];
+				notesOn[ nid ] = instrumentNoteId;
+				if (!root.Soundfont[instrumentId]) {
+					if (root.DEBUG) {
+						console.log('404', instrumentId);
+					}
+					return;
+				}
+				audio.src = root.Soundfont[instrumentId][note.id];
+				audio.volume = volume / 127;
+				audio.play();
+				buffer_nid = nid;
+			}
+		};
+
+		var stopChannel = function(channel, note) {
+			if (!root.channels[channel]) return;
+			var instrument = root.channels[channel].instrument;
+			var instrumentId = root.GM.byId[instrument].id;
+			var note = notes[note];
+			if (note) {
+				var instrumentNoteId = instrumentId + '' + note.id;
+				for (var i = 0, len = audioBuffers.length; i < len; i++) {
+				    var nid = (i + buffer_nid + 1) % len;
+				    var cId = notesOn[nid];
+				    if (cId && cId == instrumentNoteId) {
+				        audioBuffers[nid].pause();
+				        notesOn[nid] = null;
+				        return;
+				    }
+				}
+			}
+		};
+	
+		midi.audioBuffers = audioBuffers;
+		midi.send = function(data, delay) { };
+		midi.setController = function(channel, type, value, delay) { };
+		midi.setVolume = function(channel, n) {
+			volume = n; //- should be channel specific volume
+		};
+
+		midi.programChange = function(channel, program) {
+			root.channels[channel].instrument = program;
+		};
+
+		midi.pitchBend = function(channel, program, delay) { };
+
+		midi.noteOn = function(channel, note, velocity, delay) {
+			var id = noteToKey[note];
+			if (!notes[id]) return;
+			if (delay) {
+				return setTimeout(function() {
+					playChannel(channel, id);
+				}, delay * 1000);
+			} else {
+				playChannel(channel, id);
+			}
+		};
+	
+		midi.noteOff = function(channel, note, delay) {
+// 			var id = noteToKey[note];
+// 			if (!notes[id]) return;
+// 			if (delay) {
+// 				return setTimeout(function() {
+// 					stopChannel(channel, id);
+// 				}, delay * 1000)
+// 			} else {
+// 				stopChannel(channel, id);
+// 			}
+		};
+	
+		midi.chordOn = function(channel, chord, velocity, delay) {
+			for (var idx = 0; idx < chord.length; idx ++) {
+				var n = chord[idx];
+				var id = noteToKey[n];
+				if (!notes[id]) continue;
+				if (delay) {
+					return setTimeout(function() {
+						playChannel(channel, id);
+					}, delay * 1000);
+				} else {
+					playChannel(channel, id);
+				}
+			}
+		};
+	
+		midi.chordOff = function(channel, chord, delay) {
+			for (var idx = 0; idx < chord.length; idx ++) {
+				var n = chord[idx];
+				var id = noteToKey[n];
+				if (!notes[id]) continue;
+				if (delay) {
+					return setTimeout(function() {
+						stopChannel(channel, id);
+					}, delay * 1000);
+				} else {
+					stopChannel(channel, id);
+				}
+			}
+		};
+	
+		midi.stopAllNotes = function() {
+			for (var nid = 0, length = audioBuffers.length; nid < length; nid++) {
+				audioBuffers[nid].pause();
+			}
+		};
+	
+		midi.connect = function(opts) {
+			root.setDefaultPlugin(midi);
+			///
+			for (var key in root.keyToNote) {
+				noteToKey[root.keyToNote[key]] = key;
+				notes[key] = {id: key};
+			}
+			///
+			opts.callback && opts.callback();
+		};
+	})();
+
+})(MIDI);
+/*
+	----------------------------------------------------------------------
+	Web Audio API - OGG or MPEG Soundbank
+	----------------------------------------------------------------------
+	http://webaudio.github.io/web-audio-api/
+	----------------------------------------------------------------------
+*/
+
+(function(root) { 'use strict';
+
+	window.AudioContext && (function() {
+		var audioContext = null; // new AudioContext();
+		var useStreamingBuffer = false; // !!audioContext.createMediaElementSource;
+		var midi = root.WebAudio = {api: 'webaudio'};
+		var ctx; // audio context
+		var sources = {};
+		var effects = {};
+		var masterVolume = 127;
+		var audioBuffers = {};
+		///
+		midi.audioBuffers = audioBuffers;
+		midi.send = function(data, delay) { };
+		midi.setController = function(channelId, type, value, delay) { };
+
+		midi.setVolume = function(channelId, volume, delay) {
+			if (delay) {
+				setTimeout(function() {
+					masterVolume = volume;
+				}, delay * 1000);
+			} else {
+				masterVolume = volume;
+			}
+		};
+
+		midi.programChange = function(channelId, program, delay) {
+// 			if (delay) {
+// 				return setTimeout(function() {
+// 					var channel = root.channels[channelId];
+// 					channel.instrument = program;
+// 				}, delay);
+// 			} else {
+				var channel = root.channels[channelId];
+				channel.instrument = program;
+// 			}
+		};
+
+		midi.pitchBend = function(channelId, program, delay) {
+// 			if (delay) {
+// 				setTimeout(function() {
+// 					var channel = root.channels[channelId];
+// 					channel.pitchBend = program;
+// 				}, delay);
+// 			} else {
+				var channel = root.channels[channelId];
+				channel.pitchBend = program;
+// 			}
+		};
+
+		midi.noteOn = function(channelId, noteId, velocity, delay) {
+			delay = delay || 0;
+
+			/// check whether the note exists
+			var channel = root.channels[channelId];
+			var instrument = channel.instrument;
+			var bufferId = instrument + '' + noteId;
+			var buffer = audioBuffers[bufferId];
+			if (!buffer) {
+// 				console.log(MIDI.GM.byId[instrument].id, instrument, channelId);
+				return;
+			}
+
+			/// convert relative delay to absolute delay
+			if (delay < ctx.currentTime) {
+				delay += ctx.currentTime;
+			}
+		
+			/// create audio buffer
+			if (useStreamingBuffer) {
+				var source = ctx.createMediaElementSource(buffer);
+			} else { // XMLHTTP buffer
+				var source = ctx.createBufferSource();
+				source.buffer = buffer;
+			}
+
+			/// add effects to buffer
+			if (effects) {
+				var chain = source;
+				for (var key in effects) {
+					chain.connect(effects[key].input);
+					chain = effects[key];
+				}
+			}
+
+			/// add gain + pitchShift
+			var gain = (velocity / 127) * (masterVolume / 127) * 2 - 1;
+			source.connect(ctx.destination);
+			source.playbackRate.value = 1; // pitch shift 
+			source.gainNode = ctx.createGain(); // gain
+			source.gainNode.connect(ctx.destination);
+			source.gainNode.gain.value = Math.min(1.0, Math.max(-1.0, gain));
+			source.connect(source.gainNode);
+			///
+			if (useStreamingBuffer) {
+				if (delay) {
+					return setTimeout(function() {
+						buffer.currentTime = 0;
+						buffer.play()
+					}, delay * 1000);
+				} else {
+					buffer.currentTime = 0;
+					buffer.play()
+				}
+			} else {
+				source.start(delay || 0);
+			}
+			///
+			sources[channelId + '' + noteId] = source;
+			///
+			return source;
+		};
+
+		midi.noteOff = function(channelId, noteId, delay) {
+			delay = delay || 0;
+
+			/// check whether the note exists
+			var channel = root.channels[channelId];
+			var instrument = channel.instrument;
+			var bufferId = instrument + '' + noteId;
+			var buffer = audioBuffers[bufferId];
+			if (buffer) {
+				if (delay < ctx.currentTime) {
+					delay += ctx.currentTime;
+				}
+				///
+				var source = sources[channelId + '' + noteId];
+				if (source) {
+					if (source.gainNode) {
+						// @Miranet: 'the values of 0.2 and 0.3 could of course be used as 
+						// a 'release' parameter for ADSR like time settings.'
+						// add { 'metadata': { release: 0.3 } } to soundfont files
+						var gain = source.gainNode.gain;
+						gain.linearRampToValueAtTime(gain.value, delay);
+						gain.linearRampToValueAtTime(-1.0, delay + 0.3);
+					}
+					///
+					if (useStreamingBuffer) {
+						if (delay) {
+							setTimeout(function() {
+								buffer.pause();
+							}, delay * 1000);
+						} else {
+							buffer.pause();
+						}
+					} else {
+						if (source.noteOff) {
+							source.noteOff(delay + 0.5);
+						} else {
+							source.stop(delay + 0.5);
+						}
+					}
+					///
+					delete sources[channelId + '' + noteId];
+					///
+					return source;
+				}
+			}
+		};
+
+		midi.chordOn = function(channel, chord, velocity, delay) {
+			var res = {};
+			for (var n = 0, note, len = chord.length; n < len; n++) {
+				res[note = chord[n]] = midi.noteOn(channel, note, velocity, delay);
+			}
+			return res;
+		};
+
+		midi.chordOff = function(channel, chord, delay) {
+			var res = {};
+			for (var n = 0, note, len = chord.length; n < len; n++) {
+				res[note = chord[n]] = midi.noteOff(channel, note, delay);
+			}
+			return res;
+		};
+
+		midi.stopAllNotes = function() {
+			for (var sid in sources) {
+				var delay = 0;
+				if (delay < ctx.currentTime) {
+					delay += ctx.currentTime;
+				}
+				var source = sources[sid];
+				source.gain.linearRampToValueAtTime(1, delay);
+				source.gain.linearRampToValueAtTime(0, delay + 0.3);
+				if (source.noteOff) { // old api
+					source.noteOff(delay + 0.3);
+				} else { // new api
+					source.stop(delay + 0.3);
+				}
+				delete sources[sid];
+			}
+		};
+
+		midi.setEffects = function(list) {
+			if (ctx.tunajs) {
+				for (var n = 0; n < list.length; n ++) {
+					var data = list[n];
+					var effect = new ctx.tunajs[data.type](data);
+					effect.connect(ctx.destination);
+					effects[data.type] = effect;
+				}
+			} else {
+				return console.log('Effects module not installed.');
+			}
+		};
+
+		midi.connect = function(opts) {
+			root.setDefaultPlugin(midi);
+			midi.setContext(ctx || new AudioContext(), opts.callback);
+		};
+	
+		midi.getContext = function() {
+			return ctx;
+		};
+	
+		midi.setContext = function(newCtx, onload, onprogress, onerror) {
+			ctx = newCtx;
+
+			/// tuna.js effects module - https://github.com/Dinahmoe/tuna
+			if (typeof Tuna !== 'undefined' && !ctx.tunajs) {
+				ctx.tunajs = new Tuna(ctx);
+			}
+		
+			/// loading audio files
+			var urls = [];
+			var notes = root.keyToNote;
+			for (var key in notes) urls.push(key);
+			///
+			var waitForEnd = function(instrument) {
+				for (var key in bufferPending) { // has pending items
+					if (bufferPending[key]) return;
+				}
+				///
+				if (onload) { // run onload once
+					onload();
+					onload = null;
+				}
+			};
+			///
+			var requestAudio = function(soundfont, instrumentId, index, key) {
+				var url = soundfont[key];
+				if (url) {
+					bufferPending[instrumentId] ++;
+					loadAudio(url, function(buffer) {
+						buffer.id = key;
+						var noteId = root.keyToNote[key];
+						audioBuffers[instrumentId + '' + noteId] = buffer;
+						///
+						if (-- bufferPending[instrumentId] === 0) {
+							var percent = index / 87;
+							console.log(MIDI.GM.byId[instrumentId], 'processing: ', percent);
+							soundfont.isLoaded = true;
+							waitForEnd(instrument);
+						}
+					}, function(err) {
+		// 				console.log(err);
+					});
+				}
+			};
+			///
+			var bufferPending = {};
+			for (var instrument in root.Soundfont) {
+				var soundfont = root.Soundfont[instrument];
+				if (soundfont.isLoaded) {
+					continue;
+				}
+				///
+				var synth = root.GM.byName[instrument];
+				var instrumentId = synth.number;
+				///
+				bufferPending[instrumentId] = 0;
+				///
+				for (var index = 0; index < urls.length; index++) {
+					var key = urls[index];
+					requestAudio(soundfont, instrumentId, index, key);
+				}
+			}
+			///
+			setTimeout(waitForEnd, 1);
+		};
+
+		/* Load audio file: streaming | base64 | arraybuffer
+		---------------------------------------------------------------------- */
+		var loadAudio = function(url, onload, onerror) {
+			if (useStreamingBuffer) {
+				var audio = new Audio();
+				audio.src = url;
+				audio.controls = false;
+				audio.autoplay = false;
+				audio.preload = false;
+				audio.addEventListener('canplay', function() {
+					onload && onload(audio);
+				});
+				audio.addEventListener('error', function(err) {
+					onerror && onerror(err);
+				});
+				document.body.appendChild(audio);
+			} else if (url.indexOf('data:audio') === 0) { // Base64 string
+				var base64 = url.split(',')[1];
+				var buffer = Base64Binary.decodeArrayBuffer(base64);
+				ctx.decodeAudioData(buffer, onload, onerror);
+			} else { // XMLHTTP buffer
+				var request = new XMLHttpRequest();
+				request.open('GET', url, true);
+				request.responseType = 'arraybuffer';
+				request.onload = function() {
+					ctx.decodeAudioData(request.response, onload, onerror);
+				};
+				request.send();
+			}
+		};
+	})();
+})(MIDI);
+/*
+	----------------------------------------------------------------------
+	Web MIDI API - Native Soundbanks
+	----------------------------------------------------------------------
+	http://webaudio.github.io/web-midi-api/
+	----------------------------------------------------------------------
+*/
+
+(function(root) { 'use strict';
+
+	var plugin = null;
+	var output = null;
+	var channels = [];
+	var midi = root.WebMIDI = {api: 'webmidi'};
+	midi.send = function(data, delay) { // set channel volume
+		output.send(data, delay * 1000);
+	};
+
+	midi.setController = function(channel, type, value, delay) {
+		output.send([channel, type, value], delay * 1000);
+	};
+
+	midi.setVolume = function(channel, volume, delay) { // set channel volume
+		output.send([0xB0 + channel, 0x07, volume], delay * 1000);
+	};
+
+	midi.programChange = function(channel, program, delay) { // change patch (instrument)
+		output.send([0xC0 + channel, program], delay * 1000);
+	};
+
+	midi.pitchBend = function(channel, program, delay) { // pitch bend
+		output.send([0xE0 + channel, program], delay * 1000);
+	};
+
+	midi.noteOn = function(channel, note, velocity, delay) {
+		output.send([0x90 + channel, note, velocity], delay * 1000);
+	};
+
+	midi.noteOff = function(channel, note, delay) {
+		output.send([0x80 + channel, note, 0], delay * 1000);
+	};
+
+	midi.chordOn = function(channel, chord, velocity, delay) {
+		for (var n = 0; n < chord.length; n ++) {
+			var note = chord[n];
+			output.send([0x90 + channel, note, velocity], delay * 1000);
+		}
+	};
+
+	midi.chordOff = function(channel, chord, delay) {
+		for (var n = 0; n < chord.length; n ++) {
+			var note = chord[n];
+			output.send([0x80 + channel, note, 0], delay * 1000);
+		}
+	};
+
+	midi.stopAllNotes = function() {
+		output.cancel();
+		for (var channel = 0; channel < 16; channel ++) {
+			output.send([0xB0 + channel, 0x7B, 0]);
+		}
+	};
+
+	midi.connect = function(opts) {
+		root.setDefaultPlugin(midi);
+		///
+		navigator.requestMIDIAccess().then(function(access) {
+			plugin = access;
+			output = plugin.outputs()[0];
+			opts.callback && opts.callback();
+		}, function(err) { // well at least we tried!
+			if (window.AudioContext) { // Chrome
+				opts.api = 'webaudio';
+			} else if (window.Audio) { // Firefox
+				opts.api = 'audiotag';
+			} else { // no support
+				return;
+			}
+			root.loadPlugin(opts);
+		});
+	};
 
-	DOMLoader.XMLHttp
-	--------------------------
-	DOMLoader.sendRequest({
-		url: "./dir/something.extension",
-		data: "test!",
+})(MIDI);
+/*
+	----------------------------------------------------------
+	util/Request : 0.1.1 : 2014-10-17
+	----------------------------------------------------------
+	util.request({
+		url: './dir/something.extension',
+		body: 'test!',
 		onerror: function(event) {
 			console.log(event);
 		},
 		onload: function(response) {
 			console.log(response.responseText);
-		}, 
-		onprogress: function (event) {
+		},
+		onprogress: function(event) {
 			var percent = event.loaded / event.total * 100 >> 0;
-			loader.message("loading: " + percent + "%");
+			loader.create('thread', 'loading... ', percent);
 		}
 	});
-	
 */
 
-if (typeof(DOMLoader) === "undefined") var DOMLoader = {};
+if (typeof MIDI === 'undefined') MIDI = {};
 
-// Add XMLHttpRequest when not available
+(function(root) {
 
-if (typeof (XMLHttpRequest) === "undefined") {
-	var XMLHttpRequest;
-	(function () { // find equivalent for IE
-		var factories = [
-		function () {
-			return new ActiveXObject("Msxml2.XMLHTTP")
-		}, function () {
-			return new ActiveXObject("Msxml3.XMLHTTP")
-		}, function () {
-			return new ActiveXObject("Microsoft.XMLHTTP")
-		}];
-		for (var i = 0; i < factories.length; i++) {
-			try {
-				factories[i]();
-			} catch (e) {
-				continue;
+	var util = root.util || (root.util = {});
+
+	util.request = function(params, onload, onerror, onprogress) { 'use strict';
+		if (typeof(params) === 'string') params = {url: params};
+		///
+		var body = params.body;
+		var url = params.url;
+		var headers = params.headers;
+		var responseType = params.responseType;
+		var withCredentials = params.withCredentials;
+		var asBinaryString = params.asBinaryString;
+		var onload = onload || params.onload;
+		var onerror = onerror || params.onerror;
+		var onprogress = onprogress || params.onprogress;
+		///
+		if (typeof(NodeFS) !== 'undefined' && root.loc.isLocalUrl(url)) {
+			NodeFS.readFile(url, 'utf8', function(error, data) {
+				if (error) {
+					onerror && onerror(error, false);
+				} else {
+					onload && onload({responseText: data});
+				}
+			});
+			return;
+		}
+		///
+		var xhr = new XMLHttpRequest();
+		xhr.open(body ? 'POST' : 'GET', url, true);
+		///
+		if (headers) {
+			for (var key in headers) {
+				xhr.setRequestHeader(key, headers[key]);
 			}
-			break;
+		} else if (body) { // set the default headers for POST
+			xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
 		}
-		XMLHttpRequest = factories[i];
-	})();
-}
-
-if (typeof ((new XMLHttpRequest()).responseText) === "undefined") {
-	// http://stackoverflow.com/questions/1919972/how-do-i-access-xhr-responsebody-for-binary-data-from-javascript-in-ie
-    var IEBinaryToArray_ByteStr_Script =
-    "<!-- IEBinaryToArray_ByteStr -->\r\n"+
-    "<script type='text/vbscript'>\r\n"+
-    "Function IEBinaryToArray_ByteStr(Binary)\r\n"+
-    "   IEBinaryToArray_ByteStr = CStr(Binary)\r\n"+
-    "End Function\r\n"+
-    "Function IEBinaryToArray_ByteStr_Last(Binary)\r\n"+
-    "   Dim lastIndex\r\n"+
-    "   lastIndex = LenB(Binary)\r\n"+
-    "   if lastIndex mod 2 Then\r\n"+
-    "       IEBinaryToArray_ByteStr_Last = Chr( AscB( MidB( Binary, lastIndex, 1 ) ) )\r\n"+
-    "   Else\r\n"+
-    "       IEBinaryToArray_ByteStr_Last = "+'""'+"\r\n"+
-    "   End If\r\n"+
-    "End Function\r\n"+
-    "</script>\r\n";
-
-	// inject VBScript
-	document.write(IEBinaryToArray_ByteStr_Script);
-
-	DOMLoader.sendRequest = function(conf) {
-		// helper to convert from responseBody to a "responseText" like thing
-		function getResponseText(binary) {
-			var byteMapping = {};
-			for (var i = 0; i < 256; i++) {
-				for (var j = 0; j < 256; j++) {
-					byteMapping[String.fromCharCode(i + j * 256)] = String.fromCharCode(i) + String.fromCharCode(j);
-				}
+		if (asBinaryString) { //- default to responseType="blob" when supported
+			if (xhr.overrideMimeType) {
+				xhr.overrideMimeType('text/plain; charset=x-user-defined');
 			}
-			// call into VBScript utility fns
-			var rawBytes = IEBinaryToArray_ByteStr(binary);
-			var lastChr = IEBinaryToArray_ByteStr_Last(binary);
-			return rawBytes.replace(/[\s\S]/g, function (match) {
-				return byteMapping[match];
-			}) + lastChr;
-		};
-		//
-		var req = XMLHttpRequest();
-		req.open("GET", conf.url, true);
-		if (conf.responseType) req.responseType = conf.responseType;
-		if (conf.onerror) req.onerror = conf.onerror;
-		if (conf.onprogress) req.onprogress = conf.onprogress;
-		req.onreadystatechange = function (event) {
-			if (req.readyState === 4) {
-				if (req.status === 200) {
-					req.responseText = getResponseText(req.responseBody);
-				} else {
-					req = false;
-				}
-				if (conf.onload) conf.onload(req);
+		}
+		if (responseType) {
+			xhr.responseType = responseType;
+		}
+		if (withCredentials) {
+			xhr.withCredentials = 'true';
+		}
+		if (onerror && 'onerror' in xhr) {
+			xhr.onerror = onerror;
+		}
+		if (onprogress && xhr.upload && 'onprogress' in xhr.upload) {
+			if (body) {
+				xhr.upload.onprogress = onprogress;
+			} else {
+				xhr.onprogress = onprogress;
 			}
-		};
-		req.setRequestHeader("Accept-Charset", "x-user-defined");
-		req.send(null);
-		return req;
-	}
-} else {
-	DOMLoader.sendRequest = function(conf) {
-		var req = new XMLHttpRequest();
-		req.open(conf.data ? "POST" : "GET", conf.url, true);
-		if (req.overrideMimeType) req.overrideMimeType("text/plain; charset=x-user-defined");
-		if (conf.data) req.setRequestHeader('Content-type','application/x-www-form-urlencoded');
-		if (conf.responseType) req.responseType = conf.responseType;
-		if (conf.onerror) req.onerror = conf.onerror;
-		if (conf.onprogress) req.onprogress = conf.onprogress;
-		req.onreadystatechange = function (event) {
-			if (req.readyState === 4) {
-				if (req.status !== 200 && req.status != 304) {
-					if (conf.onerror) conf.onerror(event, false);
-					return;
-				}
-				if (conf.onload) {
-					conf.onload(req);
+		}
+		///
+		xhr.onreadystatechange = function(event) {
+			if (xhr.readyState === 4) { // The request is complete
+				if (xhr.status === 200 || // Response OK
+					xhr.status === 304 || // Not Modified
+					xhr.status === 0 && root.client && root.client.cordova // Cordova quirk
+				) {
+					onload && onload(xhr);
+				} else {
+					onerror && onerror(event, false);
 				}
 			}
 		};
-		req.send(conf.data);
-		return req;
+		xhr.send(body);
+		return xhr;
 	};
-}
+
+	/// NodeJS
+	if (typeof module !== 'undefined' && module.exports) {
+		var NodeFS = require('fs');
+		XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;
+		module.exports = root.util.request;
+	}
+
+})(MIDI);
 /*
-	----------------------------------------------------
-	DOMLoader.script.js : 0.1.2 : 2012/09/08 : http://mudcu.be
-	----------------------------------------------------
-	Copyright 2011-2012 Mudcube. All rights reserved.
-	----------------------------------------------------
+	-----------------------------------------------------------
+	dom.loadScript.js : 0.1.4 : 2014/02/12 : http://mudcu.be
+	-----------------------------------------------------------
+	Copyright 2011-2014 Mudcube. All rights reserved.
+	-----------------------------------------------------------
 	/// No verification
-	DOMLoader.script.add("../js/jszip/jszip.js");
+	dom.loadScript.add("../js/jszip/jszip.js");
 	/// Strict loading order and verification.
-	DOMLoader.script.add({
+	dom.loadScript.add({
 		strictOrder: true,
-		srcs: [
+		urls: [
 			{
-				src: "../js/jszip/jszip.js",
+				url: "../js/jszip/jszip.js",
 				verify: "JSZip",
 				callback: function() {
 					console.log(1)
 				}
 			},
 			{ 
-				src: "../inc/downloadify/js/swfobject.js",
+				url: "../inc/downloadify/js/swfobject.js",
 				verify: "swfobject",
 				callback: function() {
 					console.log(2)
@@ -1228,8 +1530,8 @@ if (typeof ((new XMLHttpRequest()).responseText) === "undefined") {
 		}
 	});
 	/// Just verification.
-	DOMLoader.script.add({
-		src: "../js/jszip/jszip.js",
+	dom.loadScript.add({
+		url: "../js/jszip/jszip.js",
 		verify: "JSZip",
 		callback: function() {
 			console.log(1)
@@ -1237,25 +1539,25 @@ if (typeof ((new XMLHttpRequest()).responseText) === "undefined") {
 	});
 */
 
-if (typeof(DOMLoader) === "undefined") var DOMLoader = {};
+if (typeof(dom) === "undefined") var dom = {};
 
 (function() { "use strict";
 
-DOMLoader.script = function() {
+dom.loadScript = function() {
 	this.loaded = {};
 	this.loading = {};
 	return this;
 };
 
-DOMLoader.script.prototype.add = function(config) {
+dom.loadScript.prototype.add = function(config) {
 	var that = this;
 	if (typeof(config) === "string") {
-		config = { src: config };
+		config = { url: config };
 	}
-	var srcs = config.srcs;
-	if (typeof(srcs) === "undefined") {
-		srcs = [{ 
-			src: config.src, 
+	var urls = config.urls;
+	if (typeof(urls) === "undefined") {
+		urls = [{ 
+			url: config.url, 
 			verify: config.verify
 		}];
 	}
@@ -1263,36 +1565,37 @@ DOMLoader.script.prototype.add = function(config) {
 	var doc = document.getElementsByTagName("head")[0];
 	/// 
 	var testElement = function(element, test) {
-		if (that.loaded[element.src]) return;
-		if (test && typeof(window[test]) === "undefined") return;
-		that.loaded[element.src] = true;
+		if (that.loaded[element.url]) return;
+		if (test && globalExists(test) === false) return;
+		that.loaded[element.url] = true;
 		//
-		if (that.loading[element.src]) that.loading[element.src]();
-		delete that.loading[element.src];
+		if (that.loading[element.url]) that.loading[element.url]();
+		delete that.loading[element.url];
 		//
 		if (element.callback) element.callback();
 		if (typeof(getNext) !== "undefined") getNext();
 	};
 	///
+	var hasError = false;
 	var batchTest = [];
 	var addElement = function(element) {
 		if (typeof(element) === "string") {
 			element = {
-				src: element,
+				url: element,
 				verify: config.verify
 			};
 		}
-		if (/([\w\d.])$/.test(element.verify)) { // check whether its a variable reference
-			element.test = element.verify;
-			if (typeof(element.test) === "object") {
-				for (var key in element.test) {
-					batchTest.push(element.test[key]);
+		if (/([\w\d.\[\]\'\"])$/.test(element.verify)) { // check whether its a variable reference
+			var verify = element.test = element.verify;
+			if (typeof(verify) === "object") {
+				for (var n = 0; n < verify.length; n ++) {
+					batchTest.push(verify[n]);
 				}			
 			} else {
-				batchTest.push(element.test);
+				batchTest.push(verify);
 			}
 		}
-		if (that.loaded[element.src]) return;
+		if (that.loaded[element.url]) return;
 		var script = document.createElement("script");
 		script.onreadystatechange = function() {
 			if (this.readyState !== "loaded" && this.readyState !== "complete") return;
@@ -1302,46 +1605,52 @@ DOMLoader.script.prototype.add = function(config) {
 			testElement(element);
 		};
 		script.onerror = function() {
-
+			hasError = true;
+			delete that.loading[element.url];
+			if (typeof(element.test) === "object") {
+				for (var key in element.test) {
+					removeTest(element.test[key]);
+				}			
+			} else {
+				removeTest(element.test);
+			}
 		};
 		script.setAttribute("type", "text/javascript");
-		script.setAttribute("src", element.src);
+		script.setAttribute("src", element.url);
 		doc.appendChild(script);
-		that.loading[element.src] = function() {};
+		that.loading[element.url] = function() {};
 	};
 	/// checking to see whether everything loaded properly
+	var removeTest = function(test) {
+		var ret = [];
+		for (var n = 0; n < batchTest.length; n ++) {
+			if (batchTest[n] === test) continue;
+			ret.push(batchTest[n]);
+		}
+		batchTest = ret;
+	};
 	var onLoad = function(element) {
 		if (element) {
 			testElement(element, element.test);
 		} else {
-			for (var n = 0; n < srcs.length; n ++) {
-				testElement(srcs[n], srcs[n].test);
+			for (var n = 0; n < urls.length; n ++) {
+				testElement(urls[n], urls[n].test);
 			}
 		}
 		var istrue = true;
 		for (var n = 0; n < batchTest.length; n ++) {
-			var test = batchTest[n];
-			if (test && test.indexOf(".") !== -1) {
-				test = test.split(".");
-				var level0 = window[test[0]];
-				if (typeof(level0) === "undefined") continue;
-				if (test.length === 2) { //- this is a bit messy and could handle more cases
-					if (typeof(level0[test[1]]) === "undefined") {
-						istrue = false;
-					}
-				} else if (test.length === 3) {
-					if (typeof(level0[test[1]][test[2]]) === "undefined") {
-						istrue = false;
-					}
-				}
-			} else {
-				if (typeof(window[test]) === "undefined") {
-					istrue = false;
-				}
+			if (globalExists(batchTest[n]) === false) {
+				istrue = false;
 			}
 		}
 		if (!config.strictOrder && istrue) { // finished loading all the requested scripts
-			if (config.callback) config.callback();
+			if (hasError) {
+				if (config.error) {
+					config.error();
+				}
+			} else if (config.callback) {
+				config.callback();
+			}
 		} else { // keep calling back the function
 			setTimeout(function() { //- should get slower over time?
 				onLoad(element);
@@ -1353,17 +1662,23 @@ DOMLoader.script.prototype.add = function(config) {
 		var ID = -1;
 		var getNext = function() {
 			ID ++;
-			if (!srcs[ID]) { // all elements are loaded
-				if (config.callback) config.callback();
+			if (!urls[ID]) { // all elements are loaded
+				if (hasError) {
+					if (config.error) {
+						config.error();
+					}
+				} else if (config.callback) {
+					config.callback();
+				}
 			} else { // loading new script
-				var element = srcs[ID];
-				var src = element.src;
-				if (that.loading[src]) { // already loading from another call (attach to event)
-					that.loading[src] = function() {
+				var element = urls[ID];
+				var url = element.url;
+				if (that.loading[url]) { // already loading from another call (attach to event)
+					that.loading[url] = function() {
 						if (element.callback) element.callback();
 						getNext();
 					}
-				} else if (!that.loaded[src]) { // create script element
+				} else if (!that.loaded[url]) { // create script element
 					addElement(element);
 					onLoad(element);
 				} else { // it's already been successfully loaded
@@ -1373,13 +1688,38 @@ DOMLoader.script.prototype.add = function(config) {
 		};
 		getNext();
 	} else { // loose ordering
-		for (var ID = 0; ID < srcs.length; ID ++) {
-			addElement(srcs[ID]);
+		for (var ID = 0; ID < urls.length; ID ++) {
+			addElement(urls[ID]);
+			onLoad(urls[ID]);
+		}
+	}
+};
+
+dom.loadScript = new dom.loadScript();
+
+var globalExists = function(path, root) {
+	try {
+		path = path.split('"').join('').split("'").join('').split(']').join('').split('[').join('.');
+		var parts = path.split(".");
+		var length = parts.length;
+		var object = root || window;
+		for (var n = 0; n < length; n ++) {
+			var key = parts[n];
+			if (object[key] == null) {
+				return false;
+			} else { //
+				object = object[key];
+			}
 		}
-		onLoad();
+		return true;
+	} catch(e) {
+		return false;
 	}
 };
 
-DOMLoader.script = (new DOMLoader.script());
+})();
 
-})();
\ No newline at end of file
+/// For NodeJS
+if (typeof (module) !== "undefined" && module.exports) {
+	module.exports = dom.loadScript;
+}
\ No newline at end of file
diff --git a/build/MIDI.min.js b/build/MIDI.min.js
index cc503e6..43ff996 100644
--- a/build/MIDI.min.js
+++ b/build/MIDI.min.js
@@ -1 +1 @@
-if(typeof MIDI=="undefined")var MIDI={};(function(){"use strict";var e={},t=function(t){var n=new Audio,r=t.split(";")[0];n.id="audio",n.setAttribute("preload","auto"),n.setAttribute("audiobuffer",!0),n.addEventListener("canplaythrough",function(){e[r]=!0},!1),n.src="data:"+t,document.body.appendChild(n)};MIDI.audioDetect=function(n){if(typeof Audio=="undefined")return n({});var r=new Audio;if(typeof r.canPlayType=="undefined")return n(e);var i=r.canPlayType('audio/ogg; codecs="vorbis"');i=i==="probably"||i==="maybe";var s=r.canPlayType("audio/mpeg");s=s==="probably"||s==="maybe";if(!i&&!s){n(e);return}i&&t("audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA="),s&&t("audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq");var o=(new Date).getTime(),u=window.setInterval(function(){for(var t in e);var r=(new Date).getTime(),i=r-o>5e3;if(t||i)window.clearInterval(u),n(e)},1)}})();if(typeof MIDI=="undefined")var MIDI={};typeof MIDI.Soundfont=="undefined"&&(MIDI.Soundfont={}),function(){"use strict";var e=!1;MIDI.loadPlugin=function(e){typeof e=="function"&&(e={callback:e});var r=e.instruments||e.instrument||"acoustic_grand_piano";typeof r!="object"&&(r=[r]),r.map(function(e){return typeof e=="number"&&(e=MIDI.GeneralMIDI.byId[e]),e}),MIDI.soundfontUrl=e.soundfontUrl||MIDI.soundfontUrl||"./soundfont/",MIDI.audioDetect(function(i){var s="";typeof s=="undefined"&&(n[window.location.hash]?s=window.location.hash.substr(1):s=""),s===""&&(navigator.requestMIDIAccess?s="webmidi":window.webkitAudioContext?s="webaudio":window.Audio?s="audiotag":s="flash");if(!t[s])return;var o=i["audio/ogg"]?"ogg":"mp3";t[s](o,r,e.callback)})};var t={};t.webmidi=function(e,t,n){MIDI.loader&&MIDI.loader.message("Web MIDI API..."),MIDI.WebMIDI.connect(n)},t.flash=function(e,t,n){MIDI.loader&&MIDI.loader.message("Flash API..."),DOMLoader.script.add({src:"./inc/SoundManager2/script/soundmanager2.js",verify:"SoundManager",callback:function(){MIDI.Flash.connect(n)}})},t.audiotag=function(t,n,s){MIDI.loader&&MIDI.loader.message("HTML5 Audio API...");var o=i({items:n,getNext:function(n){e?DOMLoader.sendRequest({url:MIDI.soundfontUrl+n+"-"+t+".js",onprogress:r,onload:function(e){MIDI.Soundfont[n]=JSON.parse(e.responseText),MIDI.loader&&MIDI.loader.update(null,"Downloading",100),o.getNext()}}):DOMLoader.script.add({src:MIDI.soundfontUrl+n+"-"+t+".js",verify:"MIDI.Soundfont."+n,callback:function(){MIDI.loader&&MIDI.loader.update(null,"Downloading...",100),o.getNext()}})},onComplete:function(){MIDI.AudioTag.connect(s)}})},t.webaudio=function(t,n,s){MIDI.loader&&MIDI.loader.message("Web Audio API...");var o=i({items:n,getNext:function(n){e?DOMLoader.sendRequest({url:MIDI.soundfontUrl+n+"-"+t+".js",onprogress:r,onload:function(e){MIDI.Soundfont[n]=JSON.parse(e.responseText),MIDI.loader&&MIDI.loader.update(null,"Downloading...",100),o.getNext()}}):DOMLoader.script.add({src:MIDI.soundfontUrl+n+"-"+t+".js",verify:"MIDI.Soundfont."+n,callback:function(){MIDI.loader&&MIDI.loader.update(null,"Downloading...",100),o.getNext()}})},onComplete:function(){MIDI.WebAudioAPI.connect(s)}})};var n={"#webmidi":!0,"#webaudio":!0,"#audiotag":!0,"#flash":!0},r=function(e){this.totalSize||(this.getResponseHeader("Content-Length-Raw")?this.totalSize=parseInt(this.getResponseHeader("Content-Length-Raw")):this.totalSize=e.total);var t=this.totalSize?Math.round(e.loaded/this.totalSize*100):"";MIDI.loader&&MIDI.loader.update(null,"Downloading...",t)},i=function(e){var t={};t.queue=[];for(var n in e.items)t.queue.push(e.items[n]);return t.getNext=function(){if(!t.queue.length)return e.onComplete();e.getNext(t.queue.shift())},setTimeout(t.getNext,1),t}}();if(typeof MIDI=="undefined")var MIDI={};(function(){"use strict";(function(){var e=null,t=null,n=[],r=MIDI.WebMIDI={};r.setVolume=function(e,n){t.send([176+e,7,n])},r.programChange=function(e,n){t.send([192+e,n])},r.noteOn=function(e,n,r,i){t.send([144+e,n,r],i*1e3)},r.noteOff=function(e,n,r){t.send([128+e,n],r*1e3)},r.chordOn=function(e,n,r,i){for(var s=0;s<n.length;s++){var o=n[s];t.send([144+e,o,r],i*1e3)}},r.chordOff=function(e,n,r){for(var i=0;i<n.length;i++){var s=n[i];t.send([128,e,s,velocity],r*1e3)}},r.stopAllNotes=function(){for(var e=0;e<16;e++)t.send([176+e,123,0])},r.getInput=function(){return e.getInputs()},r.getOutputs=function(){return e.getOutputs()},r.connect=function(n){MIDI.technology="Web MIDI API",MIDI.setVolume=r.setVolume,MIDI.programChange=r.programChange,MIDI.noteOn=r.noteOn,MIDI.noteOff=r.noteOff,MIDI.chordOn=r.chordOn,MIDI.chordOff=r.chordOff,MIDI.stopAllNotes=r.stopAllNotes,MIDI.getInput=r.getInput,MIDI.getOutputs=r.getOutputs,navigator.requestMIDIAccess(function(r){e=r,t=e.getOutput(0),n&&n()},function(e){console.log("uh-oh! Something went wrong!  Error code: "+e.code)})}})(),typeof MIDI.WebAudioAPI=="undefined"&&(MIDI.WebAudioAPI={}),(window.AudioContext||window.webkitAudioContext)&&function(){var e=window.AudioContext||window.webkitAudioContext,t=MIDI.WebAudioAPI,n,r={},i=1,s={},o=function(e,t,r,i,o){var u=MIDI.GeneralMIDI.byName[e],a=u.number,f=t[r],l=MIDI.Soundfont[e][f].split(",")[1],c=Base64Binary.decodeArrayBuffer(l);n.decodeAudioData(c,function(n){var l=f;while(l.length<3)l+="&nbsp;";typeof MIDI.loader!="undefined"&&MIDI.loader.update(null,u.instrument+"<br>Processing: "+(r/87*100>>0)+"%<br>"+l),n.id=f,i[r]=n;if(i.length===t.length){while(i.length){n=i.pop();if(!n)continue;var c=MIDI.keyToNote[n.id];s[a+""+c]=n}o(e)}})};t.setVolume=function(e){i=e},t.programChange=function(e,t){MIDI.channels[e].instrument=t},t.noteOn=function(e,t,o,u){if(!MIDI.channels[e])return;var a=MIDI.channels[e].instrument;if(!s[a+""+t])return;u<n.currentTime&&(u+=n.currentTime);var f=n.createBufferSource();r[e+""+t]=f,f.buffer=s[a+""+t],f.connect(n.destination);var l=n.createGainNode(),c=o/100*i*2-1;return l.connect(n.destination),l.gain.value=Math.max(-1,c),f.connect(l),f.noteOn(u||0),f},t.noteOff=function(e,t,i){i=i||0,i<n.currentTime&&(i+=n.currentTime);var s=r[e+""+t];if(!s)return;return s.gain.linearRampToValueAtTime(1,i),s.gain.linearRampToValueAtTime(0,i+.2),s.noteOff(i+.3),s},t.chordOn=function(e,n,r,i){var s={},o;for(var u=0,a=n.length;u<a;u++)s[o=n[u]]=t.noteOn(e,o,r,i);return s},t.chordOff=function(e,n,r){var i={},s;for(var o=0,u=n.length;o<u;o++)i[s=n[o]]=t.noteOff(e,s,r);return i},t.connect=function(r){MIDI.technology="Web Audio API",MIDI.setVolume=t.setVolume,MIDI.programChange=t.programChange,MIDI.noteOn=t.noteOn,MIDI.noteOff=t.noteOff,MIDI.chordOn=t.chordOn,MIDI.chordOff=t.chordOff,MIDI.Player.ctx=n=new e;var i=[],s=MIDI.keyToNote;for(var u in s)i.push(u);var a=[],f={},l=function(e){delete f[e];for(var t in f)break;t||r()};for(var c in MIDI.Soundfont){f[c]=!0;for(var h=0;h<i.length;h++)o(c,i,h,a,l)}}}(),window.Audio&&function(){var e=MIDI.AudioTag={},t={},n=1,r=-1,i=[],s={};for(var o=0;o<12;o++)i[o]=new Audio;var u=function(e,t){if(!MIDI.channels[e])return;var o=MIDI.channels[e].instrument,u=MIDI.GeneralMIDI.byId[o].id,t=s[t];if(!t)return;var a=(r+1)%i.length,f=(new Date).getTime(),l=i[a];l.src=MIDI.Soundfont[u][t.id],l.volume=n,l.play(),r=a};e.programChange=function(e,t){MIDI.channels[e].instrument=t},e.setVolume=function(e){n=e},e.noteOn=function(e,n,r,i){var o=t[n];if(!s[o])return;if(i)return window.setTimeout(function(){u(e,o)},i*1e3);u(e,o)},e.noteOff=function(e,t,n){},e.chordOn=function(e,n,r,i){for(var o in n){var a=n[o],f=t[a];if(!s[f])continue;u(e,f)}},e.chordOff=function(e,t,n){},e.stopAllNotes=function(){for(var e=0,t=i.length;e<t;e++)i[e].pause()},e.connect=function(n){var r={};for(var i in MIDI.keyToNote)t[MIDI.keyToNote[i]]=i,s[i]={id:i};MIDI.technology="HTML Audio Tag",MIDI.setVolume=e.setVolume,MIDI.programChange=e.programChange,MIDI.noteOn=e.noteOn,MIDI.noteOff=e.noteOff,MIDI.chordOn=e.chordOn,MIDI.chordOff=e.chordOff,n&&n()}}(),function(){var e=MIDI.Flash={},t={},n={};e.programChange=function(e,t){MIDI.channels[e].instrument=t},e.setVolume=function(e,t){},e.noteOn=function(e,r,i,s){if(!MIDI.channels[e])return;var o=MIDI.channels[e].instrument,u=MIDI.GeneralMIDI.byId[o].number;r=u+""+t[r];if(!n[r])return;if(s)return window.setTimeout(function(){n[r].play({volume:i*2})},s*1e3);n[r].play({volume:i*2})},e.noteOff=function(e,t,n){},e.chordOn=function(e,r,i,s){if(!MIDI.channels[e])return;var o=MIDI.channels[e].instrument,u=MIDI.GeneralMIDI.byId[o].number;for(var a in r){var f=r[a],l=u+""+t[f];n[l]&&n[l].play({volume:i*2})}},e.chordOff=function(e,t,n){},e.stopAllNotes=function(){},e.connect=function(r){soundManager.flashVersion=9,soundManager.useHTML5Audio=!0,soundManager.url="../inc/SoundManager2/swf/",soundManager.useHighPerformance=!0,soundManager.wmode="transparent",soundManager.flashPollingInterval=1,soundManager.debugMode=!1,soundManager.onload=function(){var i=function(e,t,r){var i=MIDI.GeneralMIDI.byName[e],s=i.number;n[s+""+t]=soundManager.createSound({id:t,url:MIDI.soundfontUrl+e+"-mp3/"+t+".mp3",multiShot:!0,autoLoad:!0,onload:r})};for(var s in MIDI.Soundfont){var o=[],u=function(){o.push(this.sID);if(typeof MIDI.loader=="undefined")return;MIDI.loader.update(null,"Processing: "+this.sID)};for(var a=0;a<88;a++){var f=t[a+21];i(s,f,u)}}MIDI.technology="Flash",MIDI.setVolume=e.setVolume,MIDI.programChange=e.programChange,MIDI.noteOn=e.noteOn,MIDI.noteOff=e.noteOff,MIDI.chordOn=e.chordOn,MIDI.chordOff=e.chordOff;var l=window.setInterval(function(){if(o.length!==88)return;window.clearInterval(l),r&&r()},25)},soundManager.onerror=function(){};for(var i in MIDI.keyToNote)t[MIDI.keyToNote[i]]=i}}(),MIDI.GeneralMIDI=function(e){var t=function(e){return e.replace(/[^a-z0-9 ]/gi,"").replace(/[ ]/g,"_").toLowerCase()},n={byName:{},byId:{},byCategory:{}};for(var r in e){var i=e[r];for(var s=0,o=i.length;s<o;s++){var u=i[s];if(!u)continue;var a=parseInt(u.substr(0,u.indexOf(" ")),10);u=u.replace(a+" ",""),n.byId[--a]=n.byName[t(u)]=n.byCategory[t(r)]={id:t(u),instrument:u,number:a,category:r}}}return n}({Piano:["1 Acoustic Grand Piano","2 Bright Acoustic Piano","3 Electric Grand Piano","4 Honky-tonk Piano","5 Electric Piano 1","6 Electric Piano 2","7 Harpsichord","8 Clavinet"],"Chromatic Percussion":["9 Celesta","10 Glockenspiel","11 Music Box","12 Vibraphone","13 Marimba","14 Xylophone","15 Tubular Bells","16 Dulcimer"],Organ:["17 Drawbar Organ","18 Percussive Organ","19 Rock Organ","20 Church Organ","21 Reed Organ","22 Accordion","23 Harmonica","24 Tango Accordion"],Guitar:["25 Acoustic Guitar (nylon)","26 Acoustic Guitar (steel)","27 Electric Guitar (jazz)","28 Electric Guitar (clean)","29 Electric Guitar (muted)","30 Overdriven Guitar","31 Distortion Guitar","32 Guitar Harmonics"],Bass:["33 Acoustic Bass","34 Electric Bass (finger)","35 Electric Bass (pick)","36 Fretless Bass","37 Slap Bass 1","38 Slap Bass 2","39 Synth Bass 1","40 Synth Bass 2"],Strings:["41 Violin","42 Viola","43 Cello","44 Contrabass","45 Tremolo Strings","46 Pizzicato Strings","47 Orchestral Harp","48 Timpani"],Ensemble:["49 String Ensemble 1","50 String Ensemble 2","51 Synth Strings 1","52 Synth Strings 2","53 Choir Aahs","54 Voice Oohs","55 Synth Choir","56 Orchestra Hit"],Brass:["57 Trumpet","58 Trombone","59 Tuba","60 Muted Trumpet","61 French Horn","62 Brass Section","63 Synth Brass 1","64 Synth Brass 2"],Reed:["65 Soprano Sax","66 Alto Sax","67 Tenor Sax","68 Baritone Sax","69 Oboe","70 English Horn","71 Bassoon","72 Clarinet"],Pipe:["73 Piccolo","74 Flute","75 Recorder","76 Pan Flute","77 Blown Bottle","78 Shakuhachi","79 Whistle","80 Ocarina"],"Synth Lead":["81 Lead 1 (square)","82 Lead 2 (sawtooth)","83 Lead 3 (calliope)","84 Lead 4 (chiff)","85 Lead 5 (charang)","86 Lead 6 (voice)","87 Lead 7 (fifths)","88 Lead 8 (bass + lead)"],"Synth Pad":["89 Pad 1 (new age)","90 Pad 2 (warm)","91 Pad 3 (polysynth)","92 Pad 4 (choir)","93 Pad 5 (bowed)","94 Pad 6 (metallic)","95 Pad 7 (halo)","96 Pad 8 (sweep)"],"Synth Effects":["97 FX 1 (rain)","98 FX 2 (soundtrack)","99 FX 3 (crystal)","100 FX 4 (atmosphere)","101 FX 5 (brightness)","102 FX 6 (goblins)","103 FX 7 (echoes)","104 FX 8 (sci-fi)"],Ethnic:["105 Sitar","106 Banjo","107 Shamisen","108 Koto","109 Kalimba","110 Bagpipe","111 Fiddle","112 Shanai"],Percussive:["113 Tinkle Bell","114 Agogo","115 Steel Drums","116 Woodblock","117 Taiko Drum","118 Melodic Tom","119 Synth Drum"],"Sound effects":["120 Reverse Cymbal","121 Guitar Fret Noise","122 Breath Noise","123 Seashore","124 Bird Tweet","125 Telephone Ring","126 Helicopter","127 Applause","128 Gunshot"]}),MIDI.channels=function(){var e={};for(var t=0;t<16;t++)e[t]={instrument:0,mute:!1,mono:!1,omni:!1,solo:!1};return e}(),MIDI.pianoKeyOffset=21,MIDI.keyToNote={},MIDI.noteToKey={},function(){var e=21,t=108,n=["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"];for(var r=e;r<=t;r++){var i=(r-12)/12>>0,s=n[r%12]+i;MIDI.keyToNote[s]=r,MIDI.noteToKey[r]=s}}()})();if(typeof MIDI=="undefined")var MIDI={};typeof MIDI.Player=="undefined"&&(MIDI.Player={}),function(){"use strict";var e=MIDI.Player;e.callback=undefined,e.currentTime=0,e.endTime=0,e.restart=0,e.playing=!1,e.timeWarp=1,e.start=e.resume=function(){e.currentTime<-1&&(e.currentTime=-1),f(e.currentTime)},e.pause=function(){var t=e.restart;l(),e.restart=t},e.stop=function(){l(),e.restart=0,e.currentTime=0},e.addListener=function(e){s=e},e.removeListener=function(){s=undefined},e.clearAnimation=function(){e.interval&&window.clearInterval(e.interval)},e.setAnimation=function(t){var n=typeof t=="function"?t:t.callback,r=t.interval||30,s=0,o=0,u=0;e.clearAnimation(),e.interval=window.setInterval(function(){if(e.endTime===0)return;e.playing?(s=u===e.currentTime?o-(new Date).getTime():0,e.currentTime===0?s=0:s=e.currentTime-s,u!==e.currentTime&&(o=(new Date).getTime(),u=e.currentTime)):s=e.currentTime;var t=e.endTime,r=s/t,a=s/1e3,f=a/60,l=a-f*60,c=f*60+l,h=t/1e3;if(h-c<-1)return;n({now:c,end:h,events:i})},r)},e.loadMidiFile=function(){e.replayer=new Replayer(MidiFile(e.currentData),e.timeWarp),e.data=e.replayer.getData(),e.endTime=a()},e.loadFile=function(t,n){e.stop();if(t.indexOf("base64,")!==-1){var r=window.atob(t.split(",")[1]);e.currentData=r,e.loadMidiFile(),n&&n(r);return}var i=t.split(" - ")[1]||t;document.getElementById("playback-title").innerHTML=i.replace(".mid","");var s=new XMLHttpRequest;s.open("GET",t),s.overrideMimeType("text/plain; charset=x-user-defined"),s.onreadystatechange=function(){if(this.readyState===4&&this.status===200){var t=this.responseText||"",r=[],i=t.length,s=String.fromCharCode;for(var o=0;o<i;o++)r[o]=s(t.charCodeAt(o)&255);var u=r.join("");e.currentData=u,e.loadMidiFile(),n&&n(u)}},s.send()};var t=[],n,r=0,i={},s=undefined,o=function(t,r,o,u,a,l){var c=window.setTimeout(function(){var u={channel:t,note:r,now:o,end:e.endTime,message:a,velocity:l};a===128?delete i[r]:i[r]=u,s&&s(u),e.currentTime=o,e.currentTime===n&&n<e.endTime&&f(n,!0)},o-u);return c},u=function(){return MIDI.lang==="WebAudioAPI"?MIDI.Player.ctx:(e.ctx||(e.ctx={currentTime:0}),e.ctx)},a=function(){var t=e.data,n=t.length,r=.5;for(var i=0;i<n;i++)r+=t[i][1];return r},f=function(i,s){if(!e.replayer)return;s||(typeof i=="undefined"&&(i=e.restart),e.playing&&l(),e.playing=!0,e.data=e.replayer.getData(),e.endTime=a());var f,c=0,h=0,p=e.data,d=u(),v=p.length;n=.5,r=d.currentTime;for(var m=0;m<v&&h<100;m++){n+=p[m][1];if(n<i){c=n;continue}i=n-c;var g=p[m][0].event;if(g.type!=="channel")continue;var y=g.channel;switch(g.subtype){case"noteOn":if(MIDI.channels[y].mute)break;f=g.noteNumber-(e.MIDIOffset||0),t.push({event:g,source:MIDI.noteOn(y,g.noteNumber,g.velocity,i/1e3+d.currentTime),interval:o(y,f,n,c,144,g.velocity)}),h++;break;case"noteOff":if(MIDI.channels[y].mute)break;f=g.noteNumber-(e.MIDIOffset||0),t.push({event:g,source:MIDI.noteOff(y,g.noteNumber,i/1e3+d.currentTime),interval:o(y,f,n,c,128)});break;default:}}},l=function(){var n=u();e.playing=!1,e.restart+=(n.currentTime-r)*1e3;while(t.length){var o=t.pop();window.clearInterval(o.interval);if(!o.source)continue;if(typeof o.source=="number")window.clearTimeout(o.source);else{var a=o.source;a.disconnect(0),a.noteOff(0)}}for(var f in i){var o=i[f];i[f].message===144&&s&&s({channel:o.channel,note:o.note,now:o.now,end:o.end,message:128,velocity:o.velocity})}i={}}}();if(typeof DOMLoader=="undefined")var DOMLoader={};if(typeof XMLHttpRequest=="undefined"){var XMLHttpRequest;(function(){var e=[function(){return new ActiveXObject("Msxml2.XMLHTTP")},function(){return new ActiveXObject("Msxml3.XMLHTTP")},function(){return new ActiveXObject("Microsoft.XMLHTTP")}];for(var t=0;t<e.length;t++){try{e[t]()}catch(n){continue}break}XMLHttpRequest=e[t]})()}if(typeof (new XMLHttpRequest).responseText=="undefined"){var IEBinaryToArray_ByteStr_Script="<!-- IEBinaryToArray_ByteStr -->\r\n<script type='text/vbscript'>\r\nFunction IEBinaryToArray_ByteStr(Binary)\r\n   IEBinaryToArray_ByteStr = CStr(Binary)\r\nEnd Function\r\nFunction IEBinaryToArray_ByteStr_Last(Binary)\r\n   Dim lastIndex\r\n   lastIndex = LenB(Binary)\r\n   if lastIndex mod 2 Then\r\n       IEBinaryToArray_ByteStr_Last = Chr( AscB( MidB( Binary, lastIndex, 1 ) ) )\r\n   Else\r\n       IEBinaryToArray_ByteStr_Last = \"\"\r\n   End If\r\nEnd Function\r\n</script>\r\n";document.write(IEBinaryToArray_ByteStr_Script),DOMLoader.sendRequest=function(e){function t(e){var t={};for(var n=0;n<256;n++)for(var r=0;r<256;r++)t[String.fromCharCode(n+r*256)]=String.fromCharCode(n)+String.fromCharCode(r);var i=IEBinaryToArray_ByteStr(e),s=IEBinaryToArray_ByteStr_Last(e);return i.replace(/[\s\S]/g,function(e){return t[e]})+s}var n=XMLHttpRequest();return n.open("GET",e.url,!0),e.responseType&&(n.responseType=e.responseType),e.onerror&&(n.onerror=e.onerror),e.onprogress&&(n.onprogress=e.onprogress),n.onreadystatechange=function(r){n.readyState===4&&(n.status===200?n.responseText=t(n.responseBody):n=!1,e.onload&&e.onload(n))},n.setRequestHeader("Accept-Charset","x-user-defined"),n.send(null),n}}else DOMLoader.sendRequest=function(e){var t=new XMLHttpRequest;return t.open(e.data?"POST":"GET",e.url,!0),t.overrideMimeType&&t.overrideMimeType("text/plain; charset=x-user-defined"),e.data&&t.setRequestHeader("Content-type","application/x-www-form-urlencoded"),e.responseType&&(t.responseType=e.responseType),e.onerror&&(t.onerror=e.onerror),e.onprogress&&(t.onprogress=e.onprogress),t.onreadystatechange=function(n){if(t.readyState===4){if(t.status!==200&&t.status!=304){e.onerror&&e.onerror(n,!1);return}e.onload&&e.onload(t)}},t.send(e.data),t};if(typeof DOMLoader=="undefined")var DOMLoader={};(function(){"use strict";DOMLoader.script=function(){return this.loaded={},this.loading={},this},DOMLoader.script.prototype.add=function(e){var t=this;typeof e=="string"&&(e={src:e});var n=e.srcs;typeof n=="undefined"&&(n=[{src:e.src,verify:e.verify}]);var r=document.getElementsByTagName("head")[0],i=function(e,n){if(t.loaded[e.src])return;if(n&&typeof window[n]=="undefined")return;t.loaded[e.src]=!0,t.loading[e.src]&&t.loading[e.src](),delete t.loading[e.src],e.callback&&e.callback(),typeof f!="undefined"&&f()},s=[],o=function(n){typeof n=="string"&&(n={src:n,verify:e.verify});if(/([\w\d.])$/.test(n.verify)){n.test=n.verify;if(typeof n.test=="object")for(var o in n.test)s.push(n.test[o]);else s.push(n.test)}if(t.loaded[n.src])return;var u=document.createElement("script");u.onreadystatechange=function(){if(this.readyState!=="loaded"&&this.readyState!=="complete")return;i(n)},u.onload=function(){i(n)},u.onerror=function(){},u.setAttribute("type","text/javascript"),u.setAttribute("src",n.src),r.appendChild(u),t.loading[n.src]=function(){}},u=function(t){if(t)i(t,t.test);else for(var r=0;r<n.length;r++)i(n[r],n[r].test);var o=!0;for(var r=0;r<s.length;r++){var a=s[r];if(a&&a.indexOf(".")!==-1){a=a.split(".");var f=window[a[0]];if(typeof f=="undefined")continue;a.length===2?typeof f[a[1]]=="undefined"&&(o=!1):a.length===3&&typeof f[a[1]][a[2]]=="undefined"&&(o=!1)}else typeof window[a]=="undefined"&&(o=!1)}!e.strictOrder&&o?e.callback&&e.callback():setTimeout(function(){u(t)},10)};if(e.strictOrder){var a=-1,f=function(){a++;if(!n[a])e.callback&&e.callback();else{var r=n[a],i=r.src;t.loading[i]?t.loading[i]=function(){r.callback&&r.callback(),f()}:t.loaded[i]?f():(o(r),u(r))}};f()}else{for(var a=0;a<n.length;a++)o(n[a]);u()}},DOMLoader.script=new DOMLoader.script})();
\ No newline at end of file
+if("undefined"==typeof MIDI&&(MIDI={}),function(e){"use strict";var n={},t=0,r=function(e){t++;var r=new Audio,o=e.split(";")[0];r.id="audio",r.setAttribute("preload","auto"),r.setAttribute("audiobuffer",!0),r.addEventListener("error",function(){n[o]=!1,t--},!1),r.addEventListener("canplaythrough",function(){n[o]=!0,t--},!1),r.src="data:"+e,document.body.appendChild(r)};e.audioDetect=function(e){if(navigator.requestMIDIAccess){var o=Function.prototype.toString.call(navigator.requestMIDIAccess).indexOf("[native code]");if(o)n.webmidi=!0;else for(var a=0;navigator.plugins.length>a;a++){var i=navigator.plugins[a];i.name.indexOf("Jazz-Plugin")>=0&&(n.webmidi=!0)}}if("undefined"==typeof Audio)return e({});n.audiotag=!0,(window.AudioContext||window.webkitAudioContext)&&(n.webaudio=!0);var u=new Audio;if(u.canPlayType===void 0)return e(n);var l=u.canPlayType('audio/ogg; codecs="vorbis"');l="probably"===l||"maybe"===l;var c=u.canPlayType("audio/mpeg");if(c="probably"===c||"maybe"===c,!l&&!c)return e(n),void 0;l&&r("audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA="),c&&r("audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq");var s=(new Date).getTime(),d=window.setInterval(function(){var r=(new Date).getTime(),o=r-s>5e3;(!t||o)&&(window.clearInterval(d),e(n))},1)}}(MIDI),function(e){"use strict";e.GM=function(e){var n=function(e){return e.replace(/[^a-z0-9 ]/gi,"").replace(/[ ]/g,"_").toLowerCase()},t={byName:{},byId:{},byCategory:{}};for(var r in e)for(var o=e[r],a=0,i=o.length;i>a;a++){var u=o[a];if(u){var l=parseInt(u.substr(0,u.indexOf(" ")),10);u=u.replace(l+" ",""),t.byId[--l]=t.byName[n(u)]=t.byCategory[n(r)]={id:n(u),instrument:u,number:l,category:r}}}return t}({Piano:["1 Acoustic Grand Piano","2 Bright Acoustic Piano","3 Electric Grand Piano","4 Honky-tonk Piano","5 Electric Piano 1","6 Electric Piano 2","7 Harpsichord","8 Clavinet"],"Chromatic Percussion":["9 Celesta","10 Glockenspiel","11 Music Box","12 Vibraphone","13 Marimba","14 Xylophone","15 Tubular Bells","16 Dulcimer"],Organ:["17 Drawbar Organ","18 Percussive Organ","19 Rock Organ","20 Church Organ","21 Reed Organ","22 Accordion","23 Harmonica","24 Tango Accordion"],Guitar:["25 Acoustic Guitar (nylon)","26 Acoustic Guitar (steel)","27 Electric Guitar (jazz)","28 Electric Guitar (clean)","29 Electric Guitar (muted)","30 Overdriven Guitar","31 Distortion Guitar","32 Guitar Harmonics"],Bass:["33 Acoustic Bass","34 Electric Bass (finger)","35 Electric Bass (pick)","36 Fretless Bass","37 Slap Bass 1","38 Slap Bass 2","39 Synth Bass 1","40 Synth Bass 2"],Strings:["41 Violin","42 Viola","43 Cello","44 Contrabass","45 Tremolo Strings","46 Pizzicato Strings","47 Orchestral Harp","48 Timpani"],Ensemble:["49 String Ensemble 1","50 String Ensemble 2","51 Synth Strings 1","52 Synth Strings 2","53 Choir Aahs","54 Voice Oohs","55 Synth Choir","56 Orchestra Hit"],Brass:["57 Trumpet","58 Trombone","59 Tuba","60 Muted Trumpet","61 French Horn","62 Brass Section","63 Synth Brass 1","64 Synth Brass 2"],Reed:["65 Soprano Sax","66 Alto Sax","67 Tenor Sax","68 Baritone Sax","69 Oboe","70 English Horn","71 Bassoon","72 Clarinet"],Pipe:["73 Piccolo","74 Flute","75 Recorder","76 Pan Flute","77 Blown Bottle","78 Shakuhachi","79 Whistle","80 Ocarina"],"Synth Lead":["81 Lead 1 (square)","82 Lead 2 (sawtooth)","83 Lead 3 (calliope)","84 Lead 4 (chiff)","85 Lead 5 (charang)","86 Lead 6 (voice)","87 Lead 7 (fifths)","88 Lead 8 (bass + lead)"],"Synth Pad":["89 Pad 1 (new age)","90 Pad 2 (warm)","91 Pad 3 (polysynth)","92 Pad 4 (choir)","93 Pad 5 (bowed)","94 Pad 6 (metallic)","95 Pad 7 (halo)","96 Pad 8 (sweep)"],"Synth Effects":["97 FX 1 (rain)","98 FX 2 (soundtrack)","99 FX 3 (crystal)","100 FX 4 (atmosphere)","101 FX 5 (brightness)","102 FX 6 (goblins)","103 FX 7 (echoes)","104 FX 8 (sci-fi)"],Ethnic:["105 Sitar","106 Banjo","107 Shamisen","108 Koto","109 Kalimba","110 Bagpipe","111 Fiddle","112 Shanai"],Percussive:["113 Tinkle Bell","114 Agogo","115 Steel Drums","116 Woodblock","117 Taiko Drum","118 Melodic Tom","119 Synth Drum"],"Sound effects":["120 Reverse Cymbal","121 Guitar Fret Noise","122 Breath Noise","123 Seashore","124 Bird Tweet","125 Telephone Ring","126 Helicopter","127 Applause","128 Gunshot"]}),e.getInstrument=function(n){var t=e.channels[n];return t&&t.instrument},e.setInstrument=function(n,t,r){var o=e.channels[n];return r?setTimeout(function(){o.instrument=t},r):(o.instrument=t,void 0)},e.getMono=function(n){var t=e.channels[n];return t&&t.mono},e.setMono=function(n,t,r){var o=e.channels[n];return r?setTimeout(function(){o.mono=t},r):(o.mono=t,void 0)},e.getOmni=function(n){var t=e.channels[n];return t&&t.omni},e.setOmni=function(n,t){var r=e.channels[n];return delay?setTimeout(function(){r.omni=t},delay):(r.omni=t,void 0)},e.getSolo=function(n){var t=e.channels[n];return t&&t.solo},e.setSolo=function(n,t){var r=e.channels[n];return delay?setTimeout(function(){r.solo=t},delay):(r.solo=t,void 0)},e.channels=function(){for(var e={},n=0;16>n;n++)e[n]={instrument:n,pitchBend:0,mute:!1,mono:!1,omni:!1,solo:!1};return e}(),e.keyToNote={},e.noteToKey={},function(){for(var n=21,t=108,r=["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"],o=n;t>=o;o++){var a=(o-12)/12>>0,i=r[o%12]+a;e.keyToNote[i]=o,e.noteToKey[o]=i}}()}(MIDI),"undefined"==typeof MIDI&&(MIDI={}),MIDI.Soundfont=MIDI.Soundfont||{},MIDI.Player=MIDI.Player||{},function(e){"use strict";e.DEBUG=!0,e.USE_XHR=!0,e.soundfontUrl="./soundfont/",e.loadPlugin=function(t){"function"==typeof t&&(t={callback:t}),e.soundfontUrl=t.soundfontUrl||e.soundfontUrl,e.audioDetect(function(r){var o=window.location.hash,a="";if(r[t.api]?a=t.api:r[o.substr(1)]?a=o.substr(1):r.webmidi?a="webmidi":window.AudioContext?a="webaudio":window.Audio&&(a="audiotag"),n[a]){if(t.targetFormat)var i=t.targetFormat;else var i=r["audio/ogg"]?"ogg":"mp3";e.__api=a,e.__audioFormat=i,e.supports=r,e.loadResource(t)}})},e.loadResource=function(t){var r=t.instruments||t.instrument||"acoustic_grand_piano";"object"!=typeof r&&(r=r||0===r?[r]:[]);for(var o=0;r.length>o;o++){var a=r[o];a===+a&&e.GM.byId[a]&&(r[o]=e.GM.byId[a].id)}t.format=e.__audioFormat,t.instruments=r,n[e.__api](t)};var n={webmidi:function(n){e.WebMIDI.connect(n)},audiotag:function(e){t(e,"AudioTag")},webaudio:function(e){t(e,"WebAudio")}},t=function(n,t){var o=n.format,a=n.instruments,i=n.onprogress,u=n.onerror;n.callback;for(var l=a.length,c=l,s=function(){--c||(i&&i("load",1),e[t].connect(n))},d=0;l>d;d++){var f=a[d];MIDI.Soundfont[f]?s():r(a[d],o,function(e){i&&i("load",e+(c-1)/l,f)},function(){s()},u)}},r=function(n,t,r,o,a){var i=e.soundfontUrl+n+"-"+t+".js";e.USE_XHR?e.util.request({url:i,onerror:a,onprogress:function(e){if(!this.totalBytes){var n=this.getResponseHeader("Content-Length-Raw");this.totalBytes=n?parseInt(n):e.total}this.totalBytes&&r(e.loaded/this.totalBytes)},onload:function(e){var n=document.createElement("script");n.language="javascript",n.type="text/javascript",n.text=e.responseText,document.body.appendChild(n),o()}}):dom.loadScript.add({url:i,verify:'MIDI.Soundfont["'+n+'"]',onerror:a,callback:function(){o()}})};e.setDefaultPlugin=function(n){for(var t in n)e[t]=n[t]}}(MIDI),"undefined"==typeof MIDI&&(MIDI={}),MIDI.Player===void 0&&(MIDI.Player={}),function(){"use strict";var e=MIDI.Player;e.callback=void 0,e.currentTime=0,e.endTime=0,e.restart=0,e.playing=!1,e.timeWarp=1,e.startDelay=0,e.BPM=120,e.start=e.resume=function(n){-1>e.currentTime&&(e.currentTime=-1),d(e.currentTime,null,n)},e.pause=function(){var n=e.restart;f(),e.restart=n},e.stop=function(){f(),e.restart=0,e.currentTime=0},e.addListener=function(e){i=e},e.removeListener=function(){i=void 0},e.clearAnimation=function(){e.interval&&window.clearInterval(e.interval)},e.setAnimation=function(n){var t="function"==typeof n?n:n.callback,r=n.interval||30,o=0,i=0,u=0;e.clearAnimation(),e.interval=setInterval(function(){if(0!==e.endTime){e.playing?(o=u===e.currentTime?i-(new Date).getTime():0,o=0===e.currentTime?0:e.currentTime-o,u!==e.currentTime&&(i=(new Date).getTime(),u=e.currentTime)):o=e.currentTime;var n=e.endTime,r=o/1e3,l=r/60,c=r-60*l,s=60*l+c,d=n/1e3;-1>d-s||t({now:s,end:d,events:a})}},r)},e.loadMidiFile=function(n,t,r){try{e.replayer=new Replayer(MidiFile(e.currentData),e.timeWarp,null,e.BPM),e.data=e.replayer.getData(),e.endTime=c(),MIDI.loadPlugin({callback:n,onprogress:t,onerror:r})}catch(o){r&&r(o)}},e.loadFile=function(n,t,r,o){if(e.stop(),-1!==n.indexOf("base64,")){var a=window.atob(n.split(",")[1]);return e.currentData=a,e.loadMidiFile(t,r,o),void 0}var i=new XMLHttpRequest;i.open("GET",n),i.overrideMimeType("text/plain; charset=x-user-defined"),i.onreadystatechange=function(){if(4===this.readyState)if(200===this.status){for(var n=this.responseText||"",a=[],i=n.length,u=String.fromCharCode,l=0;i>l;l++)a[l]=u(255&n.charCodeAt(l));var c=a.join("");e.currentData=c,e.loadMidiFile(t,r,o)}else o&&o("Unable to load MIDI file")},i.send()},e.getFileInstruments=function(){for(var n={},t={},r=0;e.data.length>r;r++){var o=e.data[r][0].event;if("channel"===o.type){var a=o.channel;switch(o.subtype){case"controller":break;case"programChange":t[a]=o.programNumber;break;case"noteOn":var i=t[a],u=MIDI.GM.byId[isFinite(i)?i:a];n[u.id]=!0}}}var l=[];for(var c in n)l.push(c);return l};var n,t,r=[],o=0,a={},i=void 0,u=function(t,o,u,l,c,s){return setTimeout(function(){var l={channel:t,note:o,now:u,end:e.endTime,message:c,velocity:s};128===c?delete a[o]:a[o]=l,i&&i(l),e.currentTime=u,r.shift(),1e3>r.length?d(n,!0):e.currentTime===n&&e.endTime>n&&d(n,!0)},u-l)},l=function(){return"webaudio"===MIDI.api?MIDI.WebAudio.getContext():(e.ctx={currentTime:0},e.ctx)},c=function(){for(var n=e.data,t=n.length,r=.5,o=0;t>o;o++)r+=n[o][1];return r},s=function(){return window.performance&&window.performance.now?window.performance.now():Date.now()},d=function(a,i,d){if(e.replayer){i||(a===void 0&&(a=e.restart),e.playing&&f(),e.playing=!0,e.data=e.replayer.getData(),e.endTime=c());var p,A=0,m=0,v=e.data,q=l(),g=v.length;n=.5,r[0]&&r[0].interval||0;var h=a-e.currentTime;if("webaudio"!==MIDI.api){var y=s();t=t||y,q.currentTime=(y-t)/1e3}o=q.currentTime;for(var S=0;g>S&&100>m;S++){var b=v[S];if(a>=(n+=b[1]))A=n;else{a=n-A;var I=b[0].event;if("channel"===I.type){var T=I.channel,M=MIDI.channels[T],w=q.currentTime+(a+h+e.startDelay)/1e3,D=n-A+e.startDelay;switch(I.subtype){case"controller":MIDI.setController(T,I.controllerType,I.value,w);break;case"programChange":MIDI.programChange(T,I.programNumber,w);break;case"pitchBend":MIDI.pitchBend(T,I.value,w);break;case"noteOn":if(M.mute)break;p=I.noteNumber-(e.MIDIOffset||0);var b={event:I,time:D,source:MIDI.noteOn(T,I.noteNumber,I.velocity,w),interval:u(T,p,n+e.startDelay,A-h,144,I.velocity)};r.push(b),m++;break;case"noteOff":if(M.mute)break;p=I.noteNumber-(e.MIDIOffset||0);var b={event:I,time:D,source:MIDI.noteOff(T,I.noteNumber,w),interval:u(T,p,n,A-h,128,0)};r.push(b);break;default:}}}}d&&d(r)}},f=function(){var n=l();for(e.playing=!1,e.restart+=1e3*(n.currentTime-o);r.length;){var t=r.pop();window.clearInterval(t.interval),t.source&&("number"==typeof t.source?window.clearTimeout(t.source):t.source.disconnect(0))}for(var u in a){var t=a[u];144===a[u].message&&i&&i({channel:t.channel,note:t.note,now:t.now,end:t.end,message:128,velocity:t.velocity})}a={}}}(),function(e){"use strict";window.Audio&&function(){for(var n=e.AudioTag={api:"audiotag"},t={},r=127,o=-1,a=[],i=[],u={},l=0;12>l;l++)a[l]=new Audio;var c=function(n,t){if(e.channels[n]){var l=e.channels[n].instrument,c=e.GM.byId[l].id,t=u[t];if(t){var s=c+""+t.id,d=(o+1)%a.length,f=a[d];if(i[d]=s,!e.Soundfont[c])return e.DEBUG&&console.log("404",c),void 0;f.src=e.Soundfont[c][t.id],f.volume=r/127,f.play(),o=d}}},s=function(n,t){if(e.channels[n]){var r=e.channels[n].instrument,l=e.GM.byId[r].id,t=u[t];if(t)for(var c=l+""+t.id,s=0,d=a.length;d>s;s++){var f=(s+o+1)%d,p=i[f];if(p&&p==c)return a[f].pause(),i[f]=null,void 0}}};n.audioBuffers=a,n.send=function(){},n.setController=function(){},n.setVolume=function(e,n){r=n},n.programChange=function(n,t){e.channels[n].instrument=t},n.pitchBend=function(){},n.noteOn=function(e,n,r,o){var a=t[n];if(u[a])return o?setTimeout(function(){c(e,a)},1e3*o):(c(e,a),void 0)},n.noteOff=function(){},n.chordOn=function(e,n,r,o){for(var a=0;n.length>a;a++){var i=n[a],l=t[i];if(u[l]){if(o)return setTimeout(function(){c(e,l)},1e3*o);c(e,l)}}},n.chordOff=function(e,n,r){for(var o=0;n.length>o;o++){var a=n[o],i=t[a];if(u[i]){if(r)return setTimeout(function(){s(e,i)},1e3*r);s(e,i)}}},n.stopAllNotes=function(){for(var e=0,n=a.length;n>e;e++)a[e].pause()},n.connect=function(r){e.setDefaultPlugin(n);for(var o in e.keyToNote)t[e.keyToNote[o]]=o,u[o]={id:o};r.callback&&r.callback()}}()}(MIDI),function(e){"use strict";window.AudioContext&&function(){var n,t=!1,r=e.WebAudio={api:"webaudio"},o={},a={},i=127,u={};r.audioBuffers=u,r.send=function(){},r.setController=function(){},r.setVolume=function(e,n,t){t?setTimeout(function(){i=n},1e3*t):i=n},r.programChange=function(n,t){var r=e.channels[n];r.instrument=t},r.pitchBend=function(n,t){var r=e.channels[n];r.pitchBend=t},r.noteOn=function(r,l,c,s){s=s||0;var d=e.channels[r],f=d.instrument,p=f+""+l,A=u[p];if(A){if(n.currentTime>s&&(s+=n.currentTime),t)var m=n.createMediaElementSource(A);else{var m=n.createBufferSource();m.buffer=A}if(a){var v=m;for(var q in a)v.connect(a[q].input),v=a[q]}var g=2*c/127*(i/127)-1;if(m.connect(n.destination),m.playbackRate.value=1,m.gainNode=n.createGain(),m.gainNode.connect(n.destination),m.gainNode.gain.value=Math.min(1,Math.max(-1,g)),m.connect(m.gainNode),t){if(s)return setTimeout(function(){A.currentTime=0,A.play()},1e3*s);A.currentTime=0,A.play()}else m.start(s||0);return o[r+""+l]=m,m}},r.noteOff=function(r,a,i){i=i||0;var l=e.channels[r],c=l.instrument,s=c+""+a,d=u[s];if(d){n.currentTime>i&&(i+=n.currentTime);var f=o[r+""+a];if(f){if(f.gainNode){var p=f.gainNode.gain;p.linearRampToValueAtTime(p.value,i),p.linearRampToValueAtTime(-1,i+.3)}return t?i?setTimeout(function(){d.pause()},1e3*i):d.pause():f.noteOff?f.noteOff(i+.5):f.stop(i+.5),delete o[r+""+a],f}}},r.chordOn=function(e,n,t,o){for(var a,i={},u=0,l=n.length;l>u;u++)i[a=n[u]]=r.noteOn(e,a,t,o);return i},r.chordOff=function(e,n,t){for(var o,a={},i=0,u=n.length;u>i;i++)a[o=n[i]]=r.noteOff(e,o,t);return a},r.stopAllNotes=function(){for(var e in o){var t=0;n.currentTime>t&&(t+=n.currentTime);var r=o[e];r.gain.linearRampToValueAtTime(1,t),r.gain.linearRampToValueAtTime(0,t+.3),r.noteOff?r.noteOff(t+.3):r.stop(t+.3),delete o[e]}},r.setEffects=function(e){if(!n.tunajs)return console.log("Effects module not installed.");for(var t=0;e.length>t;t++){var r=e[t],o=new n.tunajs[r.type](r);o.connect(n.destination),a[r.type]=o}},r.connect=function(t){e.setDefaultPlugin(r),r.setContext(n||new AudioContext,t.callback)},r.getContext=function(){return n},r.setContext=function(t,r){n=t,"undefined"==typeof Tuna||n.tunajs||(n.tunajs=new Tuna(n));var o=[],a=e.keyToNote;for(var i in a)o.push(i);var c=function(){for(var e in d)if(d[e])return;r&&(r(),r=null)},s=function(n,t,r,o){var a=n[o];a&&(d[t]++,l(a,function(a){a.id=o;var i=e.keyToNote[o];if(u[t+""+i]=a,0===--d[t]){var l=r/87;console.log(MIDI.GM.byId[t],"processing: ",l),n.isLoaded=!0,c(f)}},function(){}))},d={};for(var f in e.Soundfont){var p=e.Soundfont[f];if(!p.isLoaded){var A=e.GM.byName[f],m=A.number;d[m]=0;for(var v=0;o.length>v;v++){var i=o[v];s(p,m,v,i)}}}setTimeout(c,1)};var l=function(e,r,o){if(t){var a=new Audio;a.src=e,a.controls=!1,a.autoplay=!1,a.preload=!1,a.addEventListener("canplay",function(){r&&r(a)}),a.addEventListener("error",function(e){o&&o(e)}),document.body.appendChild(a)}else if(0===e.indexOf("data:audio")){var i=e.split(",")[1],u=Base64Binary.decodeArrayBuffer(i);n.decodeAudioData(u,r,o)}else{var l=new XMLHttpRequest;l.open("GET",e,!0),l.responseType="arraybuffer",l.onload=function(){n.decodeAudioData(l.response,r,o)},l.send()}}}()}(MIDI),function(e){"use strict";var n=null,t=null,r=e.WebMIDI={api:"webmidi"};r.send=function(e,n){t.send(e,1e3*n)},r.setController=function(e,n,r,o){t.send([e,n,r],1e3*o)},r.setVolume=function(e,n,r){t.send([176+e,7,n],1e3*r)},r.programChange=function(e,n,r){t.send([192+e,n],1e3*r)},r.pitchBend=function(e,n,r){t.send([224+e,n],1e3*r)},r.noteOn=function(e,n,r,o){t.send([144+e,n,r],1e3*o)},r.noteOff=function(e,n,r){t.send([128+e,n,0],1e3*r)},r.chordOn=function(e,n,r,o){for(var a=0;n.length>a;a++){var i=n[a];t.send([144+e,i,r],1e3*o)}},r.chordOff=function(e,n,r){for(var o=0;n.length>o;o++){var a=n[o];t.send([128+e,a,0],1e3*r)}},r.stopAllNotes=function(){t.cancel();for(var e=0;16>e;e++)t.send([176+e,123,0])},r.connect=function(o){e.setDefaultPlugin(r),navigator.requestMIDIAccess().then(function(e){n=e,t=n.outputs()[0],o.callback&&o.callback()},function(){if(window.AudioContext)o.api="webaudio";else{if(!window.Audio)return;o.api="audiotag"}e.loadPlugin(o)})}}(MIDI),"undefined"==typeof MIDI&&(MIDI={}),function(e){var n=e.util||(e.util={});if(n.request=function(n,r,o,a){"use strict";"string"==typeof n&&(n={url:n});var i=n.body,u=n.url,l=n.headers,c=n.responseType,s=n.withCredentials,d=n.asBinaryString,r=r||n.onload,o=o||n.onerror,a=a||n.onprogress;if(t!==void 0&&e.loc.isLocalUrl(u))return t.readFile(u,"utf8",function(e,n){e?o&&o(e,!1):r&&r({responseText:n})}),void 0;var f=new XMLHttpRequest;if(f.open(i?"POST":"GET",u,!0),l)for(var p in l)f.setRequestHeader(p,l[p]);else i&&f.setRequestHeader("Content-type","application/x-www-form-urlencoded");return d&&f.overrideMimeType&&f.overrideMimeType("text/plain; charset=x-user-defined"),c&&(f.responseType=c),s&&(f.withCredentials="true"),o&&"onerror"in f&&(f.onerror=o),a&&f.upload&&"onprogress"in f.upload&&(i?f.upload.onprogress=a:f.onprogress=a),f.onreadystatechange=function(n){4===f.readyState&&(200===f.status||304===f.status||0===f.status&&e.client&&e.client.cordova?r&&r(f):o&&o(n,!1))},f.send(i),f},"undefined"!=typeof module&&module.exports){var t=require("fs");XMLHttpRequest=require("xmlhttprequest").XMLHttpRequest,module.exports=e.util.request}}(MIDI),dom===void 0)var dom={};(function(){"use strict";dom.loadScript=function(){return this.loaded={},this.loading={},this},dom.loadScript.prototype.add=function(n){var t=this;"string"==typeof n&&(n={url:n});var r=n.urls;r===void 0&&(r=[{url:n.url,verify:n.verify}]);var o=document.getElementsByTagName("head")[0],a=function(n,r){t.loaded[n.url]||r&&e(r)===!1||(t.loaded[n.url]=!0,t.loading[n.url]&&t.loading[n.url](),delete t.loading[n.url],n.callback&&n.callback(),f!==void 0&&f())},i=!1,u=[],l=function(e){if("string"==typeof e&&(e={url:e,verify:n.verify}),/([\w\d.\[\]\'\"])$/.test(e.verify)){var r=e.test=e.verify;if("object"==typeof r)for(var l=0;r.length>l;l++)u.push(r[l]);else u.push(r)}if(!t.loaded[e.url]){var s=document.createElement("script");s.onreadystatechange=function(){("loaded"===this.readyState||"complete"===this.readyState)&&a(e)},s.onload=function(){a(e)},s.onerror=function(){if(i=!0,delete t.loading[e.url],"object"==typeof e.test)for(var n in e.test)c(e.test[n]);else c(e.test)},s.setAttribute("type","text/javascript"),s.setAttribute("src",e.url),o.appendChild(s),t.loading[e.url]=function(){}}},c=function(e){for(var n=[],t=0;u.length>t;t++)u[t]!==e&&n.push(u[t]);u=n},s=function(t){if(t)a(t,t.test);else for(var o=0;r.length>o;o++)a(r[o],r[o].test);for(var l=!0,o=0;u.length>o;o++)e(u[o])===!1&&(l=!1);!n.strictOrder&&l?i?n.error&&n.error():n.callback&&n.callback():setTimeout(function(){s(t)},10)};if(n.strictOrder){var d=-1,f=function(){if(d++,r[d]){var e=r[d],o=e.url;t.loading[o]?t.loading[o]=function(){e.callback&&e.callback(),f()}:t.loaded[o]?f():(l(e),s(e))}else i?n.error&&n.error():n.callback&&n.callback()};f()}else for(var d=0;r.length>d;d++)l(r[d]),s(r[d])},dom.loadScript=new dom.loadScript;var e=function(e,n){try{e=e.split('"').join("").split("'").join("").split("]").join("").split("[").join(".");for(var t=e.split("."),r=t.length,o=n||window,a=0;r>a;a++){var i=t[a];if(null==o[i])return!1;o=o[i]}return!0}catch(u){return!1}}})(),"undefined"!=typeof module&&module.exports&&(module.exports=dom.loadScript);
\ No newline at end of file
diff --git a/demo-Basic.html b/demo-Basic.html
deleted file mode 100644
index ac81a97..0000000
--- a/demo-Basic.html
+++ /dev/null
@@ -1,37 +0,0 @@
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-<html xmlns = "http://www.w3.org/1999/xhtml">
-<head>
- <meta http-equiv="content-type" content="text/html; charset=utf-8" />
- <!-- polyfill -->
- <script src="./inc/polyfill/Base64.js" type="text/javascript"></script>
- <script src="./inc/polyfill/base64binary.js" type="text/javascript"></script>
- <script src="./inc/tuna/tuna.js" type="text/javascript"></script>
- <!-- midi.js package -->
- <script src="./js/midi/audioDetect.js" type="text/javascript"></script>
- <script src="./js/midi/loadPlugin.js" type="text/javascript"></script>
- <script src="./js/midi/plugin.js" type="text/javascript"></script>
- <script src="./js/midi/player.js" type="text/javascript"></script>
- <script src="./js/util/dom_request_xhr.js" type="text/javascript"></script>
-</head>
-<body>
-<script type="text/javascript">
-
-window.onload = function () {
-	MIDI.loadPlugin({
-		soundfontUrl: "./soundfont/",
-		instrument: "acoustic_grand_piano",
-		callback: function() {
-			var delay = 0; // play one note every quarter second
-			var note = 50; // the MIDI note
-			var velocity = 127; // how hard the note hits
-			// play the note
-			MIDI.setVolume(0, 127);
-			MIDI.noteOn(0, note, velocity, delay);
-			MIDI.noteOff(0, note, delay + 0.75);
-		}
-	});
-};
-
-</script>
-</body>
-</html>
\ No newline at end of file
diff --git a/demo-MultipleInstruments.html b/demo-MultipleInstruments.html
deleted file mode 100644
index 2dcd937..0000000
--- a/demo-MultipleInstruments.html
+++ /dev/null
@@ -1,49 +0,0 @@
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-<html xmlns = "http://www.w3.org/1999/xhtml">
-<head>
- <meta http-equiv="content-type" content="text/html; charset=utf-8" />
- <!-- polyfill -->
- <script src="./inc/polyfill/Base64.js" type="text/javascript"></script>
- <script src="./inc/polyfill/base64binary.js" type="text/javascript"></script>
- <script src="./inc/polyfill/WebMIDIAPI.js" type="text/javascript"></script>
- <script src="./inc/tuna/tuna.js" type="text/javascript"></script>
-<!-- jasmid package -->
-<script src="./inc/jasmid/stream.js"></script>
-<script src="./inc/jasmid/midifile.js"></script>
-<script src="./inc/jasmid/replayer.js"></script>
-<!-- color.js package -->
-<script src="./js/color/spaceW3.js" type="text/javascript"></script>
-<!-- midi.js package -->
- <script src="./js/midi/audioDetect.js" type="text/javascript"></script>
- <script src="./js/midi/definition.js" type="text/javascript"></script>
- <script src="./js/midi/plugin.js" type="text/javascript"></script>
- <script src="./js/midi/player.js" type="text/javascript"></script>
- <script src="./js/midi/synesthesia.js" type="text/javascript"></script>
- <script src="./js/util/dom_request_xhr.js" type="text/javascript"></script>
- <script src="./js/util/dom_request_script.js" type="text/javascript"></script>
- <script src="./js/util/queue.js" type="text/javascript"></script>
-<!-- loader.js package -->
-<script src="./js/widget/loader.js" type="text/javascript"></script>
-</head>
-<body>
-<script type="text/javascript">
-
-// This iterates through all the notes in these two soundfonts.
-// The synth_drum does not have as high or low of range of notes, 
-// so you wont hear it for a few seconds.
-	
-window.onload = function () {
-	MIDI.loader = new widget.Loader;
-	MIDI.loadPlugin({
-		soundfontUrl: "./soundfont/",
-		callback: function() {
-			player = MIDI.Player;
-			player.timeWarp = 1; // speed the song is played back
-			player.loadFile("./test.mid", player.start);
-		}
-	});
-};
-
-</script>
-</body>
-</html>
\ No newline at end of file
diff --git a/examples/Basic.html b/examples/Basic.html
new file mode 100644
index 0000000..4326ae7
--- /dev/null
+++ b/examples/Basic.html
@@ -0,0 +1,43 @@
+<!DOCTYPE html>
+<html xmlns = "http://www.w3.org/1999/xhtml">
+<head>
+	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
+	<!-- polyfill -->
+	<script src="../inc/shim/Base64.js" type="text/javascript"></script>
+	<script src="../inc/shim/Base64binary.js" type="text/javascript"></script>
+	<script src="../inc/shim/WebAudioAPI.js" type="text/javascript"></script>
+	<!-- midi.js package -->
+	<script src="../js/midi/audioDetect.js" type="text/javascript"></script>
+	<script src="../js/midi/gm.js" type="text/javascript"></script>
+	<script src="../js/midi/loader.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.audiotag.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.webaudio.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.webmidi.js" type="text/javascript"></script>
+	<script src="../js/midi/player.js" type="text/javascript"></script>
+	<script src="../js/midi/synesthesia.js" type="text/javascript"></script>
+	<!-- utils -->
+	<script src="../js/util/dom_request_xhr.js" type="text/javascript"></script>
+	<script src="../js/util/dom_request_script.js" type="text/javascript"></script>
+</head>
+<body>
+<script type="text/javascript">
+
+window.onload = function () {
+	MIDI.loadPlugin({
+		soundfontUrl: "./soundfont/",
+		instrument: "acoustic_grand_piano",
+		callback: function() {
+			var delay = 0; // play one note every quarter second
+			var note = 50; // the MIDI note
+			var velocity = 127; // how hard the note hits
+			// play the note
+			MIDI.setVolume(0, 127);
+			MIDI.noteOn(0, note, velocity, delay);
+			MIDI.noteOff(0, note, delay + 0.75);
+		}
+	});
+};
+
+</script>
+</body>
+</html>
\ No newline at end of file
diff --git a/demo-MIDIPlayer.html b/examples/MIDIPlayer.html
similarity index 94%
rename from demo-MIDIPlayer.html
rename to examples/MIDIPlayer.html
index d91a386..3830ee8 100644
--- a/demo-MIDIPlayer.html
+++ b/examples/MIDIPlayer.html
@@ -1,31 +1,37 @@
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<!DOCTYPE html>
 <html xmlns="http://www.w3.org/1999/xhtml">
 <head>
 	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
 	<title>MIDI.js - Sequencing in Javascript.</title>
 	<!-- midi.js css -->
 	<link href="./css/MIDIPlayer.css" rel="stylesheet" type="text/css" />
-	<!-- polyfill -->
-	<script src="./inc/polyfill/Base64.js" type="text/javascript"></script>
-	<script src="./inc/polyfill/base64binary.js" type="text/javascript"></script>
-	<script src="./inc/tuna/tuna.js" type="text/javascript"></script>
+	<!-- shim -->
+	<script src="../inc/shim/Base64.js" type="text/javascript"></script>
+	<script src="../inc/shim/Base64binary.js" type="text/javascript"></script>
+	<script src="../inc/shim/WebAudioAPI.js" type="text/javascript"></script>
+	<script src="../inc/shim/WebMIDIAPI.js" type="text/javascript"></script>
 	<!-- jasmid package -->
-	<script src="./inc/jasmid/stream.js"></script>
-	<script src="./inc/jasmid/midifile.js"></script>
-	<script src="./inc/jasmid/replayer.js"></script>
+	<script src="../inc/jasmid/stream.js"></script>
+	<script src="../inc/jasmid/midifile.js"></script>
+	<script src="../inc/jasmid/replayer.js"></script>
 	<!-- midi.js package -->
-	<script src="./js/midi/audioDetect.js" type="text/javascript"></script>
-	<script src="./js/midi/loadPlugin.js" type="text/javascript"></script>
-	<script src="./js/midi/plugin.js" type="text/javascript"></script>
-	<script src="./js/midi/player.js" type="text/javascript"></script>
-	<script src="./js/midi/synesthesia.js" type="text/javascript"></script>
+	<script src="../js/midi/audioDetect.js" type="text/javascript"></script>
+	<script src="../js/midi/gm.js" type="text/javascript"></script>
+	<script src="../js/midi/loader.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.audiotag.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.webaudio.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.webmidi.js" type="text/javascript"></script>
+	<script src="../js/midi/player.js" type="text/javascript"></script>
+	<script src="../js/midi/synesthesia.js" type="text/javascript"></script>
 	<!-- color.js package -->
-	<script src="./js/color/spaceW3.js" type="text/javascript"></script>
+	<script src="../js/color/spaceW3.js" type="text/javascript"></script>
 	<!-- loader.js package -->
-	<script src="./js/widget/loader.js" type="text/javascript"></script>
+	<script src="../js/widget/loader.js" type="text/javascript"></script>
 	<!-- utils -->
-	<script src="./js/util/dom_request_xhr.js" type="text/javascript"></script>
-	<script src="./js/util/event.js" type="text/javascript"></script>
+	<script src="../js/util/dom_request_xhr.js" type="text/javascript"></script>
+	<script src="../js/util/dom_request_script.js" type="text/javascript"></script>
+	<!-- event -->
+	<script src="./inc/event.js" type="text/javascript"></script>
 </head>
 <body>
 	<img src="./images/shiverMeTimbers.gif" style="position: fixed; top: 30px; left: 1300px; z-index: 4">
@@ -55,13 +61,15 @@ <h3 style="margin: 0">What&rsquo;s all this hubub?</h3>
 			simulations, Drum machines, MIDI recording, and all kinds of certified funkitude is within your grasps!
 			<p><a href="https://www.google.com/chrome">Google Chrome</a> is recommended for best listening experience, it&rsquo;s timing perfection! Firefox and Safari can both perform a bit more like the piano has been drinking, arrr.</p>
 			<p>Carpe beerum, and <a href="https://github.com/mudcube/MIDI.js">commandeer</a> yer own copy!</p>
-			<h3>Basic Examples:</h3>
+			<p><a href="../README.md" target="_blank">Documentation</a>
+			<h3>Basic Examples</h3>
 			<ol>
-				<li><a href="./demo-Basic.html" target="_blank">Play note</a></li>
-				<li><a href="./demo-MultipleInstruments.html" target="_blank">Multiple Instruments</a></li>
-				<li><a href="./demo-MIDIPlayer.html" target="_blank">MIDIPlayer</a></li>
+				<li><a href="./Basic.html" target="_blank">Basic (play note)</a></li>
+				<li><a href="./MultipleInstruments.html" target="_blank">Multiple Instruments</a></li>
+				<li><a href="./MIDIPlayer.html" target="_blank">MIDI Player</a></li>
+				<li><a href="./WhitneyMusicBox.html" target="_blank">Whitney Music Box</a></li>
 			</ol>
-			<h3>Demos:</h3>
+			<h3>Demos</h3>
 			<ol>
 				<li><a href="http://mudcu.be/piano/" target="_blank">Color Piano</a> by Michael Deal <a href="http://mudcu.be/">mudcube</a></li>
 				<li><a href="http://www.rgba.org/r3d/3d-piano-player/" target="_blank">3D Piano Player w/ Three.js</a> by Borja Morales @reality3d</li>
@@ -73,76 +81,16 @@ <h3>Demos:</h3>
 				<li><a href="http://labs.uxmonk.com/simon-says/" target="_blank">Whitney Music Box</a> by <a href="http://www.krazydad.com/">KrazyDad</a></li>
 				<li><a href="http://online-compute.rhcloud.com/ragamroll/" target="_blank">Ragamroll</a> by Mani Balasubramanian</li>
 			</ol>
-			<h3>Description of package:</h3>
-			<li><a href="./js/midi/loadPlugin.js">midi/loadPlugin.js</a>: &nbsp;Decides which framework is best to use, and sends request.</li>
-			<li class="indent">
-<pre>
-// interface to download soundfont, then execute callback;
-MIDI.loadPlugin(callback);
-// simple example to get started;
-MIDI.loadPlugin({
-	instrument: 1, // or "Acoustic Grand Piano"
-	callback: function() {
-		MIDI.noteOn(0, 100, 127, 0); // plays note once loaded
-	}
-});
-</pre>
-			</li>
-			<li><a href="./soundfont/soundfont-ogg.js">midi/soundfont.js</a>: &nbsp;Customizable base64 Soundfont.</li>
-			<li class="indent square"><a href="http://mudcu.be/journal/2011/11/base64-soundfonts/">Encode your own soundfonts</a>, Drums, Guitars, and so on.</li>
-			<li class="indent square">You are listening to <a href="http://packages.debian.org/search?keywords=fluid-soundfont-gm">Fluid (R3) General MIDI SoundFont (GM)</a>.</li>
-			<li><a href="./js/midi/plugin.js">midi/plugin.js</a>: &nbsp;Ties together the following frameworks;</li>
-			<li class="indent">
-<pre>
-MIDI.noteOn(channel, note, velocity, delay);
-MIDI.noteOff(channel, note, delay);
-MIDI.chordOn(channel, chord, velocity, delay);
-MIDI.chordOff(channel, chord, delay);
-MIDI.keyToNote = object; // A0 => 21
-MIDI.noteToKey = object; // 21 => A0
-</pre>
-			</li>
-			<li><a href="./js/midi/player.js">midi/player.js</a>: &nbsp;Streams the MIDI to the browser.
-				<li class="indent">
-<pre>
-MIDI.Player.currentTime = integer; // time we are at now within the song.
-MIDI.Player.endTime = integer; // time when song ends.
-MIDI.Player.playing = boolean; // are we playing? yes or no.
-MIDI.Player.loadFile(file, callback); // load .MIDI from base64 or binary XML request.
-MIDI.Player.start(); // start the MIDI track (you can put this in the loadFile callback)
-MIDI.Player.resume(); // resume the MIDI track from pause.
-MIDI.Player.pause(); // pause the MIDI track.
-MIDI.Player.stop(); // stops all audio being played, and resets currentTime to 0.
-<b>Callback whenever a note is played;</b>
-MIDI.Player.removeListener(); // removes current listener.
-MIDI.Player.addListener(function(data) { // set it to your own function!
-	var now = data.now; // where we are now
-	var end = data.end; // time when song ends
-	var channel = data.channel; // channel note is playing on
-	var message = data.message; // 128 is noteOff, 144 is noteOn
-	var note = data.note; // the note
-	var velocity = data.velocity; // the velocity of the note
-	// then do whatever you want with the information!
-});
-<b>Smooth animation, interpolates between onMidiEvent calls;</b>
-MIDI.Player.clearAnimation(); // clears current animation.
-MIDI.Player.setAnimation(function(data) {
-	var now = data.now; // where we are now
-	var end = data.end; // time when song ends
-	var events = data.events; // all the notes currently being processed
-	// then do what you want with the information!
-});
-</pre>
-				</li>
-			</li>
-			<li><a href="./js/midi/synesthesia.js">midi/synesthesia.js</a>: &nbsp;Note-to-color mappings (from Isaac Newton onwards).</li>
-			<h3>Many thanks to the authors of these libraries:</h3>
+			<h3>Many thanks to the authors of these libraries!</h3>
 			<li><a href="http://dev.w3.org/html5/spec/Overview.html">&lt;audio&gt;</a>: &nbsp;HTML5 specs</li>
-			<li><a href="https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html">WebAudioAPI</a>: &nbsp;W3C proposal by Google</li>
-			<li>Flash package: &nbsp;<a href="http://www.schillmania.com/projects/soundmanager2/">SoundManager2</a> by <a href="http://schillmania.com">Scott Schiller</a>
+			<li><a href="https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html">WebAudio API</a>: &nbsp;W3C proposal by Google</li>
+			<li><a href="http://www.w3.org/TR/webmidi/">WebAudio API Shim</a></li>
+			<li><a href="http://www.w3.org/TR/webmidi/">WebMIDI API</a></li>
+			<li><a href="http://www.w3.org/TR/webmidi/">WebMIDI API Shim</a></li>
+			<li><a href="http://www.schillmania.com/projects/soundmanager2/">SoundManager2</a> by <a href="http://schillmania.com">Scott Schiller</a> (Flash fallback)
 			</li>
-			<li><a href="https://github.com/gasman/jasmid">jasmid</a>: &nbsp;Reads MIDI file byte-code, and translats into a Javascript array.</li>
-			<li><a href="http://blog.danguer.com/2011/10/24/base64-binary-decoding-in-javascript/">base642binary.js</a>: &nbsp;Cleans up XML base64-requests for Web Audio API.</li>
+			<li><a href="https://github.com/gasman/jasmid">jasmid</a>: &nbsp;MIDI file byte-code reader, and translats into a Javascript array.</li>
+			<li><a href="http://blog.danguer.com/2011/10/24/base64-binary-decoding-in-javascript/">Base64binary.js</a>: &nbsp;Converts base64 soundfonts to binary for Web Audio API.</li>
 	</div>
 <script type="text/javascript">
 	if (typeof (console) === "undefined") var console = {
@@ -163,13 +111,13 @@ <h3>Many thanks to the authors of these libraries:</h3>
 		}
 	};
 	eventjs.add(window, "load", function (event) {
-		var link = document.createElement('link');
-		link.href = 'http://fonts.googleapis.com/css?family=Oswald';
+		var link = document.createElement("link");
+		link.href = "http://fonts.googleapis.com/css?family=Oswald";
 		link.ref = "stylesheet";
 		link.type = "text/css";
 		document.body.appendChild(link);
-		var link = document.createElement('link');
-		link.href = 'http://fonts.googleapis.com/css?family=Andada';
+		var link = document.createElement("link");
+		link.href = "http://fonts.googleapis.com/css?family=Andada";
 		link.ref = "stylesheet";
 		link.type = "text/css";
 		document.body.appendChild(link);
@@ -184,33 +132,35 @@ <h3>Many thanks to the authors of these libraries:</h3>
 		}
 		//
 		MIDI.loader = new widget.Loader;
-		MIDI.loadPlugin(function () {
-			// this is the language we are running in
-			var title = document.getElementById("title");
-			title.innerHTML = "Sound being generated with " + MIDI.lang + " " + JSON.stringify(MIDI.supports);
-			// this sets up the MIDI.Player and gets things going...
-			player = MIDI.Player;
-			player.timeWarp = 1; // speed the song is played back
-			player.loadFile(song[songid++ % 3], player.start);
-			// control the piano keys colors
-			var colorMap = MusicTheory.Synesthesia.map();
-			player.addListener(function (data) {
-				var pianoKey = data.note - MIDI.pianoKeyOffset;
-				var d = colorElements[pianoKey];
-				if (data.message === 144) {
-					var map = colorMap[data.note - 27];
-					if (map) d.style.background = map.hex;
-					d.style.color = "#fff";
-				} else {
-					d.style.background = "";
-					d.style.color = "";
-				}
-			});
-			//
-			ColorSphereBackground();
-			MIDIPlayerPercentage(player);
-			//
-			MIDI.loader.stop();
+		MIDI.loadPlugin({
+			soundfontUrl: "./soundfont/",
+			callback: function() {
+				// this is the language we are running in
+				var title = document.getElementById("title");
+				title.innerHTML = "Sound being generated with " + MIDI.api + " " + JSON.stringify(MIDI.supports);
+				// this sets up the MIDI.Player and gets things going...
+				player = MIDI.Player;
+				player.timeWarp = 1; // speed the song is played back
+				player.loadFile(song[songid++ % song.length], player.start);
+				// control the piano keys colors
+				var colorMap = MIDI.Synesthesia.map();
+				player.addListener(function (data) {
+					var pianoKey = data.note - 21;
+					var d = colorElements[pianoKey];
+					if (!d) return;
+					if (data.message === 144) {
+						var map = colorMap[data.note - 27];
+						if (map) d.style.background = map.hex;
+						d.style.color = "#fff";
+					} else {
+						d.style.background = "";
+						d.style.color = "";
+					}
+				});
+				//
+				ColorSphereBackground();
+				MIDIPlayerPercentage(player);
+			}
 		});
 	});
 	///
@@ -349,15 +299,22 @@ <h3>Many thanks to the authors of these libraries:</h3>
 	// MIDI files from Disklavier World
 	var songid = 0;
 	var song = [
-		//Sinding - Rustles of Spring Op-32 No-3
+		// Test 1
+//		'data:audio/mid;base64,TVRoZAAAAAYAAQABAMBNVHJrAAAARwD/WAQEAhgIAP9RAwehIAD/AwlOZXcgVHJhY2sAwHMAkDxkMoA8MIEOkDxkMoA8MIEOkDxkMoA8MIEOkDxkgT+APDAB/y8A',
+		// Test 2
+//		'data:audio/mid;base64,TVRoZAAAAAYAAQABAMBNVHJrAAAAVwD/WAQEAhgIAP9RAwehIAD/AwlOZXcgVHJhY2sAwAAAkDxkgRCAPDAwkDxkgRCAPDAwkDxkAJBAZACQQ2SBEIA8MACAQDAAgEMwMJA8ZIE/gDwwJv8vAA==',
+		// Test 3
+//		'data:audio/mid;base64,TVRoZAAAAAYAAQABAMBNVHJrAAAAXwD/WAQEAhgIAP9RAwehIAD/AwlOZXcgVHJhY2sAwAAAkDxkgRCAPDAwkDxkgRCAPDAwkDxkAJBAZACQQ2QHkEhkgQmAPDAAgEAwAIBDMACASDAwkDxkgT+APDAm/y8A',
+
+		// Sinding - Rustles of Spring Op-32 No-3
 		'data:audio/midi;base64,',
-		//Tchaikovsky - Arabian Dance
+		// Tchaikovsky - Arabian Dance
 		'data:audio/midi;base64,',
-		//Tchaikovsky - Waltz of the Flowers
+		// Tchaikovsky - Waltz of the Flowers
 		'data:audio/midi;base64,',
-		//Granados - Oriental
+		// Granados - Oriental
 		'data:audio/midi;base64,',
-		//Joplin - The Entertainer
+		// Joplin - The Entertainer
 		'data:audio/midi;base64,'
 	];
 </script>
diff --git a/examples/MultipleInstruments.html b/examples/MultipleInstruments.html
new file mode 100644
index 0000000..25608e5
--- /dev/null
+++ b/examples/MultipleInstruments.html
@@ -0,0 +1,75 @@
+<!DOCTYPE html>
+<html xmlns = "http://www.w3.org/1999/xhtml">
+<head>
+	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
+	<!-- polyfill -->
+	<script src="../inc/shim/Base64.js" type="text/javascript"></script>
+	<script src="../inc/shim/Base64binary.js" type="text/javascript"></script>
+	<script src="../inc/shim/WebAudioAPI.js" type="text/javascript"></script>
+	<!-- jasmid package -->
+	<script src="../inc/jasmid/stream.js"></script>
+	<script src="../inc/jasmid/midifile.js"></script>
+	<script src="../inc/jasmid/replayer.js"></script>
+	<!-- color.js package -->
+	<script src="../js/color/spaceW3.js" type="text/javascript"></script>
+	<!-- midi.js package -->
+	<script src="../js/midi/audioDetect.js" type="text/javascript"></script>
+	<script src="../js/midi/gm.js" type="text/javascript"></script>
+	<script src="../js/midi/loader.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.audiotag.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.webaudio.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.webmidi.js" type="text/javascript"></script>
+	<script src="../js/midi/player.js" type="text/javascript"></script>
+	<script src="../js/midi/synesthesia.js" type="text/javascript"></script>
+	<!-- utils -->
+	<script src="../js/util/dom_request_xhr.js" type="text/javascript"></script>
+	<script src="../js/util/dom_request_script.js" type="text/javascript"></script>
+	<!-- loader.js package -->
+	<script src="../js/widget/loader.js" type="text/javascript"></script>
+	<style>
+		td {background: #000; padding: 0 2px; color: #fff; }
+	</style>
+</head>
+<body>
+<script type="text/javascript">
+
+// This iterates through all the notes in these two soundfonts.
+// The synth_drum does not have as high or low of range of notes, 
+// so you wont hear it for a few seconds.
+	
+var song = 'data:audio/midi;base64,';
+// var song = 'data:audio/midi;base64,';
+    var url = '../generator/sf2/FluidSynth_1.43.sf2';
+    var wml = new SoundFont.WebMidiLink();
+    var reverb;
+    wml.setLoadCallback();
+    wml.setup(url);
+
+
+
+window.onload = function () {
+
+
+
+	var handleError = function(err) {
+		console.log(err);
+	};
+	var handleProgress = function(state, percent, desc) {
+		console.log(state, percent, desc)
+	};
+	///
+	MIDI.loader = new widget.Loader;
+	MIDI.loadPlugin({
+		soundfontUrl: "./soundfont/",
+		onprogress: handleProgress,
+		callback: function() {
+			var player = MIDI.Player;
+			player.timeWarp = 1; // speed the song is played back
+			player.loadFile(song, player.start, handleProgress, handleError);
+		}
+	});
+};
+
+</script>
+</body>
+</html>
\ No newline at end of file
diff --git a/examples/Patterns.html b/examples/Patterns.html
new file mode 100644
index 0000000..e4d782e
--- /dev/null
+++ b/examples/Patterns.html
@@ -0,0 +1,44 @@
+<!DOCTYPE html>
+<html xmlns = "http://www.w3.org/1999/xhtml">
+<head>
+ <meta http-equiv="content-type" content="text/html; charset=utf-8" />
+	<!-- shim -->
+	<script src="../inc/shim/Base64binary.js" type="text/javascript"></script>
+	<!-- jasmid package -->
+	<script src="../inc/jasmid/stream.js"></script>
+	<script src="../inc/jasmid/midifile.js"></script>
+	<script src="../inc/jasmid/replayer.js"></script>
+	<!-- midi.js package -->
+	<script src="../js/midi/audioDetect.js" type="text/javascript"></script>
+	<script src="../js/midi/gm.js" type="text/javascript"></script>
+	<script src="../js/midi/loader.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.audiotag.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.webaudio.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.webmidi.js" type="text/javascript"></script>
+	<script src="../js/midi/player.js" type="text/javascript"></script>
+	<script src="../js/midi/synesthesia.js" type="text/javascript"></script>
+	<!-- utils -->
+	<script src="../js/util/dom_request_xhr.js" type="text/javascript"></script>
+	<script src="../js/util/dom_request_script.js" type="text/javascript"></script>
+</head>
+<body>
+<script type="text/javascript">
+
+var song = 'data:audio/midi;base64,';
+
+var song = '../media/patterns/Drum%20Patterns%20Type%201/260%20Patterns/6AFROCUB.MID';
+
+window.onload = function () {
+	MIDI.loadPlugin({
+		soundfontUrl: "./soundfont/",
+		instrument: "glockenspiel",
+		callback: function() {
+			var player = MIDI.Player;
+			player.loadFile(song, player.start);
+		}
+	});
+};
+
+</script>
+</body>
+</html>
\ No newline at end of file
diff --git a/demo-WhitneyMusicBox.html b/examples/WhitneyMusicBox.html
similarity index 59%
rename from demo-WhitneyMusicBox.html
rename to examples/WhitneyMusicBox.html
index 60eb3f3..9c282e8 100644
--- a/demo-WhitneyMusicBox.html
+++ b/examples/WhitneyMusicBox.html
@@ -2,34 +2,39 @@
 <html lang="en">
 <head>
 <title>Whitney Music Box in HTML5</title>
- <meta http-equiv="content-type" content="text/html; charset=utf-8" />
- <!-- polyfill -->
- <script src="./inc/polyfill/Base64.js" type="text/javascript"></script>
- <script src="./inc/polyfill/base64binary.js" type="text/javascript"></script>
- <script src="./inc/tuna/tuna.js" type="text/javascript"></script>
-<!-- midi.js package -->
- <script src="./js/midi/audioDetect.js" type="text/javascript"></script>
- <script src="./js/midi/loadPlugin.js" type="text/javascript"></script>
- <script src="./js/midi/plugin.js" type="text/javascript"></script>
- <script src="./js/midi/player.js" type="text/javascript"></script>
- <script src="./js/midi/synesthesia.js" type="text/javascript"></script>
- <!-- color.js package -->
- <script src="./js/color/spaceW3.js" type="text/javascript"></script>
- <!-- loader.js package -->
- <script src="./js/widget/loader.js" type="text/javascript"></script>
- <!-- utils -->
- <script src="./js/util/dom_request_xhr.js" type="text/javascript"></script>
- <script src="./js/util/event.js" type="text/javascript"></script>
- <!-- font -->
- <link href="http://fonts.googleapis.com/css?family=Andada" rel="stylesheet" type="text/css" />
- <style>
- body {
- 	background: #000; color: #fff; font-family: andada; line-height: 1.5em;
- }
- a {
- 	color: #fff
- }
- </style>
+	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
+	<!-- shim -->
+	<script src="../inc/shim/Base64.js" type="text/javascript"></script>
+	<script src="../inc/shim/Base64binary.js" type="text/javascript"></script>
+	<script src="../inc/shim/WebAudioAPI.js" type="text/javascript"></script>
+	<!-- midi.js package -->
+	<script src="../js/midi/audioDetect.js" type="text/javascript"></script>
+	<script src="../js/midi/gm.js" type="text/javascript"></script>
+	<script src="../js/midi/loader.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.audiotag.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.webaudio.js" type="text/javascript"></script>
+	<script src="../js/midi/plugin.webmidi.js" type="text/javascript"></script>
+	<script src="../js/midi/player.js" type="text/javascript"></script>
+	<script src="../js/midi/synesthesia.js" type="text/javascript"></script>
+	<!-- color.js package -->
+	<script src="../js/color/spaceW3.js" type="text/javascript"></script>
+	<!-- loader.js package -->
+	<script src="../js/widget/loader.js" type="text/javascript"></script>
+	<!-- utils -->
+	<script src="../js/util/dom_request_xhr.js" type="text/javascript"></script>
+	<script src="../js/util/dom_request_script.js" type="text/javascript"></script>
+	<!-- event -->
+	<script src="./inc/event.js" type="text/javascript"></script>
+	<!-- font -->
+	<link href="http://fonts.googleapis.com/css?family=Andada" rel="stylesheet" type="text/css" />
+	<style>
+		body {
+			background: #000; color: #fff; font-family: andada; line-height: 1.5em;
+		}
+		a {
+			color: #fff
+		}
+	</style>
 </head>
 <body>
 Whitney Music Box animation in HTML5.<br>
@@ -72,6 +77,8 @@
 		if (Math.floor(a / PI2) !== Math.floor(tines[i] / PI2)) {
 			MIDI.noteOn(0, i + 21, 100, 0);
 			MIDI.noteOn(0, i + 21 + 36, 100, 0);
+			MIDI.noteOff(0, i + 21, 0.1);
+			MIDI.noteOff(0, i + 21 + 36, 0.1);
 			lastSound[i] = ms;
 		}
 		var x = (cx + Math.cos(a) * len);
@@ -90,8 +97,9 @@
 };
 
 window.onload = function () {
-	MIDI.loader = new widgets.Loader;
+	MIDI.loader = new widget.Loader;
 	MIDI.loadPlugin({
+		soundfontUrl: "./soundfont/",
 		instrument: "acoustic_grand_piano", // or multiple instruments
 		callback: function() {
 			MIDI.loader.stop();	
diff --git a/css/MIDIPlayer.css b/examples/css/MIDIPlayer.css
similarity index 100%
rename from css/MIDIPlayer.css
rename to examples/css/MIDIPlayer.css
diff --git a/images/backward.png b/examples/images/backward.png
similarity index 100%
rename from images/backward.png
rename to examples/images/backward.png
diff --git a/images/forward.png b/examples/images/forward.png
similarity index 100%
rename from images/forward.png
rename to examples/images/forward.png
diff --git a/images/pause.png b/examples/images/pause.png
similarity index 100%
rename from images/pause.png
rename to examples/images/pause.png
diff --git a/images/play.png b/examples/images/play.png
similarity index 100%
rename from images/play.png
rename to examples/images/play.png
diff --git a/images/shiverMeTimbers.gif b/examples/images/shiverMeTimbers.gif
similarity index 100%
rename from images/shiverMeTimbers.gif
rename to examples/images/shiverMeTimbers.gif
diff --git a/images/stop.png b/examples/images/stop.png
similarity index 100%
rename from images/stop.png
rename to examples/images/stop.png
diff --git a/images/tuna.png b/examples/images/tuna.png
similarity index 100%
rename from images/tuna.png
rename to examples/images/tuna.png
diff --git a/js/util/event.js b/examples/inc/event.js
similarity index 100%
rename from js/util/event.js
rename to examples/inc/event.js
diff --git a/soundfont/acoustic_grand_piano-mp3.js b/examples/soundfont/acoustic_grand_piano-mp3.js
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3.js
rename to examples/soundfont/acoustic_grand_piano-mp3.js
diff --git a/soundfont/acoustic_grand_piano-mp3/A0.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/A0.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/A0.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/A0.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/A1.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/A1.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/A1.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/A1.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/A2.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/A2.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/A2.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/A2.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/A3.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/A3.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/A3.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/A3.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/A4.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/A4.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/A4.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/A4.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/A5.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/A5.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/A5.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/A5.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/A6.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/A6.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/A6.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/A6.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/A7.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/A7.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/A7.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/A7.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Ab1.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Ab1.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Ab1.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Ab1.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Ab2.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Ab2.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Ab2.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Ab2.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Ab3.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Ab3.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Ab3.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Ab3.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Ab4.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Ab4.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Ab4.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Ab4.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Ab5.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Ab5.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Ab5.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Ab5.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Ab6.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Ab6.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Ab6.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Ab6.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Ab7.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Ab7.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Ab7.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Ab7.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/B0.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/B0.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/B0.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/B0.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/B1.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/B1.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/B1.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/B1.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/B2.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/B2.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/B2.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/B2.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/B3.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/B3.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/B3.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/B3.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/B4.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/B4.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/B4.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/B4.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/B5.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/B5.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/B5.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/B5.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/B6.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/B6.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/B6.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/B6.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/B7.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/B7.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/B7.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/B7.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Bb0.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Bb0.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Bb0.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Bb0.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Bb1.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Bb1.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Bb1.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Bb1.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Bb2.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Bb2.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Bb2.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Bb2.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Bb3.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Bb3.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Bb3.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Bb3.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Bb4.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Bb4.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Bb4.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Bb4.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Bb5.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Bb5.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Bb5.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Bb5.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Bb6.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Bb6.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Bb6.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Bb6.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Bb7.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Bb7.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Bb7.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Bb7.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/C1.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/C1.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/C1.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/C1.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/C2.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/C2.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/C2.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/C2.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/C3.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/C3.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/C3.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/C3.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/C4.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/C4.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/C4.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/C4.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/C5.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/C5.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/C5.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/C5.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/C6.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/C6.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/C6.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/C6.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/C7.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/C7.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/C7.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/C7.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/C8.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/C8.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/C8.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/C8.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/D1.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/D1.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/D1.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/D1.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/D2.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/D2.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/D2.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/D2.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/D3.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/D3.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/D3.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/D3.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/D4.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/D4.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/D4.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/D4.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/D5.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/D5.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/D5.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/D5.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/D6.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/D6.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/D6.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/D6.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/D7.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/D7.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/D7.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/D7.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Db1.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Db1.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Db1.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Db1.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Db2.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Db2.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Db2.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Db2.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Db3.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Db3.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Db3.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Db3.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Db4.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Db4.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Db4.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Db4.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Db5.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Db5.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Db5.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Db5.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Db6.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Db6.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Db6.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Db6.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Db7.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Db7.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Db7.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Db7.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Db8.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Db8.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Db8.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Db8.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/E1.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/E1.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/E1.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/E1.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/E2.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/E2.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/E2.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/E2.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/E3.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/E3.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/E3.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/E3.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/E4.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/E4.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/E4.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/E4.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/E5.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/E5.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/E5.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/E5.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/E6.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/E6.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/E6.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/E6.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/E7.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/E7.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/E7.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/E7.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Eb1.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Eb1.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Eb1.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Eb1.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Eb2.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Eb2.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Eb2.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Eb2.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Eb3.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Eb3.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Eb3.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Eb3.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Eb4.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Eb4.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Eb4.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Eb4.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Eb5.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Eb5.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Eb5.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Eb5.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Eb6.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Eb6.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Eb6.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Eb6.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Eb7.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Eb7.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Eb7.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Eb7.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/F1.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/F1.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/F1.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/F1.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/F2.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/F2.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/F2.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/F2.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/F3.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/F3.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/F3.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/F3.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/F4.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/F4.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/F4.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/F4.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/F5.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/F5.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/F5.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/F5.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/F6.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/F6.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/F6.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/F6.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/F7.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/F7.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/F7.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/F7.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/G1.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/G1.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/G1.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/G1.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/G2.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/G2.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/G2.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/G2.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/G3.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/G3.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/G3.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/G3.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/G4.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/G4.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/G4.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/G4.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/G5.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/G5.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/G5.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/G5.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/G6.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/G6.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/G6.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/G6.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/G7.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/G7.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/G7.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/G7.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Gb1.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Gb1.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Gb1.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Gb1.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Gb2.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Gb2.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Gb2.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Gb2.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Gb3.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Gb3.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Gb3.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Gb3.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Gb4.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Gb4.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Gb4.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Gb4.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Gb5.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Gb5.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Gb5.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Gb5.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Gb6.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Gb6.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Gb6.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Gb6.mp3
diff --git a/soundfont/acoustic_grand_piano-mp3/Gb7.mp3 b/examples/soundfont/acoustic_grand_piano-mp3/Gb7.mp3
similarity index 100%
rename from soundfont/acoustic_grand_piano-mp3/Gb7.mp3
rename to examples/soundfont/acoustic_grand_piano-mp3/Gb7.mp3
diff --git a/soundfont/acoustic_grand_piano-ogg.js b/examples/soundfont/acoustic_grand_piano-ogg.js
similarity index 100%
rename from soundfont/acoustic_grand_piano-ogg.js
rename to examples/soundfont/acoustic_grand_piano-ogg.js
diff --git a/soundfont/synth_drum-mp3.js b/examples/soundfont/synth_drum-mp3.js
similarity index 100%
rename from soundfont/synth_drum-mp3.js
rename to examples/soundfont/synth_drum-mp3.js
diff --git a/examples/soundfont/synth_drum-mp3/A0.mp3 b/examples/soundfont/synth_drum-mp3/A0.mp3
new file mode 100644
index 0000000..be24e09
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/A0.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/A1.mp3 b/examples/soundfont/synth_drum-mp3/A1.mp3
new file mode 100644
index 0000000..74ac6b9
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/A1.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/A2.mp3 b/examples/soundfont/synth_drum-mp3/A2.mp3
new file mode 100644
index 0000000..0af19b9
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/A2.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/A3.mp3 b/examples/soundfont/synth_drum-mp3/A3.mp3
new file mode 100644
index 0000000..0203dfa
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/A3.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/A4.mp3 b/examples/soundfont/synth_drum-mp3/A4.mp3
new file mode 100644
index 0000000..f3a56da
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/A4.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/A5.mp3 b/examples/soundfont/synth_drum-mp3/A5.mp3
new file mode 100644
index 0000000..dd5d820
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/A5.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/A6.mp3 b/examples/soundfont/synth_drum-mp3/A6.mp3
new file mode 100644
index 0000000..049c110
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/A6.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/A7.mp3 b/examples/soundfont/synth_drum-mp3/A7.mp3
new file mode 100644
index 0000000..00a8575
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/A7.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Ab1.mp3 b/examples/soundfont/synth_drum-mp3/Ab1.mp3
new file mode 100644
index 0000000..250c337
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Ab1.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Ab2.mp3 b/examples/soundfont/synth_drum-mp3/Ab2.mp3
new file mode 100644
index 0000000..5482280
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Ab2.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Ab3.mp3 b/examples/soundfont/synth_drum-mp3/Ab3.mp3
new file mode 100644
index 0000000..a9f7e00
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Ab3.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Ab4.mp3 b/examples/soundfont/synth_drum-mp3/Ab4.mp3
new file mode 100644
index 0000000..dbbecac
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Ab4.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Ab5.mp3 b/examples/soundfont/synth_drum-mp3/Ab5.mp3
new file mode 100644
index 0000000..6f52c6f
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Ab5.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Ab6.mp3 b/examples/soundfont/synth_drum-mp3/Ab6.mp3
new file mode 100644
index 0000000..4662b4c
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Ab6.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Ab7.mp3 b/examples/soundfont/synth_drum-mp3/Ab7.mp3
new file mode 100644
index 0000000..74ebf12
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Ab7.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/B0.mp3 b/examples/soundfont/synth_drum-mp3/B0.mp3
new file mode 100644
index 0000000..dcf81ab
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/B0.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/B1.mp3 b/examples/soundfont/synth_drum-mp3/B1.mp3
new file mode 100644
index 0000000..c41d413
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/B1.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/B2.mp3 b/examples/soundfont/synth_drum-mp3/B2.mp3
new file mode 100644
index 0000000..e955735
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/B2.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/B3.mp3 b/examples/soundfont/synth_drum-mp3/B3.mp3
new file mode 100644
index 0000000..82ebbbe
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/B3.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/B4.mp3 b/examples/soundfont/synth_drum-mp3/B4.mp3
new file mode 100644
index 0000000..14ac805
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/B4.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/B5.mp3 b/examples/soundfont/synth_drum-mp3/B5.mp3
new file mode 100644
index 0000000..4348b41
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/B5.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/B6.mp3 b/examples/soundfont/synth_drum-mp3/B6.mp3
new file mode 100644
index 0000000..8fa4d97
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/B6.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/B7.mp3 b/examples/soundfont/synth_drum-mp3/B7.mp3
new file mode 100644
index 0000000..a651554
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/B7.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Bb0.mp3 b/examples/soundfont/synth_drum-mp3/Bb0.mp3
new file mode 100644
index 0000000..1147bb4
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Bb0.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Bb1.mp3 b/examples/soundfont/synth_drum-mp3/Bb1.mp3
new file mode 100644
index 0000000..932e1ca
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Bb1.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Bb2.mp3 b/examples/soundfont/synth_drum-mp3/Bb2.mp3
new file mode 100644
index 0000000..4081434
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Bb2.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Bb3.mp3 b/examples/soundfont/synth_drum-mp3/Bb3.mp3
new file mode 100644
index 0000000..97d738c
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Bb3.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Bb4.mp3 b/examples/soundfont/synth_drum-mp3/Bb4.mp3
new file mode 100644
index 0000000..bb2bad2
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Bb4.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Bb5.mp3 b/examples/soundfont/synth_drum-mp3/Bb5.mp3
new file mode 100644
index 0000000..644bec9
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Bb5.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Bb6.mp3 b/examples/soundfont/synth_drum-mp3/Bb6.mp3
new file mode 100644
index 0000000..3cba805
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Bb6.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Bb7.mp3 b/examples/soundfont/synth_drum-mp3/Bb7.mp3
new file mode 100644
index 0000000..fc7d4ce
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Bb7.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/C1.mp3 b/examples/soundfont/synth_drum-mp3/C1.mp3
new file mode 100644
index 0000000..f3b0e86
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/C1.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/C2.mp3 b/examples/soundfont/synth_drum-mp3/C2.mp3
new file mode 100644
index 0000000..77a50b1
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/C2.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/C3.mp3 b/examples/soundfont/synth_drum-mp3/C3.mp3
new file mode 100644
index 0000000..ca191df
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/C3.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/C4.mp3 b/examples/soundfont/synth_drum-mp3/C4.mp3
new file mode 100644
index 0000000..efb47ff
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/C4.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/C5.mp3 b/examples/soundfont/synth_drum-mp3/C5.mp3
new file mode 100644
index 0000000..30df055
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/C5.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/C6.mp3 b/examples/soundfont/synth_drum-mp3/C6.mp3
new file mode 100644
index 0000000..9ce0e7f
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/C6.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/C7.mp3 b/examples/soundfont/synth_drum-mp3/C7.mp3
new file mode 100644
index 0000000..0995ee1
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/C7.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/C8.mp3 b/examples/soundfont/synth_drum-mp3/C8.mp3
new file mode 100644
index 0000000..4793378
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/C8.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/D1.mp3 b/examples/soundfont/synth_drum-mp3/D1.mp3
new file mode 100644
index 0000000..053f4d4
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/D1.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/D2.mp3 b/examples/soundfont/synth_drum-mp3/D2.mp3
new file mode 100644
index 0000000..5e38f54
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/D2.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/D3.mp3 b/examples/soundfont/synth_drum-mp3/D3.mp3
new file mode 100644
index 0000000..c50b414
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/D3.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/D4.mp3 b/examples/soundfont/synth_drum-mp3/D4.mp3
new file mode 100644
index 0000000..179adbc
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/D4.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/D5.mp3 b/examples/soundfont/synth_drum-mp3/D5.mp3
new file mode 100644
index 0000000..dd37cc1
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/D5.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/D6.mp3 b/examples/soundfont/synth_drum-mp3/D6.mp3
new file mode 100644
index 0000000..92ce8ff
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/D6.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/D7.mp3 b/examples/soundfont/synth_drum-mp3/D7.mp3
new file mode 100644
index 0000000..c60cca9
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/D7.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Db1.mp3 b/examples/soundfont/synth_drum-mp3/Db1.mp3
new file mode 100644
index 0000000..a0f18a5
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Db1.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Db2.mp3 b/examples/soundfont/synth_drum-mp3/Db2.mp3
new file mode 100644
index 0000000..4b4d509
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Db2.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Db3.mp3 b/examples/soundfont/synth_drum-mp3/Db3.mp3
new file mode 100644
index 0000000..9ad1192
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Db3.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Db4.mp3 b/examples/soundfont/synth_drum-mp3/Db4.mp3
new file mode 100644
index 0000000..7ad7e9f
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Db4.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Db5.mp3 b/examples/soundfont/synth_drum-mp3/Db5.mp3
new file mode 100644
index 0000000..ed8f31a
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Db5.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Db6.mp3 b/examples/soundfont/synth_drum-mp3/Db6.mp3
new file mode 100644
index 0000000..0a0e2b1
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Db6.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Db7.mp3 b/examples/soundfont/synth_drum-mp3/Db7.mp3
new file mode 100644
index 0000000..d684bf8
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Db7.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/E1.mp3 b/examples/soundfont/synth_drum-mp3/E1.mp3
new file mode 100644
index 0000000..a48a5a9
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/E1.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/E2.mp3 b/examples/soundfont/synth_drum-mp3/E2.mp3
new file mode 100644
index 0000000..36ed0b8
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/E2.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/E3.mp3 b/examples/soundfont/synth_drum-mp3/E3.mp3
new file mode 100644
index 0000000..68af219
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/E3.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/E4.mp3 b/examples/soundfont/synth_drum-mp3/E4.mp3
new file mode 100644
index 0000000..9180433
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/E4.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/E5.mp3 b/examples/soundfont/synth_drum-mp3/E5.mp3
new file mode 100644
index 0000000..a37a16e
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/E5.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/E6.mp3 b/examples/soundfont/synth_drum-mp3/E6.mp3
new file mode 100644
index 0000000..06ebd3c
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/E6.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/E7.mp3 b/examples/soundfont/synth_drum-mp3/E7.mp3
new file mode 100644
index 0000000..bd5cf49
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/E7.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Eb1.mp3 b/examples/soundfont/synth_drum-mp3/Eb1.mp3
new file mode 100644
index 0000000..37a5218
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Eb1.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Eb2.mp3 b/examples/soundfont/synth_drum-mp3/Eb2.mp3
new file mode 100644
index 0000000..f87adfa
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Eb2.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Eb3.mp3 b/examples/soundfont/synth_drum-mp3/Eb3.mp3
new file mode 100644
index 0000000..2765980
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Eb3.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Eb4.mp3 b/examples/soundfont/synth_drum-mp3/Eb4.mp3
new file mode 100644
index 0000000..ce0925c
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Eb4.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Eb5.mp3 b/examples/soundfont/synth_drum-mp3/Eb5.mp3
new file mode 100644
index 0000000..23e88f3
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Eb5.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Eb6.mp3 b/examples/soundfont/synth_drum-mp3/Eb6.mp3
new file mode 100644
index 0000000..efb6567
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Eb6.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Eb7.mp3 b/examples/soundfont/synth_drum-mp3/Eb7.mp3
new file mode 100644
index 0000000..15993a6
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Eb7.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/F1.mp3 b/examples/soundfont/synth_drum-mp3/F1.mp3
new file mode 100644
index 0000000..4541feb
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/F1.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/F2.mp3 b/examples/soundfont/synth_drum-mp3/F2.mp3
new file mode 100644
index 0000000..26fd5c1
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/F2.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/F3.mp3 b/examples/soundfont/synth_drum-mp3/F3.mp3
new file mode 100644
index 0000000..99f6055
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/F3.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/F4.mp3 b/examples/soundfont/synth_drum-mp3/F4.mp3
new file mode 100644
index 0000000..9e5f961
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/F4.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/F5.mp3 b/examples/soundfont/synth_drum-mp3/F5.mp3
new file mode 100644
index 0000000..ff599b5
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/F5.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/F6.mp3 b/examples/soundfont/synth_drum-mp3/F6.mp3
new file mode 100644
index 0000000..7234cc8
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/F6.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/F7.mp3 b/examples/soundfont/synth_drum-mp3/F7.mp3
new file mode 100644
index 0000000..6b63521
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/F7.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/G1.mp3 b/examples/soundfont/synth_drum-mp3/G1.mp3
new file mode 100644
index 0000000..c6ba43f
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/G1.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/G2.mp3 b/examples/soundfont/synth_drum-mp3/G2.mp3
new file mode 100644
index 0000000..3b8cfd0
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/G2.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/G3.mp3 b/examples/soundfont/synth_drum-mp3/G3.mp3
new file mode 100644
index 0000000..69f58c5
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/G3.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/G4.mp3 b/examples/soundfont/synth_drum-mp3/G4.mp3
new file mode 100644
index 0000000..a57c4a1
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/G4.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/G5.mp3 b/examples/soundfont/synth_drum-mp3/G5.mp3
new file mode 100644
index 0000000..d8b6a58
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/G5.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/G6.mp3 b/examples/soundfont/synth_drum-mp3/G6.mp3
new file mode 100644
index 0000000..3e2ffcf
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/G6.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/G7.mp3 b/examples/soundfont/synth_drum-mp3/G7.mp3
new file mode 100644
index 0000000..f91d9ca
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/G7.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Gb1.mp3 b/examples/soundfont/synth_drum-mp3/Gb1.mp3
new file mode 100644
index 0000000..a709d4c
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Gb1.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Gb2.mp3 b/examples/soundfont/synth_drum-mp3/Gb2.mp3
new file mode 100644
index 0000000..7c56a72
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Gb2.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Gb3.mp3 b/examples/soundfont/synth_drum-mp3/Gb3.mp3
new file mode 100644
index 0000000..bfff096
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Gb3.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Gb4.mp3 b/examples/soundfont/synth_drum-mp3/Gb4.mp3
new file mode 100644
index 0000000..d39cd63
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Gb4.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Gb5.mp3 b/examples/soundfont/synth_drum-mp3/Gb5.mp3
new file mode 100644
index 0000000..6248974
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Gb5.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Gb6.mp3 b/examples/soundfont/synth_drum-mp3/Gb6.mp3
new file mode 100644
index 0000000..4ace216
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Gb6.mp3 differ
diff --git a/examples/soundfont/synth_drum-mp3/Gb7.mp3 b/examples/soundfont/synth_drum-mp3/Gb7.mp3
new file mode 100644
index 0000000..148fb22
Binary files /dev/null and b/examples/soundfont/synth_drum-mp3/Gb7.mp3 differ
diff --git a/soundfont/synth_drum-ogg.js b/examples/soundfont/synth_drum-ogg.js
similarity index 100%
rename from soundfont/synth_drum-ogg.js
rename to examples/soundfont/synth_drum-ogg.js
diff --git a/generator/nodejs/packageWAVs.js b/generator/nodejs/packageWAVs.js
new file mode 100644
index 0000000..62fcae9
--- /dev/null
+++ b/generator/nodejs/packageWAVs.js
@@ -0,0 +1,106 @@
+/*
+	------------------------------------------------------
+	Combine multiple waves into one Soundfont Package
+	------------------------------------------------------
+*/
+
+var keyToNote = {}; // C8 === 108
+var noteToKey = {}; // 108 === C8
+(function () {
+	var A0 = 0x15; // first note
+	var C8 = 0x6C; // last note
+	var number2key = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "B"];
+	for (var n = A0; n <= C8; n++) {
+		var octave = (n - 12) / 12 >> 0;
+		var name = number2key[n % 12] + octave;
+		keyToNote[name] = n;
+		noteToKey[n] = name;
+	}
+})();
+///
+var zlib = require("zlib");
+var fs = require("fs");
+var beautify = require("js-beautify").js_beautify;
+var exec = require("child_process").exec;
+var walk = require("walk");
+var walker = walk.walk("./source", { followLinks: false });
+///
+var buildDir = "./build/";
+var instrumentName = "synth_drum";
+var instrumentDir = buildDir + instrumentName + "/";
+var index = 21;
+///
+var output = {};
+output.ogg = [];
+output.mp3 = [];
+///
+walker.on("file", function (root, stat, next) {
+	if (stat.name.indexOf(".wav") === -1) return next();
+	convertPackage(stat, "mp3", function() { // encode mp3
+		convertPackage(stat, "ogg", function() { // encode ogg
+			index ++;
+			return next();
+		});
+	});
+});
+
+walker.on("end", function () {
+	writePackage("mp3");
+	writePackage("ogg");
+});
+
+/* helpers
+--------------------------------------------------- */
+var encoder = {
+	"mp3": "lame -v -b 8 -B 64",
+	"ogg": "oggenc -m 32 -M 128"
+};
+
+var convertPackage = function (stat, type, callback) {
+	var src = "./source/" + stat.name;
+	exec(encoder[type] + " '" + src + "'", function (err) { // run encoder
+		var format = src.replace(".wav", "." + type);
+		fs.readFile(format, function (err, buffer) { // read encoded file
+			var key = noteToKey[index];
+			if (type === "mp3") {
+				var from = format;
+				var to = instrumentDir + key + ".mp3";
+				if (!fs.existsSync(instrumentDir)) {
+					fs.mkdirSync(instrumentDir);
+				}
+				exec("mv '" + from + "' '" + to + "'", function (err) {
+					console.log(err, from, to)
+				});
+			}
+			output[type].push({ // push to output
+				name: stat.name,
+				key: noteToKey[index],
+				data: "data:audio/" + type + ";base64," + buffer.toString("base64")
+			});
+			return callback();
+		});
+	});
+};
+
+var writePackage = function (type) {
+	var data = output[type];
+	var header = '\
+if (typeof(MIDI) === "undefined") var MIDI = {};\
+if (typeof(MIDI.Soundfont) === "undefined") MIDI.Soundfont = {};\
+MIDI.Soundfont["' + instrumentName + '"] = ';
+	///
+	var ret = {};
+	for (var n = 0; n < data.length; n ++) {
+		var obj = data[n];
+		ret[obj.key] = obj.data;
+	}
+	///
+	var js = beautify(header + JSON.stringify(ret));
+	var path = "./build/" + instrumentName + "." + type + ".js";
+	fs.writeFileSync(path, js);
+	///
+	var buf = new Buffer(js, "utf-8"); // Choose encoding for the string.
+	zlib.gzip(buf, function (self, result) { // The callback will give you the 
+		fs.writeFileSync(path + ".gz", result);
+	});
+};
\ No newline at end of file
diff --git a/generator/ruby/soundfont_builder.rb b/generator/ruby/soundfont_builder.rb
index 3ab063b..9d31bc0 100755
--- a/generator/ruby/soundfont_builder.rb
+++ b/generator/ruby/soundfont_builder.rb
@@ -10,7 +10,8 @@
 #   OggEnc (from vorbis-tools)
 #   Ruby Gem: midilib
 #
-#   $ brew install fluidsynth vorbis-tools lame (on OSX)
+#   $ brew install --with-libsndfile fluidsynth
+#   $ brew install vorbis-tools lame
 #   $ gem install midilib
 #
 # You'll need to download a GM soundbank to generate audio.
@@ -24,30 +25,34 @@
 require 'base64'
 require 'fileutils'
 require 'midilib'
+require 'zlib'
 include FileUtils
 
-BUILD_DIR = "../../soundfont"            # Output path
-SOUNDFONT = "./FluidR3_GM.sf2"        # Soundfont file path
+BUILD_DIR = "./soundfont" # Output path
+SOUNDFONT = "../sf2/redco/TR-808-Drums.SF2" # Soundfont file path
 
 # This script will generate MIDI.js-compatible instrument JS files for
 # all instruments in the below array. Add or remove as necessary.
 INSTRUMENTS = [
-  0,     # Acoustic Grand Piano
-  24,    # Acoustic Guitar (nylon)
-  25,    # Acoustic Guitar (steel)
-  26,    # Electric Guitar (jazz)
-  30,    # Distortion Guitar
-  33,    # Electric Bass (finger)
-  34,    # Electric Bass (pick)
-  56,    # Trumpet
-  61,    # Brass Section
-  64,    # Soprano Sax
-  65,    # Alto Sax
-  66,    # Tenor Sax
-  67,    # Baritone Sax
-  73,    # Flute
-  118    # Synth Drum
-]
+  0     # Acoustic Grand Piano
+];
+# INSTRUMENTS = [
+#   0,     # Acoustic Grand Piano
+#   24,    # Acoustic Guitar (nylon)
+#   25,    # Acoustic Guitar (steel)
+#   26,    # Electric Guitar (jazz)
+#   30,    # Distortion Guitar
+#   33,    # Electric Bass (finger)
+#   34,    # Electric Bass (pick)
+#   56,    # Trumpet
+#   61,    # Brass Section
+#   64,    # Soprano Sax
+#   65,    # Alto Sax
+#   66,    # Tenor Sax
+#   67,    # Baritone Sax
+#   73,    # Flute
+#   118    # Synth Drum
+# ];
 
 # The encoders and tools are expected in your PATH. You can supply alternate
 # paths by changing the constants below.
@@ -96,9 +101,16 @@
 
 MIDI_C0 = 12
 VELOCITY = 85
-DURATION = Integer(3200 * 0.75)
+DURATION = Integer(3000)
 TEMP_FILE = "#{BUILD_DIR}/temp.midi"
 
+def deflate(string, level)
+  z = Zlib::Deflate.new(level)
+  dst = z.deflate(string, Zlib::FINISH)
+  z.close
+  dst
+end
+
 def note_to_int(note, octave)
   value = NOTES[note]
   increment = MIDI_C0 + (octave * 12)
@@ -140,9 +152,9 @@ def run_command(cmd)
 end
 
 def midi_to_audio(source, target)
-  run_command "#{FLUIDSYNTH} -C 1 -R 1 -g 0.5 -F #{target} #{SOUNDFONT} #{source}"
-  run_command "#{OGGENC} -m 32 -M 64 #{target}"
-  run_command "#{LAME} -v -b 8 -B 32 #{target}"
+  run_command "#{FLUIDSYNTH} -C no -R no -g 0.5 -F #{target} #{SOUNDFONT} #{source}"
+  run_command "#{OGGENC} -m 32 -M 128 #{target}"
+  run_command "#{LAME} -v -b 8 -B 64 #{target}"
   rm target
 end
 
@@ -172,13 +184,13 @@ def base64js(note, file, type)
 def generate_audio(program)
   include MIDI
   instrument = GM_PATCH_NAMES[program]
-  program_key = instrument.downcase.gsub(/[^a-z0-9 ]/, "").gsub(/\s+/, "_")
+  instrument_key = instrument.downcase.gsub(/[^a-z0-9 ]/, "").gsub(/\s+/, "_")
 
-  puts "Generating audio for: " + instrument + "(#{program_key})"
+  puts "Generating audio for: " + instrument + "(#{instrument_key})"
 
-  mkdir_p "#{BUILD_DIR}/#{program_key}-mp3"
-  ogg_js_file = open_js_file(program_key, "ogg")
-  mp3_js_file = open_js_file(program_key, "mp3")
+  mkdir_p "#{BUILD_DIR}/#{instrument_key}-mp3"
+  ogg_js_file = open_js_file(instrument_key, "ogg")
+  mp3_js_file = open_js_file(instrument_key, "mp3")
 
   note_to_int("A", 0).upto(note_to_int("C", 8)) do |note_value|
     note = int_to_note(note_value)
@@ -193,13 +205,22 @@ def generate_audio(program)
     ogg_js_file.write(base64js(output_name, output_path_prefix + ".ogg", "ogg") + ",\n")
     mp3_js_file.write(base64js(output_name, output_path_prefix + ".mp3", "mp3") + ",\n")
 
-    mv output_path_prefix + ".mp3", "#{BUILD_DIR}/#{program_key}-mp3"
+    mv output_path_prefix + ".mp3", "#{BUILD_DIR}/#{instrument_key}-mp3"
     rm output_path_prefix + ".ogg"
     rm TEMP_FILE
   end
 
   close_js_file(ogg_js_file)
   close_js_file(mp3_js_file)
+  
+  ogg_js_file = File.read("#{BUILD_DIR}/#{instrument_key}-ogg.js")
+  ojsz = File.open("#{BUILD_DIR}/#{instrument_key}-ogg.js.gz", "w")
+  ojsz.write(deflate(ogg_js_file, 9));
+
+  mp3_js_file = File.read("#{BUILD_DIR}/#{instrument_key}-mp3.js")
+  mjsz = File.open("#{BUILD_DIR}/#{instrument_key}-mp3.js.gz", "w")
+  mjsz.write(deflate(mp3_js_file, 9));
+
 end
 
-INSTRUMENTS.each {|i| generate_audio(i)}
+INSTRUMENTS.each {|i| generate_audio(i)}
\ No newline at end of file
diff --git a/generator/shell/gen-base64.js b/generator/shell/gen-base64.js
deleted file mode 100644
index f40e241..0000000
--- a/generator/shell/gen-base64.js
+++ /dev/null
@@ -1,5 +0,0 @@
-var fs = require('fs');
-var file = process.argv[2];
-fs.readFile(file, 'binary', function(err, data) {
-   console.log(new Buffer(data, 'binary').toString('base64'));
-});
\ No newline at end of file
diff --git a/generator/shell/gen-midi.js b/generator/shell/gen-midi.js
deleted file mode 100644
index f7a7414..0000000
--- a/generator/shell/gen-midi.js
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
-	Soundfont Builder : 0.1
-*/
-
-window = {}; // create fake window
-atob = require('atob');
-btoa = require('btoa');
-http = require('http');
-fs = require('fs');
-///
-require('./jsmidi.js');
-
-//////////////
-
-var min = window.noteTable["C2"];
-var max = window.noteTable["C7"];
-var absmin = window.noteTable["A0"];
-var absmax = window.noteTable["C8"] + 1;
-if (false) {
-	var noteEvents = [];
-	for (var key in window.noteTable) {
-		var id = window.noteTable[key];
-		if (id < absmin || id > absmax) continue;
-	//	if (id < min || id > max) continue;
-		var note = {
-			duration: 0,
-			channel: 0,
-			pitch: id,
-			volume: 100
-		};
-		noteEvents.push(window.MidiEvent.noteOn(note));
-		note.duration = 1024 * 0.75 >> 0;
-		noteEvents.push(window.MidiEvent.noteOff(note));
-	}
-	var track = new window.MidiTrack({ 
-		events: noteEvents
-	});
-	var song  = window.MidiWriter({ 
-		tracks: [track]
-	});
-	var decoded = new Buffer(atob(song.b64), 'binary')
-	fs.writeFile('build/SoundFont.midi', decoded, 'binary', function(err) {});
-} else {
-	for (var key in window.noteTable) {
-		var id = window.noteTable[key];
-		if (id < absmin || id > absmax) continue;
-	//	if (id < min || id > max) continue;
-		var note = {
-			duration: 0,
-			channel: 0,
-			pitch: id,
-			volume: 85
-		};
-		var noteEvents = [];
-		noteEvents.push(window.MidiEvent.noteOn(note));
-		note.duration = 1024 * 0.75 >> 0;
-		noteEvents.push(window.MidiEvent.noteOff(note));
-		var track = new window.MidiTrack({ 
-			events: noteEvents
-		});
-		var song  = window.MidiWriter({ 
-			tracks: [track]
-		});
-		var decoded = new Buffer(atob(song.b64), 'binary')
-		fs.writeFile('build/' + key + '.midi', decoded, 'binary', function(err) {});
-	}
-}
\ No newline at end of file
diff --git a/generator/shell/generator.js b/generator/shell/generator.js
deleted file mode 100644
index e1f9788..0000000
--- a/generator/shell/generator.js
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
-	Audio Generator : 0.1.4 : 2012/01/20
-	------------------------------------------------
-		  NodeJS : http://nodejs.org/
-			Atob : npm install atob
-			Btoa : npm install btoa
-	   Commander : npm install commander
-		 MP3Wrap : http://mp3wrap.sourceforge.net/ -- brew install mp3wrap
-		 MP3Splt : http://mp3splt.sourceforge.net/ -- brew install mp3splt
-		 MP3Info : brew install mp3info
-			 OGG : http://www.rarewares.org/ogg-oggenc.php -- brew install vorbis-tools
-			Lame : http://lame.sourceforge.net/ -- brew install lame
-	------------------------------------------------
-*/
-
-var program = require("commander")
-	.version("0.1.0")
-	.option("-f, --from [value]", "Input format")
-	.option("-t, --to [value]", "Output format")
-	.option("-c, --convert", "Convert formats")
-	.parse(process.argv);
-
-if (program.rawArgs.join("").indexOf("-") === -1) {
-	console.log(program.helpInformation())
-	return;
-}
-
-var fs = require("fs");
-var exec = require("child_process").exec;
-var oggdec = "oggdec ";
-var oggenc = "oggenc -m 32 -M 64 ";
-var lame = "lame -v -b 8 -B 32 ";
-var QUEUE = require(__dirname + "/../../js/Window/Queue.js");
-
-if (program.convert) {
-	var dir = __dirname + "/Vessel/";
-	var readDir = function(dir, callback) {
-		fs.readdir(dir, function(err, list) {
-			queue = new QUEUE({
-				items: list,
-				oncomplete: callback,
-				next: function(item) { // from ogg>wav>mp3
-					if (item[0] === ".") return queue.next();
-					if (item.indexOf("wav") === -1) return queue.next();
-//					exec(oggdec + dir + item, function() {
-						exec(lame + "'" + dir + item.replace(".ogg", ".wav") + "'");
-//					});
-					queue.next();
-				}
-			});
-		});
-	};
-	///
-	readDir(dir);
-}
\ No newline at end of file
diff --git a/generator/shell/jsmidi.js b/generator/shell/jsmidi.js
deleted file mode 100644
index 64f589f..0000000
--- a/generator/shell/jsmidi.js
+++ /dev/null
@@ -1,514 +0,0 @@
-/* 
-	JSMIDI
-	------------------------------------
-	https://github.com/sergi/jsmidi
-	------------------------------------
-	This material is licensed by Sergi Mansilla under the Creative Commons Attribution-ShareAlike 3.0 license. 
-	You are free to copy, distribute, transmit, and remix this work, provided you attribute the work to Sergi Mansilla 
-	as the original author and reference this repository. If you alter, transform, or build upon this work, 
-	you may distribute the resulting work only under the same, similar or compatible license. Any of the above 
-	conditions can be waived if you get permission from the copyright holder. For any reuse or distribution, 
-	you must make clear to others the license terms of this work. The best way to do this is with a link to the 
-	Creative Commons Attribution-Share Alike 3.0.
-*/
-
-(function (window) {
-
-var AP = Array.prototype;
-
-// Create a mock console object to void undefined errors if the console object
-// is not defined.
-if (!window.console || !console.firebug) {
-    var names = ["log", "debug", "info", "warn", "error"];
-
-    window.console = {};
-    for (var i = 0; i < names.length; ++i) {
-        window.console[names[i]] = function() {};
-    }
-}
-
-var DEFAULT_VOLUME   = 90;
-var DEFAULT_DURATION = 128;
-var DEFAULT_CHANNEL  = 0;
-
-// These are the different values that compose a MID header. They are already
-// expressed in their string form, so no useless conversion has to take place
-// since they are constants.
-
-var HDR_CHUNKID     = "MThd";
-var HDR_CHUNK_SIZE  = "\x00\x00\x00\x06"; // Header size for SMF
-var HDR_TYPE0       = "\x00\x00"; // Midi Type 0 id
-var HDR_TYPE1       = "\x00\x01"; // Midi Type 1 id
-var HDR_SPEED       = "\x00\x80"; // Defaults to 128 ticks per beat
-
-// Midi event codes
-var EVT_NOTE_OFF           = 0x8;
-var EVT_NOTE_ON            = 0x9;
-var EVT_AFTER_TOUCH        = 0xA;
-var EVT_CONTROLLER         = 0xB;
-var EVT_PROGRAM_CHANGE     = 0xC;
-var EVT_CHANNEL_AFTERTOUCH = 0xD;
-var EVT_PITCH_BEND         = 0xE;
-
-var META_SEQUENCE   = 0x00;
-var META_TEXT       = 0x01;
-var META_COPYRIGHT  = 0x02;
-var META_TRACK_NAME = 0x03;
-var META_INSTRUMENT = 0x04;
-var META_LYRIC      = 0x05;
-var META_MARKER     = 0x06;
-var META_CUE_POINT  = 0x07;
-var META_CHANNEL_PREFIX = 0x20;
-var META_END_OF_TRACK   = 0x2f;
-var META_TEMPO      = 0x51;
-var META_SMPTE      = 0x54;
-var META_TIME_SIG   = 0x58;
-var META_KEY_SIG    = 0x59;
-var META_SEQ_EVENT  = 0x7f;
-
-// This is the conversion table from notes to its MIDI number. Provided for
-// convenience, it is not used in this code.
-var noteTable = { "G9": 0x7F, "Gb9": 0x7E, "F9": 0x7D, "E9": 0x7C, "Eb9": 0x7B,
-"D9": 0x7A, "Db9": 0x79, "C9": 0x78, "B8": 0x77, "Bb8": 0x76, "A8": 0x75, "Ab8": 0x74,
-"G8": 0x73, "Gb8": 0x72, "F8": 0x71, "E8": 0x70, "Eb8": 0x6F, "D8": 0x6E, "Db8": 0x6D,
-"C8": 0x6C, "B7": 0x6B, "Bb7": 0x6A, "A7": 0x69, "Ab7": 0x68, "G7": 0x67, "Gb7": 0x66,
-"F7": 0x65, "E7": 0x64, "Eb7": 0x63, "D7": 0x62, "Db7": 0x61, "C7": 0x60, "B6": 0x5F,
-"Bb6": 0x5E, "A6": 0x5D, "Ab6": 0x5C, "G6": 0x5B, "Gb6": 0x5A, "F6": 0x59, "E6": 0x58,
-"Eb6": 0x57, "D6": 0x56, "Db6": 0x55, "C6": 0x54, "B5": 0x53, "Bb5": 0x52, "A5": 0x51,
-"Ab5": 0x50, "G5": 0x4F, "Gb5": 0x4E, "F5": 0x4D, "E5": 0x4C, "Eb5": 0x4B, "D5": 0x4A,
-"Db5": 0x49, "C5": 0x48, "B4": 0x47, "Bb4": 0x46, "A4": 0x45, "Ab4": 0x44, "G4": 0x43,
-"Gb4": 0x42, "F4": 0x41, "E4": 0x40, "Eb4": 0x3F, "D4": 0x3E, "Db4": 0x3D, "C4": 0x3C,
-"B3": 0x3B, "Bb3": 0x3A, "A3": 0x39, "Ab3": 0x38, "G3": 0x37, "Gb3": 0x36, "F3": 0x35,
-"E3": 0x34, "Eb3": 0x33, "D3": 0x32, "Db3": 0x31, "C3": 0x30, "B2": 0x2F, "Bb2": 0x2E,
-"A2": 0x2D, "Ab2": 0x2C, "G2": 0x2B, "Gb2": 0x2A, "F2": 0x29, "E2": 0x28, "Eb2": 0x27,
-"D2": 0x26, "Db2": 0x25, "C2": 0x24, "B1": 0x23, "Bb1": 0x22, "A1": 0x21, "Ab1": 0x20,
-"G1": 0x1F, "Gb1": 0x1E, "F1": 0x1D, "E1": 0x1C, "Eb1": 0x1B, "D1": 0x1A, "Db1": 0x19,
-"C1": 0x18, "B0": 0x17, "Bb0": 0x16, "A0": 0x15, "Ab0": 0x14, "G0": 0x13, "Gb0": 0x12,
-"F0": 0x11, "E0": 0x10, "Eb0": 0x0F, "D0": 0x0E, "Db0": 0x0D, "C0": 0x0C };
-
-// Helper functions
-
-/*
- * Converts a string into an array of ASCII char codes for every character of
- * the string.
- *
- * @param str {String} String to be converted
- * @returns array with the charcode values of the string
- */
-function StringToNumArray(str) {
-    return AP.map.call(str, function(char) {
-        return char.charCodeAt(0);
-    });
-}
-
-/*
- * Converts an array of bytes to a string of hexadecimal characters. Prepares
- * it to be converted into a base64 string.
- *
- * @param byteArray {Array} array of bytes that will be converted to a string
- * @returns hexadecimal string
- */
-function codes2Str(byteArray) {
-    return String.fromCharCode.apply(null, byteArray);
-}
-
-/*
- * Converts a String of hexadecimal values to an array of bytes. It can also
- * add remaining "0" nibbles in order to have enough bytes in the array as the
- * |finalBytes| parameter.
- *
- * @param str {String} string of hexadecimal values e.g. "097B8A"
- * @param finalBytes {Integer} Optional. The desired number of bytes that the returned array should contain
- * @returns array of nibbles.
- */
-
-function str2Bytes(str, finalBytes) {
-    if (finalBytes) {
-        while ((str.length / 2) < finalBytes) { str = "0" + str; }
-    }
-
-    var bytes = [];
-    for (var i=str.length-1; i>=0; i = i-2) {
-        var chars = i === 0 ? str[i] : str[i-1] + str[i];
-        bytes.unshift(parseInt(chars, 16));
-    }
-
-    return bytes;
-}
-
-function isArray(obj) {
-    return !!(obj && obj.concat && obj.unshift && !obj.callee);
-}
-
-
-/**
- * Translates number of ticks to MIDI timestamp format, returning an array of
- * bytes with the time values. Midi has a very particular time to express time,
- * take a good look at the spec before ever touching this function.
- *
- * @param ticks {Integer} Number of ticks to be translated
- * @returns Array of bytes that form the MIDI time value
- */
-var translateTickTime = function(ticks) {
-    var buffer = ticks & 0x7F;
-
-    while (ticks = ticks >> 7) {
-        buffer <<= 8;
-        buffer |= ((ticks & 0x7F) | 0x80);
-    }
-
-    var bList = [];
-    while (true) {
-        bList.push(buffer & 0xff);
-
-        if (buffer & 0x80) { buffer >>= 8; }
-        else { break; }
-    }
-    return bList;
-};
-
-/*
- * This is the function that assembles the MIDI file. It writes the
- * necessary constants for the MIDI header and goes through all the tracks, appending
- * their data to the final MIDI stream.
- * It returns an object with the final values in hex and in base64, and with
- * some useful methods to play an manipulate the resulting MIDI stream.
- *
- * @param config {Object} Configuration object. It contains the tracks, tempo
- * and other values necessary to generate the MIDI stream.
- *
- * @returns An object with the hex and base64 resulting streams, as well as
- * with some useful methods.
- */
-var MidiWriter = function(config) {
-    if (config) {
-        var tracks  = config.tracks || [];
-        // Number of tracks in hexadecimal
-        var tracksLength = tracks.length.toString(16);
-
-        // This variable will hold the whole midi stream and we will add every
-        // chunk of MIDI data to it in the next lines.
-        var hexMidi = HDR_CHUNKID + HDR_CHUNK_SIZE + HDR_TYPE0;
-
-        // Appends the number of tracks expressed in 2 bytes, as the MIDI
-        // standard requires.
-        hexMidi += codes2Str(str2Bytes(tracksLength, 2));
-        hexMidi += HDR_SPEED;
-        // Goes through the tracks appending the hex strings that compose them.
-        tracks.forEach(function(trk) { hexMidi += codes2Str(trk.toBytes()); });
-
-        return {
-            b64: btoa(hexMidi),
-            play: function() {
-                if (document) {
-                    var embed = document.createElement("embed");
-                    embed.setAttribute("src", "data:audio/midi;base64," + this.b64);
-                    embed.setAttribute("type", "audio/midi");
-                    document.body.appendChild(embed);
-                }
-            },
-            save: function() {
-                window.open("data:audio/midi;base64," + this.b64,
-                            "JSMidi generated output",
-                            "resizable=yes,scrollbars=no,status=no");
-            }
-        };
-
-    } else {
-        throw new Error("No parameters have been passed to MidiWriter.");
-    }
-};
-
-/*
- * Generic MidiEvent object. This object is used to create standard MIDI events
- * (note Meta events nor SysEx events). It is passed a |params| object that may
- * contain the keys time, type, channel, param1 and param2. Note that only the
- * type, channel and param1 are strictly required. If the time is not provided,
- * a time of 0 will be assumed.
- *
- * @param {object} params Object containing the properties of the event.
- */
-var MidiEvent = function(params) {
-    if (params &&
-        (params.type    !== null || params.type    !== undefined) &&
-        (params.channel !== null || params.channel !== undefined) &&
-        (params.param1  !== null || params.param1  !== undefined)) {
-        this.setTime(params.time);
-        this.setType(params.type);
-        this.setChannel(params.channel);
-        this.setParam1(params.param1);
-        this.setParam2(params.param2);
-    } else {
-        throw new Error("Not enough parameters to create an event.");
-    }
-};
-
-
-/**
- * Returns the list of events that form a note in MIDI. If the |sustained|
- * parameter is not specified, it creates the noteOff event, which stops the
- * note after it has been played, instead of keeping it playing.
- *
- * This method accepts two ways of expressing notes. The first one is a string,
- * which will be looked up in the global |noteTable| but it will take the
- * default values for pitch, channel, durtion and volume.
- *
- * If a note object is passed to the method instead, it should contain the properties
- * channel, pitch, duration and volume, of which pitch is mandatory. In case the
- * channel, the duration or the volume are not passed, default values will be
- * used.
- *
- * @param note {object || String} Object with note properties or string
- * @param sustained {Boolean} Whether the note has to end or keep playing
- * @returns Array of events, with a maximum of two events (noteOn and noteOff)
- */
-
-MidiEvent.createNote = function(note, sustained) {
-    if (!note) { throw new Error("Note not specified"); }
-
-    if (typeof note === "string") {
-        note = noteTable[note];
-    // The pitch is mandatory if the note object is used.
-    } else if (!note.pitch) {
-        throw new Error("The pitch is required in order to create a note.");
-    }
-    var events = [];
-    events.push(MidiEvent.noteOn(note));
-
-    // If there is a |sustained| parameter, the note will keep playing until
-    // a noteOff event is issued for it.
-    if (!sustained) {
-        // The noteOff event will be the one that is passed the actual duration
-        // value for the note, since it is the one that will stop playing the
-        // note at a particular time. If not specified it takes the default
-        // value for it.
-        // TODO: Is is good to have a default value for it?
-        events.push(MidiEvent.noteOff(note, note.duration || DEFAULT_DURATION));
-    }
-
-    return events;
-};
-
-/**
- * Returns an event of the type NOTE_ON taking the values passed and falling
- * back to defaults if they are not specified.
- *
- * @param note {Note || String} Note object or string
- * @param time {Number} Duration of the note in ticks
- * @returns MIDI event with type NOTE_ON for the note specified
- */
-MidiEvent.noteOn = function(note, duration) {
-    return new MidiEvent({
-        time:    note.duration || duration || 0,
-        type:    EVT_NOTE_ON,
-        channel: note.channel || DEFAULT_CHANNEL,
-        param1:  note.pitch   || note,
-        param2:  note.volume  || DEFAULT_VOLUME
-    });
-};
-
-/**
- * Returns an event of the type NOTE_OFF taking the values passed and falling
- * back to defaults if they are not specified.
- *
- * @param note {Note || String} Note object or string
- * @param time {Number} Duration of the note in ticks
- * @returns MIDI event with type NOTE_OFF for the note specified
- */
-
-MidiEvent.noteOff = function(note, duration) {
-    return new MidiEvent({
-        time:    note.duration || duration || 0,
-        type:    EVT_NOTE_OFF,
-        channel: note.channel || DEFAULT_CHANNEL,
-        param1:  note.pitch   || note,
-        param2:  note.volume  || DEFAULT_VOLUME
-    });
-};
-
-
-MidiEvent.prototype = {
-    type: 0,
-    channel: 0,
-    time: 0,
-    setTime: function(ticks) {
-        // The 0x00 byte is always the last one. This is how Midi
-        // interpreters know that the time measure specification ends and the
-        // rest of the event signature starts.
-
-        this.time = translateTickTime(ticks || 0);
-    },
-    setType: function(type) {
-        if (type < EVT_NOTE_OFF || type > EVT_PITCH_BEND) {
-            throw new Error("Trying to set an unknown event: " + type);
-        }
-
-        this.type = type;
-    },
-    setChannel: function(channel) {
-        if (channel < 0 || channel > 15) {
-            throw new Error("Channel is out of bounds.");
-        }
-
-        this.channel = channel;
-    },
-    setParam1: function(p) {
-        this.param1 = p;
-    },
-    setParam2: function(p) {
-        this.param2 = p;
-    },
-    toBytes: function() {
-        var byteArray = [];
-
-        var typeChannelByte =
-            parseInt(this.type.toString(16) + this.channel.toString(16), 16);
-
-        byteArray.push.apply(byteArray, this.time);
-        byteArray.push(typeChannelByte);
-        byteArray.push(this.param1);
-
-        // Some events don't have a second parameter
-        if (this.param2 !== undefined && this.param2 !== null) {
-            byteArray.push(this.param2);
-        }
-        return byteArray;
-    }
-};
-
-var MetaEvent = function(params) {
-    if (params) {
-        this.setType(params.type);
-        this.setData(params.data);
-    }
-};
-
-MetaEvent.prototype = {
-    setType: function(t) {
-        this.type = t;
-    },
-    setData: function(d) {
-        this.data = d;
-    },
-    toBytes: function() {
-        if (!this.type || !this.data) {
-            throw new Error("Type or data for meta-event not specified.");
-        }
-
-        var byteArray = [0xff, this.type];
-
-        // If data is an array, we assume that it contains several bytes. We
-        // apend them to byteArray.
-        if (isArray(this.data)) {
-            AP.push.apply(byteArray, this.data);
-        }
-
-        return byteArray;
-    }
-};
-
-var MidiTrack = function(cfg) {
-    this.events = [];
-    for (var p in cfg) {
-        if (cfg.hasOwnProperty(p)) {
-            // Get the setter for the property. The property is capitalized.
-            // Probably a try/catch should go here.
-            this["set" + p.charAt(0).toUpperCase() + p.substring(1)](cfg[p]);
-        }
-    }
-};
-
-//"MTrk" Marks the start of the track data
-MidiTrack.TRACK_START = [0x4d, 0x54, 0x72, 0x6b];
-MidiTrack.TRACK_END   = [0x0, 0xFF, 0x2F, 0x0];
-
-MidiTrack.prototype = {
-    /*
-     * Adds an event to the track.
-     *
-     * @param event {MidiEvent} Event to add to the track
-     * @returns the track where the event has been added
-     */
-    addEvent: function(event) {
-        this.events.push(event);
-        return this;
-    },
-    setEvents: function(events) {
-        AP.push.apply(this.events, events);
-        return this;
-    },
-    /*
-     * Adds a text meta-event to the track.
-     *
-     * @param type {Number} type of the text meta-event
-     * @param text {String} Optional. Text of the meta-event.
-     * @returns the track where the event ahs been added
-     */
-    setText: function(type, text) {
-        // If the param text is not specified, it is assumed that a generic
-        // text is wanted and that the type parameter is the actual text to be
-        // used.
-        if (!text) {
-            type = META_TEXT;
-            text = type;
-        }
-        return this.addEvent(new MetaEvent({ type: type, data: text }));
-    },
-    // The following are setters for different kinds of text in MIDI, they all
-    // use the |setText| method as a proxy.
-    setCopyright:  function(text) { return this.setText(META_COPYRIGHT, text);  },
-    setTrackName:  function(text) { return this.setText(META_TRACK_NAME, text); },
-    setInstrument: function(text) { return this.setText(META_INSTRUMENT, text); },
-    setLyric:      function(text) { return this.setText(META_LYRIC, text);      },
-    setMarker:     function(text) { return this.setText(META_MARKER, text);     },
-    setCuePoint:   function(text) { return this.setText(META_CUE_POINT, text);  },
-
-    setTempo: function(tempo) {
-        this.addEvent(new MetaEvent({ type: META_TEMPO, data: tempo }));
-    },
-    setTimeSig: function() {
-        // TBD
-    },
-    setKeySig: function() {
-        // TBD
-    },
-
-    toBytes: function() {
-        var trackLength = 0;
-        var eventBytes = [];
-        var startBytes = MidiTrack.TRACK_START;
-        var endBytes   = MidiTrack.TRACK_END;
-
-        /*
-         * Adds the bytes of an event to the eventBytes array and add the
-         * amount of bytes to |trackLength|.
-         *
-         * @param event {MidiEvent} MIDI event we want the bytes from.
-         */
-        var addEventBytes = function(event) {
-            var bytes = event.toBytes();
-            trackLength += bytes.length;
-            AP.push.apply(eventBytes, bytes);
-        };
-
-        this.events.forEach(addEventBytes);
-
-        // Add the end-of-track bytes to the sum of bytes for the track, since
-        // they are counted (unlike the start-of-track ones).
-        trackLength += endBytes.length;
-
-        // Makes sure that track length will fill up 4 bytes with 0s in case
-        // the length is less than that (the usual case).
-        var lengthBytes = str2Bytes(trackLength.toString(16), 4);
-
-        return startBytes.concat(lengthBytes, eventBytes, endBytes);
-    }
-};
-
-window.MidiWriter = MidiWriter;
-window.MidiEvent = MidiEvent;
-window.MetaEvent = MetaEvent;
-window.MidiTrack = MidiTrack;
-window.noteTable = noteTable;
-
-})(window);
\ No newline at end of file
diff --git a/generator/shell/package.json b/generator/shell/package.json
deleted file mode 100644
index d445803..0000000
--- a/generator/shell/package.json
+++ /dev/null
@@ -1,11 +0,0 @@
-{
-  "name": "shell",
-  "version": "0.0.0",
-  "description": "",
-  "dependencies": {
-    "commander": "~1.1.1",
-    "btoa": "~1.0.0",
-    "atob": "~1.0.0"
-  },
-  "devDependencies": {}
-}
diff --git a/inc/SoundManager2/license.txt b/inc/SoundManager2/license.txt
deleted file mode 100755
index 1a17182..0000000
--- a/inc/SoundManager2/license.txt
+++ /dev/null
@@ -1,29 +0,0 @@
-Software License Agreement (BSD License)
-
-Copyright (c) 2007, Scott Schiller (schillmania.com)
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without modification,
-are permitted provided that the following conditions are met:
-
-* Redistributions of source code must retain the above copyright notice, this 
-  list of conditions and the following disclaimer.
-
-* Redistributions in binary form must reproduce the above copyright notice, this
-  list of conditions and the following disclaimer in the documentation and/or
-  other materials provided with the distribution.
-
-* Neither the name of schillmania.com nor the names of its contributors may be
-  used to endorse or promote products derived from this software without
-  specific prior written permission from schillmania.com.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
-ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
-(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
-ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
\ No newline at end of file
diff --git a/inc/SoundManager2/script/soundmanager2-jsmin.js b/inc/SoundManager2/script/soundmanager2-jsmin.js
deleted file mode 100755
index e8b14ae..0000000
--- a/inc/SoundManager2/script/soundmanager2-jsmin.js
+++ /dev/null
@@ -1,104 +0,0 @@
-/** @license
-
-
- SoundManager 2: JavaScript Sound for the Web
- ----------------------------------------------
- http://schillmania.com/projects/soundmanager2/
-
- Copyright (c) 2007, Scott Schiller. All rights reserved.
- Code provided under the BSD License:
- http://schillmania.com/projects/soundmanager2/license.txt
-
- V2.97a.20111220
-*/
-(function(G){function W(W,la){function l(b){return function(a){var d=this._t;return!d||!d._a?(d&&d.sID?c._wD(k+"ignoring "+a.type+": "+d.sID):c._wD(k+"ignoring "+a.type),null):b.call(this,a)}}this.flashVersion=8;this.debugMode=!0;this.debugFlash=!1;this.consoleOnly=this.useConsole=!0;this.waitForWindowLoad=!1;this.bgColor="#ffffff";this.useHighPerformance=!1;this.html5PollingInterval=this.flashPollingInterval=null;this.flashLoadTimeout=1E3;this.wmode=null;this.allowScriptAccess="always";this.useFlashBlock=
-!1;this.useHTML5Audio=!0;this.html5Test=/^(probably|maybe)$/i;this.preferFlash=!0;this.noSWFCache=!1;this.audioFormats={mp3:{type:['audio/mpeg; codecs="mp3"',"audio/mpeg","audio/mp3","audio/MPA","audio/mpa-robust"],required:!0},mp4:{related:["aac","m4a"],type:['audio/mp4; codecs="mp4a.40.2"',"audio/aac","audio/x-m4a","audio/MP4A-LATM","audio/mpeg4-generic"],required:!1},ogg:{type:["audio/ogg; codecs=vorbis"],required:!1},wav:{type:['audio/wav; codecs="1"',"audio/wav","audio/wave","audio/x-wav"],required:!1}};
-this.defaultOptions={autoLoad:!1,autoPlay:!1,from:null,loops:1,onid3:null,onload:null,whileloading:null,onplay:null,onpause:null,onresume:null,whileplaying:null,onposition:null,onstop:null,onfailure:null,onfinish:null,multiShot:!0,multiShotEvents:!1,position:null,pan:0,stream:!0,to:null,type:null,usePolicyFile:!1,volume:100};this.flash9Options={isMovieStar:null,usePeakData:!1,useWaveformData:!1,useEQData:!1,onbufferchange:null,ondataerror:null};this.movieStarOptions={bufferTime:3,serverURL:null,onconnect:null,
-duration:null};this.movieID="sm2-container";this.id=la||"sm2movie";this.debugID="soundmanager-debug";this.debugURLParam=/([#?&])debug=1/i;this.versionNumber="V2.97a.20111220";this.movieURL=this.version=null;this.url=W||null;this.altURL=null;this.enabled=this.swfLoaded=!1;this.oMC=null;this.sounds={};this.soundIDs=[];this.didFlashBlock=this.muted=!1;this.filePattern=null;this.filePatterns={flash8:/\.mp3(\?.*)?$/i,flash9:/\.mp3(\?.*)?$/i};this.features={buffering:!1,peakData:!1,waveformData:!1,eqData:!1,
-movieStar:!1};this.sandbox={type:null,types:{remote:"remote (domain-based) rules",localWithFile:"local with file access (no internet access)",localWithNetwork:"local with network (internet access only, no local access)",localTrusted:"local, trusted (local+internet access)"},description:null,noRemote:null,noLocal:null};var ma;try{ma="undefined"!==typeof Audio&&"undefined"!==typeof(new Audio).canPlayType}catch(fb){ma=!1}this.hasHTML5=ma;this.html5={usingFlash:null};this.flash={};this.ignoreFlash=this.html5Only=
-!1;var Ea,c=this,i=null,k="HTML5::",u,p=navigator.userAgent,j=G,O=j.location.href.toString(),h=document,na,X,m,B=[],oa=!0,w,P=!1,Q=!1,n=!1,y=!1,Y=!1,o,Za=0,R,v,pa,H,I,Z,Fa,qa,E,$,aa,J,ra,sa,ba,ca,K,Ga,ta,$a=["log","info","warn","error"],Ha,da,Ia,S=null,ua=null,q,va,L,Ja,ea,fa,wa,s,ga=!1,xa=!1,Ka,La,Ma,ha=0,T=null,ia,z=null,Na,ja,U,C,ya,za,Oa,r,Pa=Array.prototype.slice,F=!1,t,ka,Qa,A,Ra,Aa=p.match(/(ipad|iphone|ipod)/i),ab=p.match(/firefox/i),bb=p.match(/droid/i),D=p.match(/msie/i),cb=p.match(/webkit/i),
-V=p.match(/safari/i)&&!p.match(/chrome/i),db=p.match(/opera/i),Ba=p.match(/(mobile|pre\/|xoom)/i)||Aa,Ca=!O.match(/usehtml5audio/i)&&!O.match(/sm2\-ignorebadua/i)&&V&&!p.match(/silk/i)&&p.match(/OS X 10_6_([3-7])/i),Sa="undefined"!==typeof console&&"undefined"!==typeof console.log,Da="undefined"!==typeof h.hasFocus?h.hasFocus():null,M=V&&"undefined"===typeof h.hasFocus,Ta=!M,Ua=/(mp3|mp4|mpa)/i,N=h.location?h.location.protocol.match(/http/i):null,Va=!N?"http://":"",Wa=/^\s*audio\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4||m4v|m4a|mp4v|3gp|3g2)\s*(?:$|;)/i,
-Xa="mpeg4,aac,flv,mov,mp4,m4v,f4v,m4a,mp4v,3gp,3g2".split(","),eb=RegExp("\\.("+Xa.join("|")+")(\\?.*)?$","i");this.mimePattern=/^\s*audio\/(?:x-)?(?:mp(?:eg|3))\s*(?:$|;)/i;this.useAltURL=!N;this._global_a=null;if(Ba&&(c.useHTML5Audio=!0,c.preferFlash=!1,Aa))F=c.ignoreFlash=!0;this.supported=this.ok=function(){return z?n&&!y:c.useHTML5Audio&&c.hasHTML5};this.getMovie=function(c){return u(c)||h[c]||j[c]};this.createSound=function(b){function a(){f=ea(f);c.sounds[e.id]=new Ea(e);c.soundIDs.push(e.id);
-return c.sounds[e.id]}var d,f=null,e=d=null;d="soundManager.createSound(): "+q(!n?"notReady":"notOK");if(!n||!c.ok())return wa(d),!1;2===arguments.length&&(b={id:arguments[0],url:arguments[1]});f=v(b);f.url=ia(f.url);e=f;e.id.toString().charAt(0).match(/^[0-9]$/)&&c._wD("soundManager.createSound(): "+q("badID",e.id),2);c._wD("soundManager.createSound(): "+e.id+" ("+e.url+")",1);if(s(e.id,!0))return c._wD("soundManager.createSound(): "+e.id+" exists",1),c.sounds[e.id];if(ja(e))d=a(),c._wD("Loading sound "+
-e.id+" via HTML5"),d._setup_html5(e);else{if(8<m){if(null===e.isMovieStar)e.isMovieStar=e.serverURL||(e.type?e.type.match(Wa):!1)||e.url.match(eb);e.isMovieStar&&c._wD("soundManager.createSound(): using MovieStar handling");if(e.isMovieStar){if(e.usePeakData)o("noPeak"),e.usePeakData=!1;1<e.loops&&o("noNSLoop")}}e=fa(e,"soundManager.createSound(): ");d=a();if(8===m)i._createSound(e.id,e.loops||1,e.usePolicyFile);else if(i._createSound(e.id,e.url,e.usePeakData,e.useWaveformData,e.useEQData,e.isMovieStar,
-e.isMovieStar?e.bufferTime:!1,e.loops||1,e.serverURL,e.duration||null,e.autoPlay,!0,e.autoLoad,e.usePolicyFile),!e.serverURL)d.connected=!0,e.onconnect&&e.onconnect.apply(d);!e.serverURL&&(e.autoLoad||e.autoPlay)&&d.load(e)}!e.serverURL&&e.autoPlay&&d.play();return d};this.destroySound=function(b,a){if(!s(b))return!1;var d=c.sounds[b],f;d._iO={};d.stop();d.unload();for(f=0;f<c.soundIDs.length;f++)if(c.soundIDs[f]===b){c.soundIDs.splice(f,1);break}a||d.destruct(!0);delete c.sounds[b];return!0};this.load=
-function(b,a){return!s(b)?!1:c.sounds[b].load(a)};this.unload=function(b){return!s(b)?!1:c.sounds[b].unload()};this.onposition=this.onPosition=function(b,a,d,f){return!s(b)?!1:c.sounds[b].onposition(a,d,f)};this.clearOnPosition=function(b,a,d){return!s(b)?!1:c.sounds[b].clearOnPosition(a,d)};this.start=this.play=function(b,a){if(!n||!c.ok())return wa("soundManager.play(): "+q(!n?"notReady":"notOK")),!1;if(!s(b)){a instanceof Object||(a={url:a});return a&&a.url?(c._wD('soundManager.play(): attempting to create "'+
-b+'"',1),a.id=b,c.createSound(a).play()):!1}return c.sounds[b].play(a)};this.setPosition=function(b,a){return!s(b)?!1:c.sounds[b].setPosition(a)};this.stop=function(b){if(!s(b))return!1;c._wD("soundManager.stop("+b+")",1);return c.sounds[b].stop()};this.stopAll=function(){var b;c._wD("soundManager.stopAll()",1);for(b in c.sounds)c.sounds.hasOwnProperty(b)&&c.sounds[b].stop()};this.pause=function(b){return!s(b)?!1:c.sounds[b].pause()};this.pauseAll=function(){var b;for(b=c.soundIDs.length;b--;)c.sounds[c.soundIDs[b]].pause()};
-this.resume=function(b){return!s(b)?!1:c.sounds[b].resume()};this.resumeAll=function(){var b;for(b=c.soundIDs.length;b--;)c.sounds[c.soundIDs[b]].resume()};this.togglePause=function(b){return!s(b)?!1:c.sounds[b].togglePause()};this.setPan=function(b,a){return!s(b)?!1:c.sounds[b].setPan(a)};this.setVolume=function(b,a){return!s(b)?!1:c.sounds[b].setVolume(a)};this.mute=function(b){var a=0;"string"!==typeof b&&(b=null);if(b){if(!s(b))return!1;c._wD('soundManager.mute(): Muting "'+b+'"');return c.sounds[b].mute()}c._wD("soundManager.mute(): Muting all sounds");
-for(a=c.soundIDs.length;a--;)c.sounds[c.soundIDs[a]].mute();return c.muted=!0};this.muteAll=function(){c.mute()};this.unmute=function(b){"string"!==typeof b&&(b=null);if(b){if(!s(b))return!1;c._wD('soundManager.unmute(): Unmuting "'+b+'"');return c.sounds[b].unmute()}c._wD("soundManager.unmute(): Unmuting all sounds");for(b=c.soundIDs.length;b--;)c.sounds[c.soundIDs[b]].unmute();c.muted=!1;return!0};this.unmuteAll=function(){c.unmute()};this.toggleMute=function(b){return!s(b)?!1:c.sounds[b].toggleMute()};
-this.getMemoryUse=function(){var c=0;i&&8!==m&&(c=parseInt(i._getMemoryUse(),10));return c};this.disable=function(b){var a;"undefined"===typeof b&&(b=!1);if(y)return!1;y=!0;o("shutdown",1);for(a=c.soundIDs.length;a--;)Ha(c.sounds[c.soundIDs[a]]);R(b);r.remove(j,"load",I);return!0};this.canPlayMIME=function(b){var a;c.hasHTML5&&(a=U({type:b}));return!z||a?a:b?!!(8<m&&b.match(Wa)||b.match(c.mimePattern)):null};this.canPlayURL=function(b){var a;c.hasHTML5&&(a=U({url:b}));return!z||a?a:b?!!b.match(c.filePattern):
-null};this.canPlayLink=function(b){return"undefined"!==typeof b.type&&b.type&&c.canPlayMIME(b.type)?!0:c.canPlayURL(b.href)};this.getSoundById=function(b,a){if(!b)throw Error("soundManager.getSoundById(): sID is null/undefined");var d=c.sounds[b];!d&&!a&&c._wD('"'+b+'" is an invalid sound ID.',2);return d};this.onready=function(b,a){if(b&&b instanceof Function)return n&&c._wD(q("queue","onready")),a||(a=j),pa("onready",b,a),H(),!0;throw q("needFunction","onready");};this.ontimeout=function(b,a){if(b&&
-b instanceof Function)return n&&c._wD(q("queue","ontimeout")),a||(a=j),pa("ontimeout",b,a),H({type:"ontimeout"}),!0;throw q("needFunction","ontimeout");};this._wD=this._writeDebug=function(b,a,d){var f,e;if(!c.debugMode)return!1;"undefined"!==typeof d&&d&&(b=b+" | "+(new Date).getTime());if(Sa&&c.useConsole){d=$a[a];if("undefined"!==typeof console[d])console[d](b);else console.log(b);if(c.consoleOnly)return!0}try{f=u("soundmanager-debug");if(!f)return!1;e=h.createElement("div");if(0===++Za%2)e.className=
-"sm2-alt";a="undefined"===typeof a?0:parseInt(a,10);e.appendChild(h.createTextNode(b));if(a){if(2<=a)e.style.fontWeight="bold";if(3===a)e.style.color="#ff3333"}f.insertBefore(e,f.firstChild)}catch(i){}return!0};this._debug=function(){var b,a;o("currentObj",1);for(b=0,a=c.soundIDs.length;b<a;b++)c.sounds[c.soundIDs[b]]._debug()};this.reboot=function(){c._wD("soundManager.reboot()");c.soundIDs.length&&c._wD("Destroying "+c.soundIDs.length+" SMSound objects...");var b,a;for(b=c.soundIDs.length;b--;)c.sounds[c.soundIDs[b]].destruct();
-try{if(D)ua=i.innerHTML;S=i.parentNode.removeChild(i);c._wD("Flash movie removed.")}catch(d){o("badRemove",2)}ua=S=z=null;c.enabled=sa=n=ga=xa=P=Q=y=c.swfLoaded=!1;c.soundIDs=c.sounds=[];i=null;for(b in B)if(B.hasOwnProperty(b))for(a=B[b].length;a--;)B[b][a].fired=!1;c._wD("soundManager: Rebooting...");j.setTimeout(c.beginDelayedInit,20)};this.getMoviePercent=function(){return i&&"undefined"!==typeof i.PercentLoaded?i.PercentLoaded():null};this.beginDelayedInit=function(){Y=!0;J();setTimeout(function(){if(xa)return!1;
-ca();aa();return xa=!0},20);Z()};this.destruct=function(){c._wD("soundManager.destruct()");c.disable(!0)};Ea=function(b){var a=this,d,f,e,h,g,Ya,j=!1,x=[],l=0,n,r,p=null,t=null,u=null;this.sID=b.id;this.url=b.url;this._iO=this.instanceOptions=this.options=v(b);this.pan=this.options.pan;this.volume=this.options.volume;this.isHTML5=!1;this._a=null;this.id3={};this._debug=function(){if(c.debugMode){var b=null,e=[],d,f;for(b in a.options)null!==a.options[b]&&(a.options[b]instanceof Function?(d=a.options[b].toString(),
-d=d.replace(/\s\s+/g," "),f=d.indexOf("{"),e.push(" "+b+": {"+d.substr(f+1,Math.min(Math.max(d.indexOf("\n")-1,64),64)).replace(/\n/g,"")+"... }")):e.push(" "+b+": "+a.options[b]));c._wD("SMSound() merged options: {\n"+e.join(", \n")+"\n}")}};this._debug();this.load=function(b){var d=null;if("undefined"!==typeof b)a._iO=v(b,a.options),a.instanceOptions=a._iO;else if(b=a.options,a._iO=b,a.instanceOptions=a._iO,p&&p!==a.url)o("manURL"),a._iO.url=a.url,a.url=null;if(!a._iO.url)a._iO.url=a.url;a._iO.url=
-ia(a._iO.url);c._wD("SMSound.load(): "+a._iO.url,1);if(a._iO.url===a.url&&0!==a.readyState&&2!==a.readyState)return o("onURL",1),3===a.readyState&&a._iO.onload&&a._iO.onload.apply(a,[!!a.duration]),a;b=a._iO;p=a.url;a.loaded=!1;a.readyState=1;a.playState=0;if(ja(b))d=a._setup_html5(b),d._called_load?c._wD(k+"ignoring request to load again: "+a.sID):(c._wD(k+"load: "+a.sID),a._html5_canplay=!1,a._a.autobuffer="auto",a._a.preload="auto",d.load(),d._called_load=!0,b.autoPlay&&a.play());else try{a.isHTML5=
-!1,a._iO=fa(ea(b)),b=a._iO,8===m?i._load(a.sID,b.url,b.stream,b.autoPlay,b.whileloading?1:0,b.loops||1,b.usePolicyFile):i._load(a.sID,b.url,!!b.stream,!!b.autoPlay,b.loops||1,!!b.autoLoad,b.usePolicyFile)}catch(e){o("smError",2),w("onload",!1),K({type:"SMSOUND_LOAD_JS_EXCEPTION",fatal:!0})}return a};this.unload=function(){0!==a.readyState&&(c._wD('SMSound.unload(): "'+a.sID+'"'),a.isHTML5?(h(),a._a&&(a._a.pause(),ya(a._a))):8===m?i._unload(a.sID,"about:blank"):i._unload(a.sID),d());return a};this.destruct=
-function(b){c._wD('SMSound.destruct(): "'+a.sID+'"');if(a.isHTML5){if(h(),a._a)a._a.pause(),ya(a._a),F||e(),a._a._t=null,a._a=null}else a._iO.onfailure=null,i._destroySound(a.sID);b||c.destroySound(a.sID,!0)};this.start=this.play=function(b,d){var e,d=void 0===d?!0:d;b||(b={});a._iO=v(b,a._iO);a._iO=v(a._iO,a.options);a._iO.url=ia(a._iO.url);a.instanceOptions=a._iO;if(a._iO.serverURL&&!a.connected)return a.getAutoPlay()||(c._wD("SMSound.play():  Netstream not connected yet - setting autoPlay"),a.setAutoPlay(!0)),
-a;ja(a._iO)&&(a._setup_html5(a._iO),g());if(1===a.playState&&!a.paused)if(e=a._iO.multiShot)c._wD('SMSound.play(): "'+a.sID+'" already playing (multi-shot)',1);else return c._wD('SMSound.play(): "'+a.sID+'" already playing (one-shot)',1),a;if(a.loaded)c._wD('SMSound.play(): "'+a.sID+'"');else if(0===a.readyState){c._wD('SMSound.play(): Attempting to load "'+a.sID+'"',1);if(!a.isHTML5)a._iO.autoPlay=!0;a.load(a._iO)}else{if(2===a.readyState)return c._wD('SMSound.play(): Could not load "'+a.sID+'" - exiting',
-2),a;c._wD('SMSound.play(): "'+a.sID+'" is loading - attempting to play..',1)}if(!a.isHTML5&&9===m&&0<a.position&&a.position===a.duration)c._wD('SMSound.play(): "'+a.sID+'": Sound at end, resetting to position:0'),b.position=0;if(a.paused&&a.position&&0<a.position)c._wD('SMSound.play(): "'+a.sID+'" is resuming from paused state',1),a.resume();else{a._iO=v(b,a._iO);if(null!==a._iO.from&&null!==a._iO.to&&0===a.instanceCount&&0===a.playState&&!a._iO.serverURL){e=function(){a._iO=v(b,a._iO);a.play(a._iO)};
-if(a.isHTML5&&!a._html5_canplay)return c._wD('SMSound.play(): Beginning load of "'+a.sID+'" for from/to case'),a.load({_oncanplay:e}),!1;if(!a.isHTML5&&!a.loaded&&(!a.readyState||2!==a.readyState))return c._wD('SMSound.play(): Preloading "'+a.sID+'" for from/to case'),a.load({onload:e}),!1;a._iO=r()}c._wD('SMSound.play(): "'+a.sID+'" is starting to play');(!a.instanceCount||a._iO.multiShotEvents||!a.isHTML5&&8<m&&!a.getAutoPlay())&&a.instanceCount++;0===a.playState&&a._iO.onposition&&Ya(a);a.playState=
-1;a.paused=!1;a.position="undefined"!==typeof a._iO.position&&!isNaN(a._iO.position)?a._iO.position:0;if(!a.isHTML5)a._iO=fa(ea(a._iO));a._iO.onplay&&d&&(a._iO.onplay.apply(a),j=!0);a.setVolume(a._iO.volume,!0);a.setPan(a._iO.pan,!0);a.isHTML5?(g(),e=a._setup_html5(),a.setPosition(a._iO.position),e.play()):i._start(a.sID,a._iO.loops||1,9===m?a._iO.position:a._iO.position/1E3)}return a};this.stop=function(c){var b=a._iO;if(1===a.playState){a._onbufferchange(0);a._resetOnPosition(0);a.paused=!1;if(!a.isHTML5)a.playState=
-0;n();b.to&&a.clearOnPosition(b.to);if(a.isHTML5){if(a._a)c=a.position,a.setPosition(0),a.position=c,a._a.pause(),a.playState=0,a._onTimer(),h()}else i._stop(a.sID,c),b.serverURL&&a.unload();a.instanceCount=0;a._iO={};b.onstop&&b.onstop.apply(a)}return a};this.setAutoPlay=function(b){c._wD("sound "+a.sID+" turned autoplay "+(b?"on":"off"));a._iO.autoPlay=b;a.isHTML5||(i._setAutoPlay(a.sID,b),b&&!a.instanceCount&&1===a.readyState&&(a.instanceCount++,c._wD("sound "+a.sID+" incremented instance count to "+
-a.instanceCount)))};this.getAutoPlay=function(){return a._iO.autoPlay};this.setPosition=function(b){void 0===b&&(b=0);var d=a.isHTML5?Math.max(b,0):Math.min(a.duration||a._iO.duration,Math.max(b,0));a.position=d;b=a.position/1E3;a._resetOnPosition(a.position);a._iO.position=d;if(a.isHTML5){if(a._a)if(a._html5_canplay){if(a._a.currentTime!==b){c._wD("setPosition("+b+"): setting position");try{a._a.currentTime=b,(0===a.playState||a.paused)&&a._a.pause()}catch(e){c._wD("setPosition("+b+"): setting position failed: "+
-e.message,2)}}}else c._wD("setPosition("+b+"): delaying, sound not ready")}else b=9===m?a.position:b,a.readyState&&2!==a.readyState&&i._setPosition(a.sID,b,a.paused||!a.playState);a.isHTML5&&a.paused&&a._onTimer(!0);return a};this.pause=function(b){if(a.paused||0===a.playState&&1!==a.readyState)return a;c._wD("SMSound.pause()");a.paused=!0;a.isHTML5?(a._setup_html5().pause(),h()):(b||void 0===b)&&i._pause(a.sID);a._iO.onpause&&a._iO.onpause.apply(a);return a};this.resume=function(){var b=a._iO;if(!a.paused)return a;
-c._wD("SMSound.resume()");a.paused=!1;a.playState=1;a.isHTML5?(a._setup_html5().play(),g()):(b.isMovieStar&&!b.serverURL&&a.setPosition(a.position),i._pause(a.sID));j&&b.onplay?(b.onplay.apply(a),j=!0):b.onresume&&b.onresume.apply(a);return a};this.togglePause=function(){c._wD("SMSound.togglePause()");if(0===a.playState)return a.play({position:9===m&&!a.isHTML5?a.position:a.position/1E3}),a;a.paused?a.resume():a.pause();return a};this.setPan=function(b,c){"undefined"===typeof b&&(b=0);"undefined"===
-typeof c&&(c=!1);a.isHTML5||i._setPan(a.sID,b);a._iO.pan=b;if(!c)a.pan=b,a.options.pan=b;return a};this.setVolume=function(b,d){"undefined"===typeof b&&(b=100);"undefined"===typeof d&&(d=!1);if(a.isHTML5){if(a._a)a._a.volume=Math.max(0,Math.min(1,b/100))}else i._setVolume(a.sID,c.muted&&!a.muted||a.muted?0:b);a._iO.volume=b;if(!d)a.volume=b,a.options.volume=b;return a};this.mute=function(){a.muted=!0;if(a.isHTML5){if(a._a)a._a.muted=!0}else i._setVolume(a.sID,0);return a};this.unmute=function(){a.muted=
-!1;var b="undefined"!==typeof a._iO.volume;if(a.isHTML5){if(a._a)a._a.muted=!1}else i._setVolume(a.sID,b?a._iO.volume:a.options.volume);return a};this.toggleMute=function(){return a.muted?a.unmute():a.mute()};this.onposition=this.onPosition=function(b,c,d){x.push({position:b,method:c,scope:"undefined"!==typeof d?d:a,fired:!1});return a};this.clearOnPosition=function(a,b){var c,a=parseInt(a,10);if(isNaN(a))return!1;for(c=0;c<x.length;c++)if(a===x[c].position&&(!b||b===x[c].method))x[c].fired&&l--,
-x.splice(c,1)};this._processOnPosition=function(){var b,c;b=x.length;if(!b||!a.playState||l>=b)return!1;for(;b--;)if(c=x[b],!c.fired&&a.position>=c.position)c.fired=!0,l++,c.method.apply(c.scope,[c.position]);return!0};this._resetOnPosition=function(a){var b,c;b=x.length;if(!b)return!1;for(;b--;)if(c=x[b],c.fired&&a<=c.position)c.fired=!1,l--;return!0};r=function(){var b=a._iO,d=b.from,e=b.to,f,g;g=function(){c._wD(a.sID+': "to" time of '+e+" reached.");a.clearOnPosition(e,g);a.stop()};f=function(){c._wD(a.sID+
-': playing "from" '+d);if(null!==e&&!isNaN(e))a.onPosition(e,g)};if(null!==d&&!isNaN(d))b.position=d,b.multiShot=!1,f();return b};Ya=function(){var b=a._iO.onposition;if(b)for(var c in b)if(b.hasOwnProperty(c))a.onPosition(parseInt(c,10),b[c])};n=function(){var b=a._iO.onposition;if(b)for(var c in b)b.hasOwnProperty(c)&&a.clearOnPosition(parseInt(c,10))};g=function(){a.isHTML5&&Ka(a)};h=function(){a.isHTML5&&La(a)};d=function(){x=[];l=0;j=!1;a._hasTimer=null;a._a=null;a._html5_canplay=!1;a.bytesLoaded=
-null;a.bytesTotal=null;a.duration=a._iO&&a._iO.duration?a._iO.duration:null;a.durationEstimate=null;a.eqData=[];a.eqData.left=[];a.eqData.right=[];a.failures=0;a.isBuffering=!1;a.instanceOptions={};a.instanceCount=0;a.loaded=!1;a.metadata={};a.readyState=0;a.muted=!1;a.paused=!1;a.peakData={left:0,right:0};a.waveformData={left:[],right:[]};a.playState=0;a.position=null};d();this._onTimer=function(b){var c,d=!1,e={};if(a._hasTimer||b){if(a._a&&(b||(0<a.playState||1===a.readyState)&&!a.paused)){c=a._get_html5_duration();
-if(c!==t)t=c,a.duration=c,d=!0;a.durationEstimate=a.duration;c=1E3*a._a.currentTime||0;c!==u&&(u=c,d=!0);(d||b)&&a._whileplaying(c,e,e,e,e);return d}return!1}};this._get_html5_duration=function(){var b=a._iO,c=a._a?1E3*a._a.duration:b?b.duration:void 0;return c&&!isNaN(c)&&Infinity!==c?c:b?b.duration:null};this._setup_html5=function(b){var b=v(a._iO,b),e=decodeURI,g=F?c._global_a:a._a,h=e(b.url),i=g&&g._t?g._t.instanceOptions:null;if(g){if(g._t&&(!F&&h===e(p)||F&&i.url===b.url&&(!p||p===i.url)))return g;
-c._wD("setting new URL on existing object: "+h+(p?", old URL: "+p:""));F&&g._t&&g._t.playState&&b.url!==i.url&&g._t.stop();d();g.src=b.url;p=a.url=b.url;g._called_load=!1}else{c._wD("creating HTML5 Audio() element with URL: "+h);g=new Audio(b.url);g._called_load=!1;if(bb)g._called_load=!0;if(F)c._global_a=g}a.isHTML5=!0;a._a=g;g._t=a;f();g.loop=1<b.loops?"loop":"";b.autoLoad||b.autoPlay?a.load():(g.autobuffer=!1,g.preload="none");g.loop=1<b.loops?"loop":"";return g};f=function(){if(a._a._added_events)return!1;
-var b;c._wD(k+"adding event listeners: "+a.sID);a._a._added_events=!0;for(b in A)A.hasOwnProperty(b)&&a._a&&a._a.addEventListener(b,A[b],!1);return!0};e=function(){var b;c._wD(k+"removing event listeners: "+a.sID);a._a._added_events=!1;for(b in A)A.hasOwnProperty(b)&&a._a&&a._a.removeEventListener(b,A[b],!1)};this._onload=function(b){var d,b=!!b;c._wD(d+'"'+a.sID+'"'+(b?" loaded.":" failed to load? - "+a.url),b?1:2);d="SMSound._onload(): ";!b&&!a.isHTML5&&(!0===c.sandbox.noRemote&&c._wD(d+q("noNet"),
-1),!0===c.sandbox.noLocal&&c._wD(d+q("noLocal"),1));a.loaded=b;a.readyState=b?3:2;a._onbufferchange(0);a._iO.onload&&a._iO.onload.apply(a,[b]);return!0};this._onbufferchange=function(b){if(0===a.playState||b&&a.isBuffering||!b&&!a.isBuffering)return!1;a.isBuffering=1===b;a._iO.onbufferchange&&(c._wD("SMSound._onbufferchange(): "+b),a._iO.onbufferchange.apply(a));return!0};this._onsuspend=function(){a._iO.onsuspend&&(c._wD("SMSound._onsuspend()"),a._iO.onsuspend.apply(a));return!0};this._onfailure=
-function(b,d,e){a.failures++;c._wD('SMSound._onfailure(): "'+a.sID+'" count '+a.failures);if(a._iO.onfailure&&1===a.failures)a._iO.onfailure(a,b,d,e);else c._wD("SMSound._onfailure(): ignoring")};this._onfinish=function(){var b=a._iO.onfinish;a._onbufferchange(0);a._resetOnPosition(0);if(a.instanceCount){a.instanceCount--;if(!a.instanceCount)n(),a.playState=0,a.paused=!1,a.instanceCount=0,a.instanceOptions={},a._iO={},h();if((!a.instanceCount||a._iO.multiShotEvents)&&b)c._wD('SMSound._onfinish(): "'+
-a.sID+'"'),b.apply(a)}};this._whileloading=function(b,c,d,e){var f=a._iO;a.bytesLoaded=b;a.bytesTotal=c;a.duration=Math.floor(d);a.bufferLength=e;if(f.isMovieStar)a.durationEstimate=a.duration;else if(a.durationEstimate=f.duration?a.duration>f.duration?a.duration:f.duration:parseInt(a.bytesTotal/a.bytesLoaded*a.duration,10),void 0===a.durationEstimate)a.durationEstimate=a.duration;3!==a.readyState&&f.whileloading&&f.whileloading.apply(a)};this._whileplaying=function(b,c,d,e,f){var g=a._iO;if(isNaN(b)||
-null===b)return!1;a.position=b;a._processOnPosition();if(!a.isHTML5&&8<m){if(g.usePeakData&&"undefined"!==typeof c&&c)a.peakData={left:c.leftPeak,right:c.rightPeak};if(g.useWaveformData&&"undefined"!==typeof d&&d)a.waveformData={left:d.split(","),right:e.split(",")};if(g.useEQData&&"undefined"!==typeof f&&f&&f.leftEQ&&(b=f.leftEQ.split(","),a.eqData=b,a.eqData.left=b,"undefined"!==typeof f.rightEQ&&f.rightEQ))a.eqData.right=f.rightEQ.split(",")}1===a.playState&&(!a.isHTML5&&8===m&&!a.position&&a.isBuffering&&
-a._onbufferchange(0),g.whileplaying&&g.whileplaying.apply(a));return!0};this._onmetadata=function(b,d){c._wD('SMSound._onmetadata(): "'+this.sID+'" metadata received.');var e={},f,g;for(f=0,g=b.length;f<g;f++)e[b[f]]=d[f];a.metadata=e;a._iO.onmetadata&&a._iO.onmetadata.apply(a)};this._onid3=function(b,d){c._wD('SMSound._onid3(): "'+this.sID+'" ID3 data received.');var e=[],f,g;for(f=0,g=b.length;f<g;f++)e[b[f]]=d[f];a.id3=v(a.id3,e);a._iO.onid3&&a._iO.onid3.apply(a)};this._onconnect=function(b){b=
-1===b;c._wD('SMSound._onconnect(): "'+a.sID+'"'+(b?" connected.":" failed to connect? - "+a.url),b?1:2);if(a.connected=b)a.failures=0,s(a.sID)&&(a.getAutoPlay()?a.play(void 0,a.getAutoPlay()):a._iO.autoLoad&&a.load()),a._iO.onconnect&&a._iO.onconnect.apply(a,[b])};this._ondataerror=function(b){0<a.playState&&(c._wD("SMSound._ondataerror(): "+b),a._iO.ondataerror&&a._iO.ondataerror.apply(a))}};ba=function(){return h.body||h._docElement||h.getElementsByTagName("div")[0]};u=function(b){return h.getElementById(b)};
-v=function(b,a){var d={},f,e;for(f in b)b.hasOwnProperty(f)&&(d[f]=b[f]);f="undefined"===typeof a?c.defaultOptions:a;for(e in f)f.hasOwnProperty(e)&&"undefined"===typeof d[e]&&(d[e]=f[e]);return d};r=function(){function b(a){var a=Pa.call(a),b=a.length;c?(a[1]="on"+a[1],3<b&&a.pop()):3===b&&a.push(!1);return a}function a(a,b){var g=a.shift(),h=[f[b]];if(c)g[h](a[0],a[1]);else g[h].apply(g,a)}var c=j.attachEvent,f={add:c?"attachEvent":"addEventListener",remove:c?"detachEvent":"removeEventListener"};
-return{add:function(){a(b(arguments),"add")},remove:function(){a(b(arguments),"remove")}}}();A={abort:l(function(){c._wD(k+"abort: "+this._t.sID)}),canplay:l(function(){var b=this._t;if(b._html5_canplay)return!0;b._html5_canplay=!0;c._wD(k+"canplay: "+b.sID+", "+b.url);b._onbufferchange(0);var a=!isNaN(b.position)?b.position/1E3:null;if(b.position&&this.currentTime!==a){c._wD(k+"canplay: setting position to "+a);try{this.currentTime=a}catch(d){c._wD(k+"setting position failed: "+d.message,2)}}b._iO._oncanplay&&
-b._iO._oncanplay()}),load:l(function(){var b=this._t;b.loaded||(b._onbufferchange(0),b._whileloading(b.bytesTotal,b.bytesTotal,b._get_html5_duration()),b._onload(!0))}),emptied:l(function(){c._wD(k+"emptied: "+this._t.sID)}),ended:l(function(){var b=this._t;c._wD(k+"ended: "+b.sID);b._onfinish()}),error:l(function(){c._wD(k+"error: "+this.error.code);this._t._onload(!1)}),loadeddata:l(function(){var b=this._t,a=b.bytesTotal||1;c._wD(k+"loadeddata: "+this._t.sID);if(!b._loaded&&!V)b.duration=b._get_html5_duration(),
-b._whileloading(a,a,b._get_html5_duration()),b._onload(!0)}),loadedmetadata:l(function(){c._wD(k+"loadedmetadata: "+this._t.sID)}),loadstart:l(function(){c._wD(k+"loadstart: "+this._t.sID);this._t._onbufferchange(1)}),play:l(function(){c._wD(k+"play: "+this._t.sID+", "+this._t.url);this._t._onbufferchange(0)}),playing:l(function(){c._wD(k+"playing: "+this._t.sID);this._t._onbufferchange(0)}),progress:l(function(b){var a=this._t;if(a.loaded)return!1;var d,f,e;e=0;var h="progress"===b.type;f=b.target.buffered;
-var g=b.loaded||0,i=b.total||1;if(f&&f.length){for(d=f.length;d--;)e=f.end(d)-f.start(d);g=e/b.target.duration;if(h&&1<f.length){e=[];f=f.length;for(d=0;d<f;d++)e.push(b.target.buffered.start(d)+"-"+b.target.buffered.end(d));c._wD(k+"progress: timeRanges: "+e.join(", "))}h&&!isNaN(g)&&c._wD(k+"progress: "+a.sID+": "+Math.floor(100*g)+"% loaded")}isNaN(g)||(a._onbufferchange(0),a._whileloading(g,i,a._get_html5_duration()),g&&i&&g===i&&A.load.call(this,b))}),ratechange:l(function(){c._wD(k+"ratechange: "+
-this._t.sID)}),suspend:l(function(b){var a=this._t;c._wD(k+"suspend: "+a.sID);A.progress.call(this,b);a._onsuspend()}),stalled:l(function(){c._wD(k+"stalled: "+this._t.sID)}),timeupdate:l(function(){this._t._onTimer()}),waiting:l(function(){var b=this._t;c._wD(k+"waiting: "+b.sID);b._onbufferchange(1)})};ja=function(b){return!b.serverURL&&(b.type?U({type:b.type}):U({url:b.url})||c.html5Only)};ya=function(b){if(b)b.src=ab?"":"about:blank"};U=function(b){function a(a){return c.preferFlash&&t&&!c.ignoreFlash&&
-"undefined"!==typeof c.flash[a]&&c.flash[a]}if(!c.useHTML5Audio||!c.hasHTML5)return!1;var d=b.url||null,b=b.type||null,f=c.audioFormats,e;if(b&&"undefined"!==c.html5[b])return c.html5[b]&&!a(b);if(!C){C=[];for(e in f)f.hasOwnProperty(e)&&(C.push(e),f[e].related&&(C=C.concat(f[e].related)));C=RegExp("\\.("+C.join("|")+")(\\?.*)?$","i")}e=d?d.toLowerCase().match(C):null;if(!e||!e.length)if(b)d=b.indexOf(";"),e=(-1!==d?b.substr(0,d):b).substr(6);else return!1;else e=e[1];if(e&&"undefined"!==typeof c.html5[e])return c.html5[e]&&
-!a(e);b="audio/"+e;d=c.html5.canPlayType({type:b});return(c.html5[e]=d)&&c.html5[b]&&!a(b)};Oa=function(){function b(b){var d,e,f=!1;if(!a||"function"!==typeof a.canPlayType)return!1;if(b instanceof Array){for(d=0,e=b.length;d<e&&!f;d++)if(c.html5[b[d]]||a.canPlayType(b[d]).match(c.html5Test))f=!0,c.html5[b[d]]=!0,c.flash[b[d]]=!(!c.preferFlash||!t||!b[d].match(Ua));return f}b=a&&"function"===typeof a.canPlayType?a.canPlayType(b):!1;return!(!b||!b.match(c.html5Test))}if(!c.useHTML5Audio||"undefined"===
-typeof Audio)return!1;var a="undefined"!==typeof Audio?db?new Audio(null):new Audio:null,d,f={},e,h;e=c.audioFormats;for(d in e)if(e.hasOwnProperty(d)&&(f[d]=b(e[d].type),f["audio/"+d]=f[d],c.flash[d]=c.preferFlash&&!c.ignoreFlash&&d.match(Ua)?!0:!1,e[d]&&e[d].related))for(h=e[d].related.length;h--;)f["audio/"+e[d].related[h]]=f[d],c.html5[e[d].related[h]]=f[d],c.flash[e[d].related[h]]=f[d];f.canPlayType=a?b:null;c.html5=v(c.html5,f);return!0};$={notReady:"Not loaded yet - wait for soundManager.onload()/onready()",
-notOK:"Audio support is not available.",domError:"soundManager::createMovie(): appendChild/innerHTML call failed. DOM not ready or other error.",spcWmode:"soundManager::createMovie(): Removing wmode, preventing known SWF loading issue(s)",swf404:"soundManager: Verify that %s is a valid path.",tryDebug:"Try soundManager.debugFlash = true for more security details (output goes to SWF.)",checkSWF:"See SWF output for more debug info.",localFail:"soundManager: Non-HTTP page ("+h.location.protocol+" URL?) Review Flash player security settings for this special case:\nhttp://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html\nMay need to add/allow path, eg. c:/sm2/ or /users/me/sm2/",
-waitFocus:"soundManager: Special case: Waiting for focus-related event..",waitImpatient:"soundManager: Getting impatient, still waiting for Flash%s...",waitForever:"soundManager: Waiting indefinitely for Flash (will recover if unblocked)...",needFunction:"soundManager: Function object expected for %s",badID:'Warning: Sound ID "%s" should be a string, starting with a non-numeric character',currentObj:"--- soundManager._debug(): Current sound objects ---",waitEI:"soundManager::initMovie(): Waiting for ExternalInterface call from Flash..",
-waitOnload:"soundManager: Waiting for window.onload()",docLoaded:"soundManager: Document already loaded",onload:"soundManager::initComplete(): calling soundManager.onload()",onloadOK:"soundManager.onload() complete",init:"soundManager::init()",didInit:"soundManager::init(): Already called?",flashJS:"soundManager: Attempting to call Flash from JS..",secNote:"Flash security note: Network/internet URLs will not load due to security restrictions. Access can be configured via Flash Player Global Security Settings Page: http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html",
-badRemove:"Warning: Failed to remove flash movie.",noPeak:"Warning: peakData features unsupported for movieStar formats",shutdown:"soundManager.disable(): Shutting down",queue:"soundManager: Queueing %s handler",smFail:"soundManager: Failed to initialise.",smError:"SMSound.load(): Exception: JS-Flash communication failed, or JS error.",fbTimeout:"No flash response, applying .swf_timedout CSS..",fbLoaded:"Flash loaded",fbHandler:"soundManager::flashBlockHandler()",manURL:"SMSound.load(): Using manually-assigned URL",
-onURL:"soundManager.load(): current URL already assigned.",badFV:'soundManager.flashVersion must be 8 or 9. "%s" is invalid. Reverting to %s.',as2loop:"Note: Setting stream:false so looping can work (flash 8 limitation)",noNSLoop:"Note: Looping not implemented for MovieStar formats",needfl9:"Note: Switching to flash 9, required for MP4 formats.",mfTimeout:"Setting flashLoadTimeout = 0 (infinite) for off-screen, mobile flash case",mfOn:"mobileFlash::enabling on-screen flash repositioning",policy:"Enabling usePolicyFile for data access"};
-q=function(){var b=Pa.call(arguments),a=b.shift(),a=$&&$[a]?$[a]:"",c,f;if(a&&b&&b.length)for(c=0,f=b.length;c<f;c++)a=a.replace("%s",b[c]);return a};ea=function(b){if(8===m&&1<b.loops&&b.stream)o("as2loop"),b.stream=!1;return b};fa=function(b,a){if(b&&!b.usePolicyFile&&(b.onid3||b.usePeakData||b.useWaveformData||b.useEQData))c._wD((a||"")+q("policy")),b.usePolicyFile=!0;return b};wa=function(b){"undefined"!==typeof console&&"undefined"!==typeof console.warn?console.warn(b):c._wD(b)};na=function(){return!1};
-Ha=function(b){for(var a in b)b.hasOwnProperty(a)&&"function"===typeof b[a]&&(b[a]=na)};da=function(b){"undefined"===typeof b&&(b=!1);if(y||b)o("smFail",2),c.disable(b)};Ia=function(b){var a=null;if(b)if(b.match(/\.swf(\?.*)?$/i)){if(a=b.substr(b.toLowerCase().lastIndexOf(".swf?")+4))return b}else b.lastIndexOf("/")!==b.length-1&&(b+="/");b=(b&&-1!==b.lastIndexOf("/")?b.substr(0,b.lastIndexOf("/")+1):"./")+c.movieURL;c.noSWFCache&&(b+="?ts="+(new Date).getTime());return b};qa=function(){m=parseInt(c.flashVersion,
-10);if(8!==m&&9!==m)c._wD(q("badFV",m,8)),c.flashVersion=m=8;var b=c.debugMode||c.debugFlash?"_debug.swf":".swf";if(c.useHTML5Audio&&!c.html5Only&&c.audioFormats.mp4.required&&9>m)c._wD(q("needfl9")),c.flashVersion=m=9;c.version=c.versionNumber+(c.html5Only?" (HTML5-only mode)":9===m?" (AS3/Flash 9)":" (AS2/Flash 8)");8<m?(c.defaultOptions=v(c.defaultOptions,c.flash9Options),c.features.buffering=!0,c.defaultOptions=v(c.defaultOptions,c.movieStarOptions),c.filePatterns.flash9=RegExp("\\.(mp3|"+Xa.join("|")+
-")(\\?.*)?$","i"),c.features.movieStar=!0):c.features.movieStar=!1;c.filePattern=c.filePatterns[8!==m?"flash9":"flash8"];c.movieURL=(8===m?"soundmanager2.swf":"soundmanager2_flash9.swf").replace(".swf",b);c.features.peakData=c.features.waveformData=c.features.eqData=8<m};Ga=function(b,a){if(!i)return!1;i._setPolling(b,a)};ta=function(){if(c.debugURLParam.test(O))c.debugMode=!0;if(u(c.debugID))return!1;var b,a,d,f;if(c.debugMode&&!u(c.debugID)&&(!Sa||!c.useConsole||!c.consoleOnly)){b=h.createElement("div");
-b.id=c.debugID+"-toggle";a={position:"fixed",bottom:"0px",right:"0px",width:"1.2em",height:"1.2em",lineHeight:"1.2em",margin:"2px",textAlign:"center",border:"1px solid #999",cursor:"pointer",background:"#fff",color:"#333",zIndex:10001};b.appendChild(h.createTextNode("-"));b.onclick=Ja;b.title="Toggle SM2 debug console";if(p.match(/msie 6/i))b.style.position="absolute",b.style.cursor="hand";for(f in a)a.hasOwnProperty(f)&&(b.style[f]=a[f]);a=h.createElement("div");a.id=c.debugID;a.style.display=c.debugMode?
-"block":"none";if(c.debugMode&&!u(b.id)){try{d=ba(),d.appendChild(b)}catch(e){throw Error(q("domError")+" \n"+e.toString());}d.appendChild(a)}}};s=this.getSoundById;o=function(b,a){return b?c._wD(q(b),a):""};if(O.indexOf("sm2-debug=alert")+1&&c.debugMode)c._wD=function(b){G.alert(b)};Ja=function(){var b=u(c.debugID),a=u(c.debugID+"-toggle");if(!b)return!1;oa?(a.innerHTML="+",b.style.display="none"):(a.innerHTML="-",b.style.display="block");oa=!oa};w=function(b,a,c){if("undefined"!==typeof sm2Debugger)try{sm2Debugger.handleEvent(b,
-a,c)}catch(f){}return!0};L=function(){var b=[];c.debugMode&&b.push("sm2_debug");c.debugFlash&&b.push("flash_debug");c.useHighPerformance&&b.push("high_performance");return b.join(" ")};va=function(){var b=q("fbHandler"),a=c.getMoviePercent(),d={type:"FLASHBLOCK"};if(c.html5Only)return!1;if(c.ok()){if(c.didFlashBlock&&c._wD(b+": Unblocked"),c.oMC)c.oMC.className=[L(),"movieContainer","swf_loaded"+(c.didFlashBlock?" swf_unblocked":"")].join(" ")}else{if(z)c.oMC.className=L()+" movieContainer "+(null===
-a?"swf_timedout":"swf_error"),c._wD(b+": "+q("fbTimeout")+(a?" ("+q("fbLoaded")+")":""));c.didFlashBlock=!0;H({type:"ontimeout",ignoreInit:!0,error:d});K(d)}};pa=function(b,a,c){"undefined"===typeof B[b]&&(B[b]=[]);B[b].push({method:a,scope:c||null,fired:!1})};H=function(b){b||(b={type:"onready"});if(!n&&b&&!b.ignoreInit||"ontimeout"===b.type&&c.ok())return!1;var a={success:b&&b.ignoreInit?c.ok():!y},d=b&&b.type?B[b.type]||[]:[],f=[],e,h=[a],g=z&&c.useFlashBlock&&!c.ok();if(b.error)h[0].error=b.error;
-for(a=0,e=d.length;a<e;a++)!0!==d[a].fired&&f.push(d[a]);if(f.length){c._wD("soundManager: Firing "+f.length+" "+b.type+"() item"+(1===f.length?"":"s"));for(a=0,e=f.length;a<e;a++)if(f[a].scope?f[a].method.apply(f[a].scope,h):f[a].method.apply(this,h),!g)f[a].fired=!0}return!0};I=function(){j.setTimeout(function(){c.useFlashBlock&&va();H();c.onload instanceof Function&&(o("onload",1),c.onload.apply(j),o("onloadOK",1));c.waitForWindowLoad&&r.add(j,"load",I)},1)};ka=function(){if(void 0!==t)return t;
-var b=!1,a=navigator,c=a.plugins,f,e=j.ActiveXObject;if(c&&c.length)(a=a.mimeTypes)&&a["application/x-shockwave-flash"]&&a["application/x-shockwave-flash"].enabledPlugin&&a["application/x-shockwave-flash"].enabledPlugin.description&&(b=!0);else if("undefined"!==typeof e){try{f=new e("ShockwaveFlash.ShockwaveFlash")}catch(h){}b=!!f}return t=b};Na=function(){var b,a;if(Aa&&p.match(/os (1|2|3_0|3_1)/i)){c.hasHTML5=!1;c.html5Only=!0;if(c.oMC)c.oMC.style.display="none";return!1}if(c.useHTML5Audio){if(!c.html5||
-!c.html5.canPlayType)return c._wD("SoundManager: No HTML5 Audio() support detected."),c.hasHTML5=!1,!0;c.hasHTML5=!0;if(Ca&&(c._wD("soundManager::Note: Buggy HTML5 Audio in Safari on this OS X release, see https://bugs.webkit.org/show_bug.cgi?id=32159 - "+(!t?" would use flash fallback for MP3/MP4, but none detected.":"will use flash fallback for MP3/MP4, if available"),1),ka()))return!0}else return!0;for(a in c.audioFormats)if(c.audioFormats.hasOwnProperty(a)&&(c.audioFormats[a].required&&!c.html5.canPlayType(c.audioFormats[a].type)||
-c.flash[a]||c.flash[c.audioFormats[a].type]))b=!0;c.ignoreFlash&&(b=!1);c.html5Only=c.hasHTML5&&c.useHTML5Audio&&!b;return!c.html5Only};ia=function(b){var a,d,f=0;if(b instanceof Array){for(a=0,d=b.length;a<d;a++)if(b[a]instanceof Object){if(c.canPlayMIME(b[a].type)){f=a;break}}else if(c.canPlayURL(b[a])){f=a;break}if(b[f].url)b[f]=b[f].url;return b[f]}return b};Ka=function(b){if(!b._hasTimer)b._hasTimer=!0,!Ba&&c.html5PollingInterval&&(null===T&&0===ha&&(T=G.setInterval(Ma,c.html5PollingInterval)),
-ha++)};La=function(b){if(b._hasTimer)b._hasTimer=!1,!Ba&&c.html5PollingInterval&&ha--};Ma=function(){var b;if(null!==T&&!ha)return G.clearInterval(T),T=null,!1;for(b=c.soundIDs.length;b--;)c.sounds[c.soundIDs[b]].isHTML5&&c.sounds[c.soundIDs[b]]._hasTimer&&c.sounds[c.soundIDs[b]]._onTimer()};K=function(b){b="undefined"!==typeof b?b:{};c.onerror instanceof Function&&c.onerror.apply(j,[{type:"undefined"!==typeof b.type?b.type:null}]);"undefined"!==typeof b.fatal&&b.fatal&&c.disable()};Qa=function(){if(!Ca||
-!ka())return!1;var b=c.audioFormats,a,d;for(d in b)if(b.hasOwnProperty(d)&&("mp3"===d||"mp4"===d))if(c._wD("soundManager: Using flash fallback for "+d+" format"),c.html5[d]=!1,b[d]&&b[d].related)for(a=b[d].related.length;a--;)c.html5[b[d].related[a]]=!1};this._setSandboxType=function(b){var a=c.sandbox;a.type=b;a.description=a.types["undefined"!==typeof a.types[b]?b:"unknown"];c._wD("Flash security sandbox type: "+a.type);if("localWithFile"===a.type)a.noRemote=!0,a.noLocal=!1,o("secNote",2);else if("localWithNetwork"===
-a.type)a.noRemote=!1,a.noLocal=!0;else if("localTrusted"===a.type)a.noRemote=!1,a.noLocal=!1};this._externalInterfaceOK=function(b,a){if(c.swfLoaded)return!1;var d,f=(new Date).getTime();c._wD("soundManager::externalInterfaceOK()"+(b?" (~"+(f-b)+" ms)":""));w("swf",!0);w("flashtojs",!0);c.swfLoaded=!0;M=!1;Ca&&Qa();if(!a||a.replace(/\+dev/i,"")!==c.versionNumber.replace(/\+dev/i,""))return d='soundManager: Fatal: JavaScript file build "'+c.versionNumber+'" does not match Flash SWF build "'+a+'" at '+
-c.url+". Ensure both are up-to-date.",setTimeout(function(){throw Error(d);},0),!1;D?setTimeout(X,100):X()};ca=function(b,a){function d(){c._wD("-- SoundManager 2 "+c.version+(!c.html5Only&&c.useHTML5Audio?c.hasHTML5?" + HTML5 audio":", no HTML5 audio support":"")+(!c.html5Only?(c.useHighPerformance?", high performance mode, ":", ")+((c.flashPollingInterval?"custom ("+c.flashPollingInterval+"ms)":"normal")+" polling")+(c.wmode?", wmode: "+c.wmode:"")+(c.debugFlash?", flash debug mode":"")+(c.useFlashBlock?
-", flashBlock mode":""):"")+" --",1)}function f(a,b){return'<param name="'+a+'" value="'+b+'" />'}if(P&&Q)return!1;if(c.html5Only)return qa(),d(),c.oMC=u(c.movieID),X(),Q=P=!0,!1;var e=a||c.url,i=c.altURL||e,g;g=ba();var j,m,k=L(),l,n=null,n=(n=h.getElementsByTagName("html")[0])&&n.dir&&n.dir.match(/rtl/i),b="undefined"===typeof b?c.id:b;qa();c.url=Ia(N?e:i);a=c.url;c.wmode=!c.wmode&&c.useHighPerformance?"transparent":c.wmode;if(null!==c.wmode&&(p.match(/msie 8/i)||!D&&!c.useHighPerformance)&&navigator.platform.match(/win32|win64/i))o("spcWmode"),
-c.wmode=null;g={name:b,id:b,src:a,width:"auto",height:"auto",quality:"high",allowScriptAccess:c.allowScriptAccess,bgcolor:c.bgColor,pluginspage:Va+"www.macromedia.com/go/getflashplayer",title:"JS/Flash audio component (SoundManager 2)",type:"application/x-shockwave-flash",wmode:c.wmode,hasPriority:"true"};if(c.debugFlash)g.FlashVars="debug=1";c.wmode||delete g.wmode;if(D)e=h.createElement("div"),m=['<object id="'+b+'" data="'+a+'" type="'+g.type+'" title="'+g.title+'" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="'+
-Va+'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" width="'+g.width+'" height="'+g.height+'">',f("movie",a),f("AllowScriptAccess",c.allowScriptAccess),f("quality",g.quality),c.wmode?f("wmode",c.wmode):"",f("bgcolor",c.bgColor),f("hasPriority","true"),c.debugFlash?f("FlashVars",g.FlashVars):"","</object>"].join("");else for(j in e=h.createElement("embed"),g)g.hasOwnProperty(j)&&e.setAttribute(j,g[j]);ta();k=L();if(g=ba())if(c.oMC=u(c.movieID)||h.createElement("div"),
-c.oMC.id){l=c.oMC.className;c.oMC.className=(l?l+" ":"movieContainer")+(k?" "+k:"");c.oMC.appendChild(e);if(D)j=c.oMC.appendChild(h.createElement("div")),j.className="sm2-object-box",j.innerHTML=m;Q=!0}else{c.oMC.id=c.movieID;c.oMC.className="movieContainer "+k;j=k=null;if(!c.useFlashBlock)if(c.useHighPerformance)k={position:"fixed",width:"8px",height:"8px",bottom:"0px",left:"0px",overflow:"hidden"};else if(k={position:"absolute",width:"6px",height:"6px",top:"-9999px",left:"-9999px"},n)k.left=Math.abs(parseInt(k.left,
-10))+"px";if(cb)c.oMC.style.zIndex=1E4;if(!c.debugFlash)for(l in k)k.hasOwnProperty(l)&&(c.oMC.style[l]=k[l]);try{D||c.oMC.appendChild(e);g.appendChild(c.oMC);if(D)j=c.oMC.appendChild(h.createElement("div")),j.className="sm2-object-box",j.innerHTML=m;Q=!0}catch(r){throw Error(q("domError")+" \n"+r.toString());}}P=!0;d();c._wD("soundManager::createMovie(): Trying to load "+a+(!N&&c.altURL?" (alternate URL)":""),1);return!0};aa=function(){if(c.html5Only)return ca(),!1;if(i)return!1;i=c.getMovie(c.id);
-if(!i)S?(D?c.oMC.innerHTML=ua:c.oMC.appendChild(S),S=null,P=!0):ca(c.id,c.url),i=c.getMovie(c.id);i&&o("waitEI");c.oninitmovie instanceof Function&&setTimeout(c.oninitmovie,1);return!0};Z=function(){setTimeout(Fa,1E3)};Fa=function(){if(ga)return!1;ga=!0;r.remove(j,"load",Z);if(M&&!Da)return o("waitFocus"),!1;var b;n||(b=c.getMoviePercent(),c._wD(q("waitImpatient",100===b?" (SWF loaded)":0<b?" (SWF "+b+"% loaded)":"")));setTimeout(function(){b=c.getMoviePercent();n||(c._wD("soundManager: No Flash response within expected time.\nLikely causes: "+
-(0===b?"Loading "+c.movieURL+" may have failed (and/or Flash "+m+"+ not present?), ":"")+"Flash blocked or JS-Flash security error."+(c.debugFlash?" "+q("checkSWF"):""),2),!N&&b&&(o("localFail",2),c.debugFlash||o("tryDebug",2)),0===b&&c._wD(q("swf404",c.url)),w("flashtojs",!1,": Timed out"+N?" (Check flash security or flash blockers)":" (No plugin/missing SWF?)"));!n&&Ta&&(null===b?c.useFlashBlock||0===c.flashLoadTimeout?(c.useFlashBlock&&va(),o("waitForever")):da(!0):0===c.flashLoadTimeout?o("waitForever"):
-da(!0))},c.flashLoadTimeout)};E=function(){function b(){r.remove(j,"focus",E);r.remove(j,"load",E)}if(Da||!M)return b(),!0;Da=Ta=!0;c._wD("soundManager::handleFocus()");V&&M&&r.remove(j,"mousemove",E);ga=!1;b();return!0};Ra=function(){var b,a=[];if(c.useHTML5Audio&&c.hasHTML5){for(b in c.audioFormats)c.audioFormats.hasOwnProperty(b)&&a.push(b+": "+c.html5[b]+(!c.html5[b]&&t&&c.flash[b]?" (using flash)":c.preferFlash&&c.flash[b]&&t?" (preferring flash)":!c.html5[b]?" ("+(c.audioFormats[b].required?
-"required, ":"")+"and no flash support)":""));c._wD("-- SoundManager 2: HTML5 support tests ("+c.html5Test+"): "+a.join(", ")+" --",1)}};R=function(b){if(n)return!1;if(c.html5Only)return c._wD("-- SoundManager 2: loaded --"),n=!0,I(),w("onload",!0),!0;var a;if(!c.useFlashBlock||!c.flashLoadTimeout||c.getMoviePercent())n=!0,y&&(a={type:!t&&z?"NO_FLASH":"INIT_TIMEOUT"});c._wD("-- SoundManager 2 "+(y?"failed to load":"loaded")+" ("+(y?"security/load error":"OK")+") --",1);if(y||b){if(c.useFlashBlock&&
-c.oMC)c.oMC.className=L()+" "+(null===c.getMoviePercent()?"swf_timedout":"swf_error");H({type:"ontimeout",error:a});w("onload",!1);K(a);return!1}w("onload",!0);if(c.waitForWindowLoad&&!Y)return o("waitOnload"),r.add(j,"load",I),!1;c.waitForWindowLoad&&Y&&o("docLoaded");I();return!0};X=function(){o("init");if(n)return o("didInit"),!1;if(c.html5Only){if(!n)r.remove(j,"load",c.beginDelayedInit),c.enabled=!0,R();return!0}aa();try{o("flashJS"),i._externalInterfaceTest(!1),Ga(!0,c.flashPollingInterval||
-(c.useHighPerformance?10:50)),c.debugMode||i._disableDebug(),c.enabled=!0,w("jstoflash",!0),c.html5Only||r.add(j,"unload",na)}catch(b){return c._wD("js/flash exception: "+b.toString()),w("jstoflash",!1),K({type:"JS_TO_FLASH_EXCEPTION",fatal:!0}),da(!0),R(),!1}R();r.remove(j,"load",c.beginDelayedInit);return!0};J=function(){if(sa)return!1;sa=!0;ta();var b=O.toLowerCase(),a=null,a=null,d="undefined"!==typeof console&&"undefined"!==typeof console.log;if(-1!==b.indexOf("sm2-usehtml5audio="))a="1"===b.charAt(b.indexOf("sm2-usehtml5audio=")+
-18),d&&console.log((a?"Enabling ":"Disabling ")+"useHTML5Audio via URL parameter"),c.useHTML5Audio=a;if(-1!==b.indexOf("sm2-preferflash="))a="1"===b.charAt(b.indexOf("sm2-preferflash=")+16),d&&console.log((a?"Enabling ":"Disabling ")+"preferFlash via URL parameter"),c.preferFlash=a;if(!t&&c.hasHTML5)c._wD("SoundManager: No Flash detected"+(!c.useHTML5Audio?", enabling HTML5.":". Trying HTML5-only mode.")),c.useHTML5Audio=!0,c.preferFlash=!1;Oa();c.html5.usingFlash=Na();z=c.html5.usingFlash;Ra();if(!t&&
-z)c._wD("SoundManager: Fatal error: Flash is needed to play some required formats, but is not available."),c.flashLoadTimeout=1;h.removeEventListener&&h.removeEventListener("DOMContentLoaded",J,!1);aa();return!0};za=function(){"complete"===h.readyState&&(J(),h.detachEvent("onreadystatechange",za));return!0};ra=function(){Y=!0;r.remove(j,"load",ra)};ka();r.add(j,"focus",E);r.add(j,"load",E);r.add(j,"load",Z);r.add(j,"load",ra);V&&M&&r.add(j,"mousemove",E);h.addEventListener?h.addEventListener("DOMContentLoaded",
-J,!1):h.attachEvent?h.attachEvent("onreadystatechange",za):(w("onload",!1),K({type:"NO_DOM2_EVENTS",fatal:!0}));"complete"===h.readyState&&setTimeout(J,100)}var la=null;if("undefined"===typeof SM2_DEFER||!SM2_DEFER)la=new W;G.SoundManager=W;G.soundManager=la})(window);
\ No newline at end of file
diff --git a/inc/SoundManager2/script/soundmanager2-nodebug-jsmin.js b/inc/SoundManager2/script/soundmanager2-nodebug-jsmin.js
deleted file mode 100755
index f829d2c..0000000
--- a/inc/SoundManager2/script/soundmanager2-nodebug-jsmin.js
+++ /dev/null
@@ -1,77 +0,0 @@
-/** @license
- *
- * SoundManager 2: JavaScript Sound for the Web
- * ----------------------------------------------
- * http://schillmania.com/projects/soundmanager2/
- *
- * Copyright (c) 2007, Scott Schiller. All rights reserved.
- * Code provided under the BSD License:
- * http://schillmania.com/projects/soundmanager2/license.txt
- *
- * V2.97a.20111220
- */
-(function(J){function R(R,ea){function l(b){return function(a){var c=this._t;return!c||!c._a?null:b.call(this,a)}}this.flashVersion=8;this.debugFlash=this.debugMode=!1;this.consoleOnly=this.useConsole=!0;this.waitForWindowLoad=!1;this.bgColor="#ffffff";this.useHighPerformance=!1;this.html5PollingInterval=this.flashPollingInterval=null;this.flashLoadTimeout=1E3;this.wmode=null;this.allowScriptAccess="always";this.useFlashBlock=!1;this.useHTML5Audio=!0;this.html5Test=/^(probably|maybe)$/i;this.preferFlash=
-!0;this.noSWFCache=!1;this.audioFormats={mp3:{type:['audio/mpeg; codecs="mp3"',"audio/mpeg","audio/mp3","audio/MPA","audio/mpa-robust"],required:!0},mp4:{related:["aac","m4a"],type:['audio/mp4; codecs="mp4a.40.2"',"audio/aac","audio/x-m4a","audio/MP4A-LATM","audio/mpeg4-generic"],required:!1},ogg:{type:["audio/ogg; codecs=vorbis"],required:!1},wav:{type:['audio/wav; codecs="1"',"audio/wav","audio/wave","audio/x-wav"],required:!1}};this.defaultOptions={autoLoad:!1,autoPlay:!1,from:null,loops:1,onid3:null,
-onload:null,whileloading:null,onplay:null,onpause:null,onresume:null,whileplaying:null,onposition:null,onstop:null,onfailure:null,onfinish:null,multiShot:!0,multiShotEvents:!1,position:null,pan:0,stream:!0,to:null,type:null,usePolicyFile:!1,volume:100};this.flash9Options={isMovieStar:null,usePeakData:!1,useWaveformData:!1,useEQData:!1,onbufferchange:null,ondataerror:null};this.movieStarOptions={bufferTime:3,serverURL:null,onconnect:null,duration:null};this.movieID="sm2-container";this.id=ea||"sm2movie";
-this.debugID="soundmanager-debug";this.debugURLParam=/([#?&])debug=1/i;this.versionNumber="V2.97a.20111220";this.movieURL=this.version=null;this.url=R||null;this.altURL=null;this.enabled=this.swfLoaded=!1;this.oMC=null;this.sounds={};this.soundIDs=[];this.didFlashBlock=this.muted=!1;this.filePattern=null;this.filePatterns={flash8:/\.mp3(\?.*)?$/i,flash9:/\.mp3(\?.*)?$/i};this.features={buffering:!1,peakData:!1,waveformData:!1,eqData:!1,movieStar:!1};this.sandbox={};var fa;try{fa="undefined"!==typeof Audio&&
-"undefined"!==typeof(new Audio).canPlayType}catch(Xa){fa=!1}this.hasHTML5=fa;this.html5={usingFlash:null};this.flash={};this.ignoreFlash=this.html5Only=!1;var Aa,c=this,h=null,S,p=navigator.userAgent,j=J,ga=j.location.href.toString(),k=document,ha,T,i,v=[],K=!1,L=!1,m=!1,w=!1,ia=!1,M,q,ja,C,D,U,Ba,ka,A,V,E,la,ma,na,W,F,Ca,oa,Da,X,Ea,N=null,pa=null,G,qa,H,Y,Z,ra,o,$=!1,sa=!1,Fa,Ga,Ha,aa=0,O=null,ba,s=null,Ia,ca,P,x,ta,ua,Ja,n,Ra=Array.prototype.slice,B=!1,r,da,Ka,u,La,va=p.match(/(ipad|iphone|ipod)/i),
-Sa=p.match(/firefox/i),Ta=p.match(/droid/i),y=p.match(/msie/i),Ua=p.match(/webkit/i),Q=p.match(/safari/i)&&!p.match(/chrome/i),Va=p.match(/opera/i),wa=p.match(/(mobile|pre\/|xoom)/i)||va,xa=!ga.match(/usehtml5audio/i)&&!ga.match(/sm2\-ignorebadua/i)&&Q&&!p.match(/silk/i)&&p.match(/OS X 10_6_([3-7])/i),ya="undefined"!==typeof k.hasFocus?k.hasFocus():null,I=Q&&"undefined"===typeof k.hasFocus,Ma=!I,Na=/(mp3|mp4|mpa)/i,za=k.location?k.location.protocol.match(/http/i):null,Oa=!za?"http://":"",Pa=/^\s*audio\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4||m4v|m4a|mp4v|3gp|3g2)\s*(?:$|;)/i,
-Qa="mpeg4,aac,flv,mov,mp4,m4v,f4v,m4a,mp4v,3gp,3g2".split(","),Wa=RegExp("\\.("+Qa.join("|")+")(\\?.*)?$","i");this.mimePattern=/^\s*audio\/(?:x-)?(?:mp(?:eg|3))\s*(?:$|;)/i;this.useAltURL=!za;this._global_a=null;if(wa&&(c.useHTML5Audio=!0,c.preferFlash=!1,va))B=c.ignoreFlash=!0;this.supported=this.ok=function(){return s?m&&!w:c.useHTML5Audio&&c.hasHTML5};this.getMovie=function(b){return S(b)||k[b]||j[b]};this.createSound=function(b){function a(){e=Y(e);c.sounds[d.id]=new Aa(d);c.soundIDs.push(d.id);
-return c.sounds[d.id]}var e=null,f=null,d=null;if(!m||!c.ok())return ra(void 0),!1;2===arguments.length&&(b={id:arguments[0],url:arguments[1]});e=q(b);e.url=ba(e.url);d=e;if(o(d.id,!0))return c.sounds[d.id];if(ca(d))f=a(),f._setup_html5(d);else{if(8<i){if(null===d.isMovieStar)d.isMovieStar=d.serverURL||(d.type?d.type.match(Pa):!1)||d.url.match(Wa);if(d.isMovieStar&&d.usePeakData)d.usePeakData=!1}d=Z(d,void 0);f=a();if(8===i)h._createSound(d.id,d.loops||1,d.usePolicyFile);else if(h._createSound(d.id,
-d.url,d.usePeakData,d.useWaveformData,d.useEQData,d.isMovieStar,d.isMovieStar?d.bufferTime:!1,d.loops||1,d.serverURL,d.duration||null,d.autoPlay,!0,d.autoLoad,d.usePolicyFile),!d.serverURL)f.connected=!0,d.onconnect&&d.onconnect.apply(f);!d.serverURL&&(d.autoLoad||d.autoPlay)&&f.load(d)}!d.serverURL&&d.autoPlay&&f.play();return f};this.destroySound=function(b,a){if(!o(b))return!1;var e=c.sounds[b],f;e._iO={};e.stop();e.unload();for(f=0;f<c.soundIDs.length;f++)if(c.soundIDs[f]===b){c.soundIDs.splice(f,
-1);break}a||e.destruct(!0);delete c.sounds[b];return!0};this.load=function(b,a){return!o(b)?!1:c.sounds[b].load(a)};this.unload=function(b){return!o(b)?!1:c.sounds[b].unload()};this.onposition=this.onPosition=function(b,a,e,f){return!o(b)?!1:c.sounds[b].onposition(a,e,f)};this.clearOnPosition=function(b,a,e){return!o(b)?!1:c.sounds[b].clearOnPosition(a,e)};this.start=this.play=function(b,a){if(!m||!c.ok())return ra("soundManager.play(): "+G(!m?"notReady":"notOK")),!1;if(!o(b)){a instanceof Object||
-(a={url:a});return a&&a.url?(a.id=b,c.createSound(a).play()):!1}return c.sounds[b].play(a)};this.setPosition=function(b,a){return!o(b)?!1:c.sounds[b].setPosition(a)};this.stop=function(b){return!o(b)?!1:c.sounds[b].stop()};this.stopAll=function(){for(var b in c.sounds)c.sounds.hasOwnProperty(b)&&c.sounds[b].stop()};this.pause=function(b){return!o(b)?!1:c.sounds[b].pause()};this.pauseAll=function(){var b;for(b=c.soundIDs.length;b--;)c.sounds[c.soundIDs[b]].pause()};this.resume=function(b){return!o(b)?
-!1:c.sounds[b].resume()};this.resumeAll=function(){var b;for(b=c.soundIDs.length;b--;)c.sounds[c.soundIDs[b]].resume()};this.togglePause=function(b){return!o(b)?!1:c.sounds[b].togglePause()};this.setPan=function(b,a){return!o(b)?!1:c.sounds[b].setPan(a)};this.setVolume=function(b,a){return!o(b)?!1:c.sounds[b].setVolume(a)};this.mute=function(b){var a=0;"string"!==typeof b&&(b=null);if(b)return!o(b)?!1:c.sounds[b].mute();for(a=c.soundIDs.length;a--;)c.sounds[c.soundIDs[a]].mute();return c.muted=!0};
-this.muteAll=function(){c.mute()};this.unmute=function(b){"string"!==typeof b&&(b=null);if(b)return!o(b)?!1:c.sounds[b].unmute();for(b=c.soundIDs.length;b--;)c.sounds[c.soundIDs[b]].unmute();c.muted=!1;return!0};this.unmuteAll=function(){c.unmute()};this.toggleMute=function(b){return!o(b)?!1:c.sounds[b].toggleMute()};this.getMemoryUse=function(){var b=0;h&&8!==i&&(b=parseInt(h._getMemoryUse(),10));return b};this.disable=function(b){var a;"undefined"===typeof b&&(b=!1);if(w)return!1;w=!0;for(a=c.soundIDs.length;a--;)Da(c.sounds[c.soundIDs[a]]);
-M(b);n.remove(j,"load",D);return!0};this.canPlayMIME=function(b){var a;c.hasHTML5&&(a=P({type:b}));return!s||a?a:b?!!(8<i&&b.match(Pa)||b.match(c.mimePattern)):null};this.canPlayURL=function(b){var a;c.hasHTML5&&(a=P({url:b}));return!s||a?a:b?!!b.match(c.filePattern):null};this.canPlayLink=function(b){return"undefined"!==typeof b.type&&b.type&&c.canPlayMIME(b.type)?!0:c.canPlayURL(b.href)};this.getSoundById=function(b){if(!b)throw Error("soundManager.getSoundById(): sID is null/undefined");return c.sounds[b]};
-this.onready=function(b,a){if(b&&b instanceof Function)return a||(a=j),ja("onready",b,a),C(),!0;throw G("needFunction","onready");};this.ontimeout=function(b,a){if(b&&b instanceof Function)return a||(a=j),ja("ontimeout",b,a),C({type:"ontimeout"}),!0;throw G("needFunction","ontimeout");};this._wD=this._writeDebug=function(){return!0};this._debug=function(){};this.reboot=function(){var b,a;for(b=c.soundIDs.length;b--;)c.sounds[c.soundIDs[b]].destruct();try{if(y)pa=h.innerHTML;N=h.parentNode.removeChild(h)}catch(e){}pa=
-N=s=null;c.enabled=ma=m=$=sa=K=L=w=c.swfLoaded=!1;c.soundIDs=c.sounds=[];h=null;for(b in v)if(v.hasOwnProperty(b))for(a=v[b].length;a--;)v[b][a].fired=!1;j.setTimeout(c.beginDelayedInit,20)};this.getMoviePercent=function(){return h&&"undefined"!==typeof h.PercentLoaded?h.PercentLoaded():null};this.beginDelayedInit=function(){ia=!0;E();setTimeout(function(){if(sa)return!1;W();V();return sa=!0},20);U()};this.destruct=function(){c.disable(!0)};Aa=function(b){var a=this,e,f,d,g,z,j,k=!1,t=[],l=0,n,p,
-m=null,r=null,s=null;this.sID=b.id;this.url=b.url;this._iO=this.instanceOptions=this.options=q(b);this.pan=this.options.pan;this.volume=this.options.volume;this.isHTML5=!1;this._a=null;this.id3={};this._debug=function(){};this.load=function(b){var c=null;if("undefined"!==typeof b)a._iO=q(b,a.options),a.instanceOptions=a._iO;else if(b=a.options,a._iO=b,a.instanceOptions=a._iO,m&&m!==a.url)a._iO.url=a.url,a.url=null;if(!a._iO.url)a._iO.url=a.url;a._iO.url=ba(a._iO.url);if(a._iO.url===a.url&&0!==a.readyState&&
-2!==a.readyState)return 3===a.readyState&&a._iO.onload&&a._iO.onload.apply(a,[!!a.duration]),a;b=a._iO;m=a.url;a.loaded=!1;a.readyState=1;a.playState=0;if(ca(b)){if(c=a._setup_html5(b),!c._called_load)a._html5_canplay=!1,a._a.autobuffer="auto",a._a.preload="auto",c.load(),c._called_load=!0,b.autoPlay&&a.play()}else try{a.isHTML5=!1,a._iO=Z(Y(b)),b=a._iO,8===i?h._load(a.sID,b.url,b.stream,b.autoPlay,b.whileloading?1:0,b.loops||1,b.usePolicyFile):h._load(a.sID,b.url,!!b.stream,!!b.autoPlay,b.loops||
-1,!!b.autoLoad,b.usePolicyFile)}catch(d){F({type:"SMSOUND_LOAD_JS_EXCEPTION",fatal:!0})}return a};this.unload=function(){0!==a.readyState&&(a.isHTML5?(g(),a._a&&(a._a.pause(),ta(a._a))):8===i?h._unload(a.sID,"about:blank"):h._unload(a.sID),e());return a};this.destruct=function(b){if(a.isHTML5){if(g(),a._a)a._a.pause(),ta(a._a),B||d(),a._a._t=null,a._a=null}else a._iO.onfailure=null,h._destroySound(a.sID);b||c.destroySound(a.sID,!0)};this.start=this.play=function(b,c){var d,c=void 0===c?!0:c;b||(b=
-{});a._iO=q(b,a._iO);a._iO=q(a._iO,a.options);a._iO.url=ba(a._iO.url);a.instanceOptions=a._iO;if(a._iO.serverURL&&!a.connected)return a.getAutoPlay()||a.setAutoPlay(!0),a;ca(a._iO)&&(a._setup_html5(a._iO),z());if(1===a.playState&&!a.paused&&(d=a._iO.multiShot,!d))return a;if(!a.loaded)if(0===a.readyState){if(!a.isHTML5)a._iO.autoPlay=!0;a.load(a._iO)}else if(2===a.readyState)return a;if(!a.isHTML5&&9===i&&0<a.position&&a.position===a.duration)b.position=0;if(a.paused&&a.position&&0<a.position)a.resume();
-else{a._iO=q(b,a._iO);if(null!==a._iO.from&&null!==a._iO.to&&0===a.instanceCount&&0===a.playState&&!a._iO.serverURL){d=function(){a._iO=q(b,a._iO);a.play(a._iO)};if(a.isHTML5&&!a._html5_canplay)return a.load({_oncanplay:d}),!1;if(!a.isHTML5&&!a.loaded&&(!a.readyState||2!==a.readyState))return a.load({onload:d}),!1;a._iO=p()}(!a.instanceCount||a._iO.multiShotEvents||!a.isHTML5&&8<i&&!a.getAutoPlay())&&a.instanceCount++;0===a.playState&&a._iO.onposition&&j(a);a.playState=1;a.paused=!1;a.position="undefined"!==
-typeof a._iO.position&&!isNaN(a._iO.position)?a._iO.position:0;if(!a.isHTML5)a._iO=Z(Y(a._iO));a._iO.onplay&&c&&(a._iO.onplay.apply(a),k=!0);a.setVolume(a._iO.volume,!0);a.setPan(a._iO.pan,!0);a.isHTML5?(z(),d=a._setup_html5(),a.setPosition(a._iO.position),d.play()):h._start(a.sID,a._iO.loops||1,9===i?a._iO.position:a._iO.position/1E3)}return a};this.stop=function(b){var c=a._iO;if(1===a.playState){a._onbufferchange(0);a._resetOnPosition(0);a.paused=!1;if(!a.isHTML5)a.playState=0;n();c.to&&a.clearOnPosition(c.to);
-if(a.isHTML5){if(a._a)b=a.position,a.setPosition(0),a.position=b,a._a.pause(),a.playState=0,a._onTimer(),g()}else h._stop(a.sID,b),c.serverURL&&a.unload();a.instanceCount=0;a._iO={};c.onstop&&c.onstop.apply(a)}return a};this.setAutoPlay=function(b){a._iO.autoPlay=b;a.isHTML5||(h._setAutoPlay(a.sID,b),b&&!a.instanceCount&&1===a.readyState&&a.instanceCount++)};this.getAutoPlay=function(){return a._iO.autoPlay};this.setPosition=function(b){void 0===b&&(b=0);var c=a.isHTML5?Math.max(b,0):Math.min(a.duration||
-a._iO.duration,Math.max(b,0));a.position=c;b=a.position/1E3;a._resetOnPosition(a.position);a._iO.position=c;if(a.isHTML5){if(a._a&&a._html5_canplay&&a._a.currentTime!==b)try{a._a.currentTime=b,(0===a.playState||a.paused)&&a._a.pause()}catch(d){}}else b=9===i?a.position:b,a.readyState&&2!==a.readyState&&h._setPosition(a.sID,b,a.paused||!a.playState);a.isHTML5&&a.paused&&a._onTimer(!0);return a};this.pause=function(b){if(a.paused||0===a.playState&&1!==a.readyState)return a;a.paused=!0;a.isHTML5?(a._setup_html5().pause(),
-g()):(b||void 0===b)&&h._pause(a.sID);a._iO.onpause&&a._iO.onpause.apply(a);return a};this.resume=function(){var b=a._iO;if(!a.paused)return a;a.paused=!1;a.playState=1;a.isHTML5?(a._setup_html5().play(),z()):(b.isMovieStar&&!b.serverURL&&a.setPosition(a.position),h._pause(a.sID));k&&b.onplay?(b.onplay.apply(a),k=!0):b.onresume&&b.onresume.apply(a);return a};this.togglePause=function(){if(0===a.playState)return a.play({position:9===i&&!a.isHTML5?a.position:a.position/1E3}),a;a.paused?a.resume():a.pause();
-return a};this.setPan=function(b,c){"undefined"===typeof b&&(b=0);"undefined"===typeof c&&(c=!1);a.isHTML5||h._setPan(a.sID,b);a._iO.pan=b;if(!c)a.pan=b,a.options.pan=b;return a};this.setVolume=function(b,d){"undefined"===typeof b&&(b=100);"undefined"===typeof d&&(d=!1);if(a.isHTML5){if(a._a)a._a.volume=Math.max(0,Math.min(1,b/100))}else h._setVolume(a.sID,c.muted&&!a.muted||a.muted?0:b);a._iO.volume=b;if(!d)a.volume=b,a.options.volume=b;return a};this.mute=function(){a.muted=!0;if(a.isHTML5){if(a._a)a._a.muted=
-!0}else h._setVolume(a.sID,0);return a};this.unmute=function(){a.muted=!1;var b="undefined"!==typeof a._iO.volume;if(a.isHTML5){if(a._a)a._a.muted=!1}else h._setVolume(a.sID,b?a._iO.volume:a.options.volume);return a};this.toggleMute=function(){return a.muted?a.unmute():a.mute()};this.onposition=this.onPosition=function(b,c,d){t.push({position:b,method:c,scope:"undefined"!==typeof d?d:a,fired:!1});return a};this.clearOnPosition=function(a,b){var c,a=parseInt(a,10);if(isNaN(a))return!1;for(c=0;c<t.length;c++)if(a===
-t[c].position&&(!b||b===t[c].method))t[c].fired&&l--,t.splice(c,1)};this._processOnPosition=function(){var b,c;b=t.length;if(!b||!a.playState||l>=b)return!1;for(;b--;)if(c=t[b],!c.fired&&a.position>=c.position)c.fired=!0,l++,c.method.apply(c.scope,[c.position]);return!0};this._resetOnPosition=function(a){var b,c;b=t.length;if(!b)return!1;for(;b--;)if(c=t[b],c.fired&&a<=c.position)c.fired=!1,l--;return!0};p=function(){var b=a._iO,c=b.from,d=b.to,e,f;f=function(){a.clearOnPosition(d,f);a.stop()};e=
-function(){if(null!==d&&!isNaN(d))a.onPosition(d,f)};if(null!==c&&!isNaN(c))b.position=c,b.multiShot=!1,e();return b};j=function(){var b=a._iO.onposition;if(b)for(var c in b)if(b.hasOwnProperty(c))a.onPosition(parseInt(c,10),b[c])};n=function(){var b=a._iO.onposition;if(b)for(var c in b)b.hasOwnProperty(c)&&a.clearOnPosition(parseInt(c,10))};z=function(){a.isHTML5&&Fa(a)};g=function(){a.isHTML5&&Ga(a)};e=function(){t=[];l=0;k=!1;a._hasTimer=null;a._a=null;a._html5_canplay=!1;a.bytesLoaded=null;a.bytesTotal=
-null;a.duration=a._iO&&a._iO.duration?a._iO.duration:null;a.durationEstimate=null;a.eqData=[];a.eqData.left=[];a.eqData.right=[];a.failures=0;a.isBuffering=!1;a.instanceOptions={};a.instanceCount=0;a.loaded=!1;a.metadata={};a.readyState=0;a.muted=!1;a.paused=!1;a.peakData={left:0,right:0};a.waveformData={left:[],right:[]};a.playState=0;a.position=null};e();this._onTimer=function(b){var c,d=!1,e={};if(a._hasTimer||b){if(a._a&&(b||(0<a.playState||1===a.readyState)&&!a.paused)){c=a._get_html5_duration();
-if(c!==r)r=c,a.duration=c,d=!0;a.durationEstimate=a.duration;c=1E3*a._a.currentTime||0;c!==s&&(s=c,d=!0);(d||b)&&a._whileplaying(c,e,e,e,e);return d}return!1}};this._get_html5_duration=function(){var b=a._iO,c=a._a?1E3*a._a.duration:b?b.duration:void 0;return c&&!isNaN(c)&&Infinity!==c?c:b?b.duration:null};this._setup_html5=function(b){var b=q(a._iO,b),d=decodeURI,g=B?c._global_a:a._a,h=d(b.url),z=g&&g._t?g._t.instanceOptions:null;if(g){if(g._t&&(!B&&h===d(m)||B&&z.url===b.url&&(!m||m===z.url)))return g;
-B&&g._t&&g._t.playState&&b.url!==z.url&&g._t.stop();e();g.src=b.url;m=a.url=b.url;g._called_load=!1}else{g=new Audio(b.url);g._called_load=!1;if(Ta)g._called_load=!0;if(B)c._global_a=g}a.isHTML5=!0;a._a=g;g._t=a;f();g.loop=1<b.loops?"loop":"";b.autoLoad||b.autoPlay?a.load():(g.autobuffer=!1,g.preload="none");g.loop=1<b.loops?"loop":"";return g};f=function(){if(a._a._added_events)return!1;var b;a._a._added_events=!0;for(b in u)u.hasOwnProperty(b)&&a._a&&a._a.addEventListener(b,u[b],!1);return!0};d=
-function(){var b;a._a._added_events=!1;for(b in u)u.hasOwnProperty(b)&&a._a&&a._a.removeEventListener(b,u[b],!1)};this._onload=function(b){b=!!b;a.loaded=b;a.readyState=b?3:2;a._onbufferchange(0);a._iO.onload&&a._iO.onload.apply(a,[b]);return!0};this._onbufferchange=function(b){if(0===a.playState||b&&a.isBuffering||!b&&!a.isBuffering)return!1;a.isBuffering=1===b;a._iO.onbufferchange&&a._iO.onbufferchange.apply(a);return!0};this._onsuspend=function(){a._iO.onsuspend&&a._iO.onsuspend.apply(a);return!0};
-this._onfailure=function(b,c,d){a.failures++;if(a._iO.onfailure&&1===a.failures)a._iO.onfailure(a,b,c,d)};this._onfinish=function(){var b=a._iO.onfinish;a._onbufferchange(0);a._resetOnPosition(0);if(a.instanceCount){a.instanceCount--;if(!a.instanceCount)n(),a.playState=0,a.paused=!1,a.instanceCount=0,a.instanceOptions={},a._iO={},g();(!a.instanceCount||a._iO.multiShotEvents)&&b&&b.apply(a)}};this._whileloading=function(b,c,d,e){var f=a._iO;a.bytesLoaded=b;a.bytesTotal=c;a.duration=Math.floor(d);a.bufferLength=
-e;if(f.isMovieStar)a.durationEstimate=a.duration;else if(a.durationEstimate=f.duration?a.duration>f.duration?a.duration:f.duration:parseInt(a.bytesTotal/a.bytesLoaded*a.duration,10),void 0===a.durationEstimate)a.durationEstimate=a.duration;3!==a.readyState&&f.whileloading&&f.whileloading.apply(a)};this._whileplaying=function(b,c,d,e,f){var g=a._iO;if(isNaN(b)||null===b)return!1;a.position=b;a._processOnPosition();if(!a.isHTML5&&8<i){if(g.usePeakData&&"undefined"!==typeof c&&c)a.peakData={left:c.leftPeak,
-right:c.rightPeak};if(g.useWaveformData&&"undefined"!==typeof d&&d)a.waveformData={left:d.split(","),right:e.split(",")};if(g.useEQData&&"undefined"!==typeof f&&f&&f.leftEQ&&(b=f.leftEQ.split(","),a.eqData=b,a.eqData.left=b,"undefined"!==typeof f.rightEQ&&f.rightEQ))a.eqData.right=f.rightEQ.split(",")}1===a.playState&&(!a.isHTML5&&8===i&&!a.position&&a.isBuffering&&a._onbufferchange(0),g.whileplaying&&g.whileplaying.apply(a));return!0};this._onmetadata=function(b,c){var d={},e,f;for(e=0,f=b.length;e<
-f;e++)d[b[e]]=c[e];a.metadata=d;a._iO.onmetadata&&a._iO.onmetadata.apply(a)};this._onid3=function(b,c){var d=[],e,f;for(e=0,f=b.length;e<f;e++)d[b[e]]=c[e];a.id3=q(a.id3,d);a._iO.onid3&&a._iO.onid3.apply(a)};this._onconnect=function(b){b=1===b;if(a.connected=b)a.failures=0,o(a.sID)&&(a.getAutoPlay()?a.play(void 0,a.getAutoPlay()):a._iO.autoLoad&&a.load()),a._iO.onconnect&&a._iO.onconnect.apply(a,[b])};this._ondataerror=function(){0<a.playState&&a._iO.ondataerror&&a._iO.ondataerror.apply(a)}};na=function(){return k.body||
-k._docElement||k.getElementsByTagName("div")[0]};S=function(b){return k.getElementById(b)};q=function(b,a){var e={},f,d;for(f in b)b.hasOwnProperty(f)&&(e[f]=b[f]);f="undefined"===typeof a?c.defaultOptions:a;for(d in f)f.hasOwnProperty(d)&&"undefined"===typeof e[d]&&(e[d]=f[d]);return e};n=function(){function b(a){var a=Ra.call(a),b=a.length;c?(a[1]="on"+a[1],3<b&&a.pop()):3===b&&a.push(!1);return a}function a(a,b){var h=a.shift(),k=[f[b]];if(c)h[k](a[0],a[1]);else h[k].apply(h,a)}var c=j.attachEvent,
-f={add:c?"attachEvent":"addEventListener",remove:c?"detachEvent":"removeEventListener"};return{add:function(){a(b(arguments),"add")},remove:function(){a(b(arguments),"remove")}}}();u={abort:l(function(){}),canplay:l(function(){var b=this._t;if(b._html5_canplay)return!0;b._html5_canplay=!0;b._onbufferchange(0);var a=!isNaN(b.position)?b.position/1E3:null;if(b.position&&this.currentTime!==a)try{this.currentTime=a}catch(c){}b._iO._oncanplay&&b._iO._oncanplay()}),load:l(function(){var b=this._t;b.loaded||
-(b._onbufferchange(0),b._whileloading(b.bytesTotal,b.bytesTotal,b._get_html5_duration()),b._onload(!0))}),emptied:l(function(){}),ended:l(function(){this._t._onfinish()}),error:l(function(){this._t._onload(!1)}),loadeddata:l(function(){var b=this._t,a=b.bytesTotal||1;if(!b._loaded&&!Q)b.duration=b._get_html5_duration(),b._whileloading(a,a,b._get_html5_duration()),b._onload(!0)}),loadedmetadata:l(function(){}),loadstart:l(function(){this._t._onbufferchange(1)}),play:l(function(){this._t._onbufferchange(0)}),
-playing:l(function(){this._t._onbufferchange(0)}),progress:l(function(b){var a=this._t;if(a.loaded)return!1;var c,f=0,d=b.target.buffered;c=b.loaded||0;var g=b.total||1;if(d&&d.length){for(c=d.length;c--;)f=d.end(c)-d.start(c);c=f/b.target.duration}isNaN(c)||(a._onbufferchange(0),a._whileloading(c,g,a._get_html5_duration()),c&&g&&c===g&&u.load.call(this,b))}),ratechange:l(function(){}),suspend:l(function(b){var a=this._t;u.progress.call(this,b);a._onsuspend()}),stalled:l(function(){}),timeupdate:l(function(){this._t._onTimer()}),
-waiting:l(function(){this._t._onbufferchange(1)})};ca=function(b){return!b.serverURL&&(b.type?P({type:b.type}):P({url:b.url})||c.html5Only)};ta=function(b){if(b)b.src=Sa?"":"about:blank"};P=function(b){function a(a){return c.preferFlash&&r&&!c.ignoreFlash&&"undefined"!==typeof c.flash[a]&&c.flash[a]}if(!c.useHTML5Audio||!c.hasHTML5)return!1;var e=b.url||null,b=b.type||null,f=c.audioFormats,d;if(b&&"undefined"!==c.html5[b])return c.html5[b]&&!a(b);if(!x){x=[];for(d in f)f.hasOwnProperty(d)&&(x.push(d),
-f[d].related&&(x=x.concat(f[d].related)));x=RegExp("\\.("+x.join("|")+")(\\?.*)?$","i")}d=e?e.toLowerCase().match(x):null;if(!d||!d.length)if(b)e=b.indexOf(";"),d=(-1!==e?b.substr(0,e):b).substr(6);else return!1;else d=d[1];if(d&&"undefined"!==typeof c.html5[d])return c.html5[d]&&!a(d);b="audio/"+d;e=c.html5.canPlayType({type:b});return(c.html5[d]=e)&&c.html5[b]&&!a(b)};Ja=function(){function b(b){var d,e,f=!1;if(!a||"function"!==typeof a.canPlayType)return!1;if(b instanceof Array){for(d=0,e=b.length;d<
-e&&!f;d++)if(c.html5[b[d]]||a.canPlayType(b[d]).match(c.html5Test))f=!0,c.html5[b[d]]=!0,c.flash[b[d]]=!(!c.preferFlash||!r||!b[d].match(Na));return f}b=a&&"function"===typeof a.canPlayType?a.canPlayType(b):!1;return!(!b||!b.match(c.html5Test))}if(!c.useHTML5Audio||"undefined"===typeof Audio)return!1;var a="undefined"!==typeof Audio?Va?new Audio(null):new Audio:null,e,f={},d,g;d=c.audioFormats;for(e in d)if(d.hasOwnProperty(e)&&(f[e]=b(d[e].type),f["audio/"+e]=f[e],c.flash[e]=c.preferFlash&&!c.ignoreFlash&&
-e.match(Na)?!0:!1,d[e]&&d[e].related))for(g=d[e].related.length;g--;)f["audio/"+d[e].related[g]]=f[e],c.html5[d[e].related[g]]=f[e],c.flash[d[e].related[g]]=f[e];f.canPlayType=a?b:null;c.html5=q(c.html5,f);return!0};G=function(){};Y=function(b){if(8===i&&1<b.loops&&b.stream)b.stream=!1;return b};Z=function(b){if(b&&!b.usePolicyFile&&(b.onid3||b.usePeakData||b.useWaveformData||b.useEQData))b.usePolicyFile=!0;return b};ra=function(){};ha=function(){return!1};Da=function(b){for(var a in b)b.hasOwnProperty(a)&&
-"function"===typeof b[a]&&(b[a]=ha)};X=function(b){"undefined"===typeof b&&(b=!1);(w||b)&&c.disable(b)};Ea=function(b){var a=null;if(b)if(b.match(/\.swf(\?.*)?$/i)){if(a=b.substr(b.toLowerCase().lastIndexOf(".swf?")+4))return b}else b.lastIndexOf("/")!==b.length-1&&(b+="/");b=(b&&-1!==b.lastIndexOf("/")?b.substr(0,b.lastIndexOf("/")+1):"./")+c.movieURL;c.noSWFCache&&(b+="?ts="+(new Date).getTime());return b};ka=function(){i=parseInt(c.flashVersion,10);if(8!==i&&9!==i)c.flashVersion=i=8;var b=c.debugMode||
-c.debugFlash?"_debug.swf":".swf";if(c.useHTML5Audio&&!c.html5Only&&c.audioFormats.mp4.required&&9>i)c.flashVersion=i=9;c.version=c.versionNumber+(c.html5Only?" (HTML5-only mode)":9===i?" (AS3/Flash 9)":" (AS2/Flash 8)");8<i?(c.defaultOptions=q(c.defaultOptions,c.flash9Options),c.features.buffering=!0,c.defaultOptions=q(c.defaultOptions,c.movieStarOptions),c.filePatterns.flash9=RegExp("\\.(mp3|"+Qa.join("|")+")(\\?.*)?$","i"),c.features.movieStar=!0):c.features.movieStar=!1;c.filePattern=c.filePatterns[8!==
-i?"flash9":"flash8"];c.movieURL=(8===i?"soundmanager2.swf":"soundmanager2_flash9.swf").replace(".swf",b);c.features.peakData=c.features.waveformData=c.features.eqData=8<i};Ca=function(b,a){if(!h)return!1;h._setPolling(b,a)};oa=function(){if(c.debugURLParam.test(ga))c.debugMode=!0};o=this.getSoundById;H=function(){var b=[];c.debugMode&&b.push("sm2_debug");c.debugFlash&&b.push("flash_debug");c.useHighPerformance&&b.push("high_performance");return b.join(" ")};qa=function(){G("fbHandler");var b=c.getMoviePercent(),
-a={type:"FLASHBLOCK"};if(c.html5Only)return!1;if(c.ok()){if(c.oMC)c.oMC.className=[H(),"movieContainer","swf_loaded"+(c.didFlashBlock?" swf_unblocked":"")].join(" ")}else{if(s)c.oMC.className=H()+" movieContainer "+(null===b?"swf_timedout":"swf_error");c.didFlashBlock=!0;C({type:"ontimeout",ignoreInit:!0,error:a});F(a)}};ja=function(b,a,c){"undefined"===typeof v[b]&&(v[b]=[]);v[b].push({method:a,scope:c||null,fired:!1})};C=function(b){b||(b={type:"onready"});if(!m&&b&&!b.ignoreInit||"ontimeout"===
-b.type&&c.ok())return!1;var a={success:b&&b.ignoreInit?c.ok():!w},e=b&&b.type?v[b.type]||[]:[],f=[],d,a=[a],g=s&&c.useFlashBlock&&!c.ok();if(b.error)a[0].error=b.error;for(b=0,d=e.length;b<d;b++)!0!==e[b].fired&&f.push(e[b]);if(f.length)for(b=0,d=f.length;b<d;b++)if(f[b].scope?f[b].method.apply(f[b].scope,a):f[b].method.apply(this,a),!g)f[b].fired=!0;return!0};D=function(){j.setTimeout(function(){c.useFlashBlock&&qa();C();c.onload instanceof Function&&c.onload.apply(j);c.waitForWindowLoad&&n.add(j,
-"load",D)},1)};da=function(){if(void 0!==r)return r;var b=!1,a=navigator,c=a.plugins,f,d=j.ActiveXObject;if(c&&c.length)(a=a.mimeTypes)&&a["application/x-shockwave-flash"]&&a["application/x-shockwave-flash"].enabledPlugin&&a["application/x-shockwave-flash"].enabledPlugin.description&&(b=!0);else if("undefined"!==typeof d){try{f=new d("ShockwaveFlash.ShockwaveFlash")}catch(g){}b=!!f}return r=b};Ia=function(){var b,a;if(va&&p.match(/os (1|2|3_0|3_1)/i)){c.hasHTML5=!1;c.html5Only=!0;if(c.oMC)c.oMC.style.display=
-"none";return!1}if(c.useHTML5Audio){if(!c.html5||!c.html5.canPlayType)return c.hasHTML5=!1,!0;c.hasHTML5=!0;if(xa&&da())return!0}else return!0;for(a in c.audioFormats)if(c.audioFormats.hasOwnProperty(a)&&(c.audioFormats[a].required&&!c.html5.canPlayType(c.audioFormats[a].type)||c.flash[a]||c.flash[c.audioFormats[a].type]))b=!0;c.ignoreFlash&&(b=!1);c.html5Only=c.hasHTML5&&c.useHTML5Audio&&!b;return!c.html5Only};ba=function(b){var a,e,f=0;if(b instanceof Array){for(a=0,e=b.length;a<e;a++)if(b[a]instanceof
-Object){if(c.canPlayMIME(b[a].type)){f=a;break}}else if(c.canPlayURL(b[a])){f=a;break}if(b[f].url)b[f]=b[f].url;return b[f]}return b};Fa=function(b){if(!b._hasTimer)b._hasTimer=!0,!wa&&c.html5PollingInterval&&(null===O&&0===aa&&(O=J.setInterval(Ha,c.html5PollingInterval)),aa++)};Ga=function(b){if(b._hasTimer)b._hasTimer=!1,!wa&&c.html5PollingInterval&&aa--};Ha=function(){var b;if(null!==O&&!aa)return J.clearInterval(O),O=null,!1;for(b=c.soundIDs.length;b--;)c.sounds[c.soundIDs[b]].isHTML5&&c.sounds[c.soundIDs[b]]._hasTimer&&
-c.sounds[c.soundIDs[b]]._onTimer()};F=function(b){b="undefined"!==typeof b?b:{};c.onerror instanceof Function&&c.onerror.apply(j,[{type:"undefined"!==typeof b.type?b.type:null}]);"undefined"!==typeof b.fatal&&b.fatal&&c.disable()};Ka=function(){if(!xa||!da())return!1;var b=c.audioFormats,a,e;for(e in b)if(b.hasOwnProperty(e)&&("mp3"===e||"mp4"===e))if(c.html5[e]=!1,b[e]&&b[e].related)for(a=b[e].related.length;a--;)c.html5[b[e].related[a]]=!1};this._setSandboxType=function(){};this._externalInterfaceOK=
-function(){if(c.swfLoaded)return!1;(new Date).getTime();c.swfLoaded=!0;I=!1;xa&&Ka();y?setTimeout(T,100):T()};W=function(b,a){function e(a,b){return'<param name="'+a+'" value="'+b+'" />'}if(K&&L)return!1;if(c.html5Only)return ka(),c.oMC=S(c.movieID),T(),L=K=!0,!1;var f=a||c.url,d=c.altURL||f,g;g=na();var h,j,i=H(),l,m=null,m=(m=k.getElementsByTagName("html")[0])&&m.dir&&m.dir.match(/rtl/i),b="undefined"===typeof b?c.id:b;ka();c.url=Ea(za?f:d);a=c.url;c.wmode=!c.wmode&&c.useHighPerformance?"transparent":
-c.wmode;if(null!==c.wmode&&(p.match(/msie 8/i)||!y&&!c.useHighPerformance)&&navigator.platform.match(/win32|win64/i))c.wmode=null;g={name:b,id:b,src:a,width:"auto",height:"auto",quality:"high",allowScriptAccess:c.allowScriptAccess,bgcolor:c.bgColor,pluginspage:Oa+"www.macromedia.com/go/getflashplayer",title:"JS/Flash audio component (SoundManager 2)",type:"application/x-shockwave-flash",wmode:c.wmode,hasPriority:"true"};if(c.debugFlash)g.FlashVars="debug=1";c.wmode||delete g.wmode;if(y)f=k.createElement("div"),
-j=['<object id="'+b+'" data="'+a+'" type="'+g.type+'" title="'+g.title+'" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="'+Oa+'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" width="'+g.width+'" height="'+g.height+'">',e("movie",a),e("AllowScriptAccess",c.allowScriptAccess),e("quality",g.quality),c.wmode?e("wmode",c.wmode):"",e("bgcolor",c.bgColor),e("hasPriority","true"),c.debugFlash?e("FlashVars",g.FlashVars):"","</object>"].join("");else for(h in f=
-k.createElement("embed"),g)g.hasOwnProperty(h)&&f.setAttribute(h,g[h]);oa();i=H();if(g=na())if(c.oMC=S(c.movieID)||k.createElement("div"),c.oMC.id){l=c.oMC.className;c.oMC.className=(l?l+" ":"movieContainer")+(i?" "+i:"");c.oMC.appendChild(f);if(y)h=c.oMC.appendChild(k.createElement("div")),h.className="sm2-object-box",h.innerHTML=j;L=!0}else{c.oMC.id=c.movieID;c.oMC.className="movieContainer "+i;h=i=null;if(!c.useFlashBlock)if(c.useHighPerformance)i={position:"fixed",width:"8px",height:"8px",bottom:"0px",
-left:"0px",overflow:"hidden"};else if(i={position:"absolute",width:"6px",height:"6px",top:"-9999px",left:"-9999px"},m)i.left=Math.abs(parseInt(i.left,10))+"px";if(Ua)c.oMC.style.zIndex=1E4;if(!c.debugFlash)for(l in i)i.hasOwnProperty(l)&&(c.oMC.style[l]=i[l]);try{y||c.oMC.appendChild(f);g.appendChild(c.oMC);if(y)h=c.oMC.appendChild(k.createElement("div")),h.className="sm2-object-box",h.innerHTML=j;L=!0}catch(n){throw Error(G("domError")+" \n"+n.toString());}}return K=!0};V=function(){if(c.html5Only)return W(),
-!1;if(h)return!1;h=c.getMovie(c.id);if(!h)N?(y?c.oMC.innerHTML=pa:c.oMC.appendChild(N),N=null,K=!0):W(c.id,c.url),h=c.getMovie(c.id);c.oninitmovie instanceof Function&&setTimeout(c.oninitmovie,1);return!0};U=function(){setTimeout(Ba,1E3)};Ba=function(){if($)return!1;$=!0;n.remove(j,"load",U);if(I&&!ya)return!1;var b;m||(b=c.getMoviePercent());setTimeout(function(){b=c.getMoviePercent();!m&&Ma&&(null===b?c.useFlashBlock||0===c.flashLoadTimeout?c.useFlashBlock&&qa():X(!0):0!==c.flashLoadTimeout&&X(!0))},
-c.flashLoadTimeout)};A=function(){function b(){n.remove(j,"focus",A);n.remove(j,"load",A)}if(ya||!I)return b(),!0;ya=Ma=!0;Q&&I&&n.remove(j,"mousemove",A);$=!1;b();return!0};La=function(){var b,a=[];if(c.useHTML5Audio&&c.hasHTML5)for(b in c.audioFormats)c.audioFormats.hasOwnProperty(b)&&a.push(b+": "+c.html5[b]+(!c.html5[b]&&r&&c.flash[b]?" (using flash)":c.preferFlash&&c.flash[b]&&r?" (preferring flash)":!c.html5[b]?" ("+(c.audioFormats[b].required?"required, ":"")+"and no flash support)":""))};
-M=function(b){if(m)return!1;if(c.html5Only)return m=!0,D(),!0;var a;if(!c.useFlashBlock||!c.flashLoadTimeout||c.getMoviePercent())m=!0,w&&(a={type:!r&&s?"NO_FLASH":"INIT_TIMEOUT"});if(w||b){if(c.useFlashBlock&&c.oMC)c.oMC.className=H()+" "+(null===c.getMoviePercent()?"swf_timedout":"swf_error");C({type:"ontimeout",error:a});F(a);return!1}if(c.waitForWindowLoad&&!ia)return n.add(j,"load",D),!1;D();return!0};T=function(){if(m)return!1;if(c.html5Only){if(!m)n.remove(j,"load",c.beginDelayedInit),c.enabled=
-!0,M();return!0}V();try{h._externalInterfaceTest(!1),Ca(!0,c.flashPollingInterval||(c.useHighPerformance?10:50)),c.debugMode||h._disableDebug(),c.enabled=!0,c.html5Only||n.add(j,"unload",ha)}catch(b){return F({type:"JS_TO_FLASH_EXCEPTION",fatal:!0}),X(!0),M(),!1}M();n.remove(j,"load",c.beginDelayedInit);return!0};E=function(){if(ma)return!1;ma=!0;oa();if(!r&&c.hasHTML5)c.useHTML5Audio=!0,c.preferFlash=!1;Ja();c.html5.usingFlash=Ia();s=c.html5.usingFlash;La();if(!r&&s)c.flashLoadTimeout=1;k.removeEventListener&&
-k.removeEventListener("DOMContentLoaded",E,!1);V();return!0};ua=function(){"complete"===k.readyState&&(E(),k.detachEvent("onreadystatechange",ua));return!0};la=function(){ia=!0;n.remove(j,"load",la)};da();n.add(j,"focus",A);n.add(j,"load",A);n.add(j,"load",U);n.add(j,"load",la);Q&&I&&n.add(j,"mousemove",A);k.addEventListener?k.addEventListener("DOMContentLoaded",E,!1):k.attachEvent?k.attachEvent("onreadystatechange",ua):F({type:"NO_DOM2_EVENTS",fatal:!0});"complete"===k.readyState&&setTimeout(E,100)}
-var ea=null;if("undefined"===typeof SM2_DEFER||!SM2_DEFER)ea=new R;J.SoundManager=R;J.soundManager=ea})(window);
\ No newline at end of file
diff --git a/inc/SoundManager2/script/soundmanager2-nodebug.js b/inc/SoundManager2/script/soundmanager2-nodebug.js
deleted file mode 100755
index ba81243..0000000
--- a/inc/SoundManager2/script/soundmanager2-nodebug.js
+++ /dev/null
@@ -1,2377 +0,0 @@
-/** @license
- *
- * SoundManager 2: JavaScript Sound for the Web
- * ----------------------------------------------
- * http://schillmania.com/projects/soundmanager2/
- *
- * Copyright (c) 2007, Scott Schiller. All rights reserved.
- * Code provided under the BSD License:
- * http://schillmania.com/projects/soundmanager2/license.txt
- *
- * V2.97a.20111220
- */
-
-/*global window, SM2_DEFER, sm2Debugger, console, document, navigator, setTimeout, setInterval, clearInterval, Audio */
-/* jslint regexp: true, sloppy: true, white: true, nomen: true, plusplus: true */
-
-(function(window) {
-var soundManager = null;
-function SoundManager(smURL, smID) {
-  this.flashVersion = 8;
-  this.debugMode = false;
-  this.debugFlash = false;
-  this.useConsole = true;
-  this.consoleOnly = true;
-  this.waitForWindowLoad = false;
-  this.bgColor = '#ffffff';
-  this.useHighPerformance = false;
-  this.flashPollingInterval = null;
-  this.html5PollingInterval = null;
-  this.flashLoadTimeout = 1000;
-  this.wmode = null;
-  this.allowScriptAccess = 'always';
-  this.useFlashBlock = false;
-  this.useHTML5Audio = true;
-  this.html5Test = /^(probably|maybe)$/i;
-  this.preferFlash = true;
-  this.noSWFCache = false;
-  this.audioFormats = {
-    'mp3': {
-      'type': ['audio/mpeg; codecs="mp3"', 'audio/mpeg', 'audio/mp3', 'audio/MPA', 'audio/mpa-robust'],
-      'required': true
-    },
-    'mp4': {
-      'related': ['aac','m4a'],
-      'type': ['audio/mp4; codecs="mp4a.40.2"', 'audio/aac', 'audio/x-m4a', 'audio/MP4A-LATM', 'audio/mpeg4-generic'],
-      'required': false
-    },
-    'ogg': {
-      'type': ['audio/ogg; codecs=vorbis'],
-      'required': false
-    },
-    'wav': {
-      'type': ['audio/wav; codecs="1"', 'audio/wav', 'audio/wave', 'audio/x-wav'],
-      'required': false
-    }
-  };
-  this.defaultOptions = {
-    'autoLoad': false,
-    'autoPlay': false,
-    'from': null,
-    'loops': 1,
-    'onid3': null,
-    'onload': null,
-    'whileloading': null,
-    'onplay': null,
-    'onpause': null,
-    'onresume': null,
-    'whileplaying': null,
-    'onposition': null,
-    'onstop': null,
-    'onfailure': null,
-    'onfinish': null,
-    'multiShot': true,
-    'multiShotEvents': false,
-    'position': null,
-    'pan': 0,
-    'stream': true,
-    'to': null,
-    'type': null,
-    'usePolicyFile': false,
-    'volume': 100
-  };
-  this.flash9Options = {
-    'isMovieStar': null,
-    'usePeakData': false,
-    'useWaveformData': false,
-    'useEQData': false,
-    'onbufferchange': null,
-    'ondataerror': null
-  };
-  this.movieStarOptions = {
-    'bufferTime': 3,
-    'serverURL': null,
-    'onconnect': null,
-    'duration': null
-  };
-  this.movieID = 'sm2-container';
-  this.id = (smID || 'sm2movie');
-  this.debugID = 'soundmanager-debug';
-  this.debugURLParam = /([#?&])debug=1/i;
-  this.versionNumber = 'V2.97a.20111220';
-  this.version = null;
-  this.movieURL = null;
-  this.url = (smURL || null);
-  this.altURL = null;
-  this.swfLoaded = false;
-  this.enabled = false;
-  this.oMC = null;
-  this.sounds = {};
-  this.soundIDs = [];
-  this.muted = false;
-  this.didFlashBlock = false;
-  this.filePattern = null;
-  this.filePatterns = {
-    'flash8': /\.mp3(\?.*)?$/i,
-    'flash9': /\.mp3(\?.*)?$/i
-  };
-  this.features = {
-    'buffering': false,
-    'peakData': false,
-    'waveformData': false,
-    'eqData': false,
-    'movieStar': false
-  };
-  this.sandbox = {
-  };
-  this.hasHTML5 = (function() {
-    try {
-      return (typeof Audio !== 'undefined' && typeof new Audio().canPlayType !== 'undefined');
-    } catch(e) {
-      return false;
-    }
-  }());
-  this.html5 = {
-    'usingFlash': null
-  };
-  this.flash = {};
-  this.html5Only = false;
-  this.ignoreFlash = false;
-  var SMSound,
-  _s = this, _flash = null, _sm = 'soundManager', _smc = _sm+'::', _h5 = 'HTML5::', _id, _ua = navigator.userAgent, _win = window, _wl = _win.location.href.toString(), _doc = document, _doNothing, _init, _fV, _on_queue = [], _debugOpen = true, _debugTS, _didAppend = false, _appendSuccess = false, _didInit = false, _disabled = false, _windowLoaded = false, _wDS, _wdCount = 0, _initComplete, _mixin, _addOnEvent, _processOnEvents, _initUserOnload, _delayWaitForEI, _waitForEI, _setVersionInfo, _handleFocus, _strings, _initMovie, _domContentLoaded, _winOnLoad, _didDCLoaded, _getDocument, _createMovie, _catchError, _setPolling, _initDebug, _debugLevels = ['log', 'info', 'warn', 'error'], _defaultFlashVersion = 8, _disableObject, _failSafely, _normalizeMovieURL, _oRemoved = null, _oRemovedHTML = null, _str, _flashBlockHandler, _getSWFCSS, _swfCSS, _toggleDebug, _loopFix, _policyFix, _complain, _idCheck, _waitingForEI = false, _initPending = false, _smTimer, _onTimer, _startTimer, _stopTimer, _timerExecute, _h5TimerCount = 0, _h5IntervalTimer = null, _parseURL,
-  _needsFlash = null, _featureCheck, _html5OK, _html5CanPlay, _html5Ext, _html5Unload, _domContentLoadedIE, _testHTML5, _event, _slice = Array.prototype.slice, _useGlobalHTML5Audio = false, _hasFlash, _detectFlash, _badSafariFix, _html5_events, _showSupport,
-  _is_iDevice = _ua.match(/(ipad|iphone|ipod)/i), _is_firefox = _ua.match(/firefox/i), _is_android = _ua.match(/droid/i), _isIE = _ua.match(/msie/i), _isWebkit = _ua.match(/webkit/i), _isSafari = (_ua.match(/safari/i) && !_ua.match(/chrome/i)), _isOpera = (_ua.match(/opera/i)),
-  _likesHTML5 = (_ua.match(/(mobile|pre\/|xoom)/i) || _is_iDevice),
-  _isBadSafari = (!_wl.match(/usehtml5audio/i) && !_wl.match(/sm2\-ignorebadua/i) && _isSafari && !_ua.match(/silk/i) && _ua.match(/OS X 10_6_([3-7])/i)),
-  _hasConsole = (typeof console !== 'undefined' && typeof console.log !== 'undefined'), _isFocused = (typeof _doc.hasFocus !== 'undefined'?_doc.hasFocus():null), _tryInitOnFocus = (_isSafari && typeof _doc.hasFocus === 'undefined'), _okToDisable = !_tryInitOnFocus, _flashMIME = /(mp3|mp4|mpa)/i,
-  _emptyURL = 'about:blank',
-  _overHTTP = (_doc.location?_doc.location.protocol.match(/http/i):null),
-  _http = (!_overHTTP ? 'http:/'+'/' : ''),
-  _netStreamMimeTypes = /^\s*audio\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4||m4v|m4a|mp4v|3gp|3g2)\s*(?:$|;)/i,
-  _netStreamTypes = ['mpeg4', 'aac', 'flv', 'mov', 'mp4', 'm4v', 'f4v', 'm4a', 'mp4v', '3gp', '3g2'],
-  _netStreamPattern = new RegExp('\\.(' + _netStreamTypes.join('|') + ')(\\?.*)?$', 'i');
-  this.mimePattern = /^\s*audio\/(?:x-)?(?:mp(?:eg|3))\s*(?:$|;)/i;
-  this.useAltURL = !_overHTTP;
-  this._global_a = null;
-  _swfCSS = {
-    'swfBox': 'sm2-object-box',
-    'swfDefault': 'movieContainer',
-    'swfError': 'swf_error',
-    'swfTimedout': 'swf_timedout',
-    'swfLoaded': 'swf_loaded',
-    'swfUnblocked': 'swf_unblocked',
-    'sm2Debug': 'sm2_debug',
-    'highPerf': 'high_performance',
-    'flashDebug': 'flash_debug'
-  };
-  if (_likesHTML5) {
-    _s.useHTML5Audio = true;
-    _s.preferFlash = false;
-    if (_is_iDevice) {
-      _s.ignoreFlash = true;
-      _useGlobalHTML5Audio = true;
-    }
-  }
-  this.ok = function() {
-    return (_needsFlash?(_didInit && !_disabled):(_s.useHTML5Audio && _s.hasHTML5));
-  };
-  this.supported = this.ok;
-  this.getMovie = function(smID) {
-    return _id(smID) || _doc[smID] || _win[smID];
-  };
-  this.createSound = function(oOptions) {
-    var _cs, _cs_string,
-    thisOptions = null, oSound = null, _tO = null;
-    if (!_didInit || !_s.ok()) {
-      _complain(_cs_string);
-      return false;
-    }
-    if (arguments.length === 2) {
-      oOptions = {
-        'id': arguments[0],
-        'url': arguments[1]
-      };
-    }
-    thisOptions = _mixin(oOptions);
-    thisOptions.url = _parseURL(thisOptions.url);
-    _tO = thisOptions;
-    if (_idCheck(_tO.id, true)) {
-      return _s.sounds[_tO.id];
-    }
-    function make() {
-      thisOptions = _loopFix(thisOptions);
-      _s.sounds[_tO.id] = new SMSound(_tO);
-      _s.soundIDs.push(_tO.id);
-      return _s.sounds[_tO.id];
-    }
-    if (_html5OK(_tO)) {
-      oSound = make();
-      oSound._setup_html5(_tO);
-    } else {
-      if (_fV > 8) {
-        if (_tO.isMovieStar === null) {
-          _tO.isMovieStar = (_tO.serverURL || (_tO.type ? _tO.type.match(_netStreamMimeTypes) : false) || _tO.url.match(_netStreamPattern));
-        }
-        if (_tO.isMovieStar) {
-          if (_tO.usePeakData) {
-            _tO.usePeakData = false;
-          }
-        }
-      }
-      _tO = _policyFix(_tO, _cs);
-      oSound = make();
-      if (_fV === 8) {
-        _flash._createSound(_tO.id, _tO.loops||1, _tO.usePolicyFile);
-      } else {
-        _flash._createSound(_tO.id, _tO.url, _tO.usePeakData, _tO.useWaveformData, _tO.useEQData, _tO.isMovieStar, (_tO.isMovieStar?_tO.bufferTime:false), _tO.loops||1, _tO.serverURL, _tO.duration||null, _tO.autoPlay, true, _tO.autoLoad, _tO.usePolicyFile);
-        if (!_tO.serverURL) {
-          oSound.connected = true;
-          if (_tO.onconnect) {
-            _tO.onconnect.apply(oSound);
-          }
-        }
-      }
-      if (!_tO.serverURL && (_tO.autoLoad || _tO.autoPlay)) {
-        oSound.load(_tO);
-      }
-    }
-    if (!_tO.serverURL && _tO.autoPlay) {
-      oSound.play();
-    }
-    return oSound;
-  };
-  this.destroySound = function(sID, _bFromSound) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    var oS = _s.sounds[sID], i;
-    oS._iO = {};
-    oS.stop();
-    oS.unload();
-    for (i = 0; i < _s.soundIDs.length; i++) {
-      if (_s.soundIDs[i] === sID) {
-        _s.soundIDs.splice(i, 1);
-        break;
-      }
-    }
-    if (!_bFromSound) {
-      oS.destruct(true);
-    }
-    oS = null;
-    delete _s.sounds[sID];
-    return true;
-  };
-  this.load = function(sID, oOptions) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].load(oOptions);
-  };
-  this.unload = function(sID) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].unload();
-  };
-  this.onPosition = function(sID, nPosition, oMethod, oScope) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].onposition(nPosition, oMethod, oScope);
-  };
-  this.onposition = this.onPosition;
-  this.clearOnPosition = function(sID, nPosition, oMethod) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].clearOnPosition(nPosition, oMethod);
-  };
-  this.play = function(sID, oOptions) {
-    if (!_didInit || !_s.ok()) {
-      _complain(_sm+'.play(): ' + _str(!_didInit?'notReady':'notOK'));
-      return false;
-    }
-    if (!_idCheck(sID)) {
-      if (!(oOptions instanceof Object)) {
-        oOptions = {
-          url: oOptions
-        };
-      }
-      if (oOptions && oOptions.url) {
-        oOptions.id = sID;
-        return _s.createSound(oOptions).play();
-      } else {
-        return false;
-      }
-    }
-    return _s.sounds[sID].play(oOptions);
-  };
-  this.start = this.play;
-  this.setPosition = function(sID, nMsecOffset) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].setPosition(nMsecOffset);
-  };
-  this.stop = function(sID) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].stop();
-  };
-  this.stopAll = function() {
-    var oSound;
-    for (oSound in _s.sounds) {
-      if (_s.sounds.hasOwnProperty(oSound)) {
-        _s.sounds[oSound].stop();
-      }
-    }
-  };
-  this.pause = function(sID) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].pause();
-  };
-  this.pauseAll = function() {
-    var i;
-    for (i = _s.soundIDs.length; i--;) {
-      _s.sounds[_s.soundIDs[i]].pause();
-    }
-  };
-  this.resume = function(sID) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].resume();
-  };
-  this.resumeAll = function() {
-    var i;
-    for (i = _s.soundIDs.length; i--;) {
-      _s.sounds[_s.soundIDs[i]].resume();
-    }
-  };
-  this.togglePause = function(sID) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].togglePause();
-  };
-  this.setPan = function(sID, nPan) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].setPan(nPan);
-  };
-  this.setVolume = function(sID, nVol) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].setVolume(nVol);
-  };
-  this.mute = function(sID) {
-    var i = 0;
-    if (typeof sID !== 'string') {
-      sID = null;
-    }
-    if (!sID) {
-      for (i = _s.soundIDs.length; i--;) {
-        _s.sounds[_s.soundIDs[i]].mute();
-      }
-      _s.muted = true;
-    } else {
-      if (!_idCheck(sID)) {
-        return false;
-      }
-      return _s.sounds[sID].mute();
-    }
-    return true;
-  };
-  this.muteAll = function() {
-    _s.mute();
-  };
-  this.unmute = function(sID) {
-    var i;
-    if (typeof sID !== 'string') {
-      sID = null;
-    }
-    if (!sID) {
-      for (i = _s.soundIDs.length; i--;) {
-        _s.sounds[_s.soundIDs[i]].unmute();
-      }
-      _s.muted = false;
-    } else {
-      if (!_idCheck(sID)) {
-        return false;
-      }
-      return _s.sounds[sID].unmute();
-    }
-    return true;
-  };
-  this.unmuteAll = function() {
-    _s.unmute();
-  };
-  this.toggleMute = function(sID) {
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].toggleMute();
-  };
-  this.getMemoryUse = function() {
-    var ram = 0;
-    if (_flash && _fV !== 8) {
-      ram = parseInt(_flash._getMemoryUse(), 10);
-    }
-    return ram;
-  };
-  this.disable = function(bNoDisable) {
-    var i;
-    if (typeof bNoDisable === 'undefined') {
-      bNoDisable = false;
-    }
-    if (_disabled) {
-      return false;
-    }
-    _disabled = true;
-    for (i = _s.soundIDs.length; i--;) {
-      _disableObject(_s.sounds[_s.soundIDs[i]]);
-    }
-    _initComplete(bNoDisable);
-    _event.remove(_win, 'load', _initUserOnload);
-    return true;
-  };
-  this.canPlayMIME = function(sMIME) {
-    var result;
-    if (_s.hasHTML5) {
-      result = _html5CanPlay({type:sMIME});
-    }
-    if (!_needsFlash || result) {
-      return result;
-    } else {
-      return (sMIME ? !!((_fV > 8 ? sMIME.match(_netStreamMimeTypes) : null) || sMIME.match(_s.mimePattern)) : null);
-    }
-  };
-  this.canPlayURL = function(sURL) {
-    var result;
-    if (_s.hasHTML5) {
-      result = _html5CanPlay({url: sURL});
-    }
-    if (!_needsFlash || result) {
-      return result;
-    } else {
-      return (sURL ? !!(sURL.match(_s.filePattern)) : null);
-    }
-  };
-  this.canPlayLink = function(oLink) {
-    if (typeof oLink.type !== 'undefined' && oLink.type) {
-      if (_s.canPlayMIME(oLink.type)) {
-        return true;
-      }
-    }
-    return _s.canPlayURL(oLink.href);
-  };
-  this.getSoundById = function(sID, _suppressDebug) {
-    if (!sID) {
-      throw new Error(_sm+'.getSoundById(): sID is null/undefined');
-    }
-    var result = _s.sounds[sID];
-    return result;
-  };
-  this.onready = function(oMethod, oScope) {
-    var sType = 'onready';
-    if (oMethod && oMethod instanceof Function) {
-      if (!oScope) {
-        oScope = _win;
-      }
-      _addOnEvent(sType, oMethod, oScope);
-      _processOnEvents();
-      return true;
-    } else {
-      throw _str('needFunction', sType);
-    }
-  };
-  this.ontimeout = function(oMethod, oScope) {
-    var sType = 'ontimeout';
-    if (oMethod && oMethod instanceof Function) {
-      if (!oScope) {
-        oScope = _win;
-      }
-      _addOnEvent(sType, oMethod, oScope);
-      _processOnEvents({type:sType});
-      return true;
-    } else {
-      throw _str('needFunction', sType);
-    }
-  };
-  this._writeDebug = function(sText, sType, _bTimestamp) {
-    return true;
-  };
-  this._wD = this._writeDebug;
-  this._debug = function() {
-  };
-  this.reboot = function() {
-    var i, j;
-    for (i = _s.soundIDs.length; i--;) {
-      _s.sounds[_s.soundIDs[i]].destruct();
-    }
-    try {
-      if (_isIE) {
-        _oRemovedHTML = _flash.innerHTML;
-      }
-      _oRemoved = _flash.parentNode.removeChild(_flash);
-    } catch(e) {
-    }
-    _oRemovedHTML = _oRemoved = _needsFlash = null;
-    _s.enabled = _didDCLoaded = _didInit = _waitingForEI = _initPending = _didAppend = _appendSuccess = _disabled = _s.swfLoaded = false;
-    _s.soundIDs = _s.sounds = [];
-    _flash = null;
-    for (i in _on_queue) {
-      if (_on_queue.hasOwnProperty(i)) {
-        for (j = _on_queue[i].length; j--;) {
-          _on_queue[i][j].fired = false;
-        }
-      }
-    }
-    _win.setTimeout(_s.beginDelayedInit, 20);
-  };
-  this.getMoviePercent = function() {
-    return (_flash && typeof _flash.PercentLoaded !== 'undefined' ? _flash.PercentLoaded() : null);
-  };
-  this.beginDelayedInit = function() {
-    _windowLoaded = true;
-    _domContentLoaded();
-    setTimeout(function() {
-      if (_initPending) {
-        return false;
-      }
-      _createMovie();
-      _initMovie();
-      _initPending = true;
-      return true;
-    }, 20);
-    _delayWaitForEI();
-  };
-  this.destruct = function() {
-    _s.disable(true);
-  };
-  SMSound = function(oOptions) {
-    var _t = this, _resetProperties, _add_html5_events, _remove_html5_events, _stop_html5_timer, _start_html5_timer, _attachOnPosition, _onplay_called = false, _onPositionItems = [], _onPositionFired = 0, _detachOnPosition, _applyFromTo, _lastURL = null;
-    var _lastHTML5State = {
-      duration: null,
-      time: null
-    };
-    this.sID = oOptions.id;
-    this.url = oOptions.url;
-    this.options = _mixin(oOptions);
-    this.instanceOptions = this.options;
-    this._iO = this.instanceOptions;
-    this.pan = this.options.pan;
-    this.volume = this.options.volume;
-    this.isHTML5 = false;
-    this._a = null;
-    this.id3 = {};
-    this._debug = function() {
-    };
-    this.load = function(oOptions) {
-      var oS = null, _iO;
-      if (typeof oOptions !== 'undefined') {
-        _t._iO = _mixin(oOptions, _t.options);
-        _t.instanceOptions = _t._iO;
-      } else {
-        oOptions = _t.options;
-        _t._iO = oOptions;
-        _t.instanceOptions = _t._iO;
-        if (_lastURL && _lastURL !== _t.url) {
-          _t._iO.url = _t.url;
-          _t.url = null;
-        }
-      }
-      if (!_t._iO.url) {
-        _t._iO.url = _t.url;
-      }
-      _t._iO.url = _parseURL(_t._iO.url);
-      if (_t._iO.url === _t.url && _t.readyState !== 0 && _t.readyState !== 2) {
-        if (_t.readyState === 3 && _t._iO.onload) {
-          _t._iO.onload.apply(_t, [(!!_t.duration)]);
-        }
-        return _t;
-      }
-      _iO = _t._iO;
-      _lastURL = _t.url;
-      _t.loaded = false;
-      _t.readyState = 1;
-      _t.playState = 0;
-      if (_html5OK(_iO)) {
-        oS = _t._setup_html5(_iO);
-        if (!oS._called_load) {
-          _t._html5_canplay = false;
-          _t._a.autobuffer = 'auto';
-          _t._a.preload = 'auto';
-          oS.load();
-          oS._called_load = true;
-          if (_iO.autoPlay) {
-            _t.play();
-          }
-        } else {
-        }
-      } else {
-        try {
-          _t.isHTML5 = false;
-          _t._iO = _policyFix(_loopFix(_iO));
-          _iO = _t._iO;
-          if (_fV === 8) {
-            _flash._load(_t.sID, _iO.url, _iO.stream, _iO.autoPlay, (_iO.whileloading?1:0), _iO.loops||1, _iO.usePolicyFile);
-          } else {
-            _flash._load(_t.sID, _iO.url, !!(_iO.stream), !!(_iO.autoPlay), _iO.loops||1, !!(_iO.autoLoad), _iO.usePolicyFile);
-          }
-        } catch(e) {
-          _catchError({type:'SMSOUND_LOAD_JS_EXCEPTION', fatal:true});
-        }
-      }
-      return _t;
-    };
-    this.unload = function() {
-      if (_t.readyState !== 0) {
-        if (!_t.isHTML5) {
-          if (_fV === 8) {
-            _flash._unload(_t.sID, _emptyURL);
-          } else {
-            _flash._unload(_t.sID);
-          }
-        } else {
-          _stop_html5_timer();
-          if (_t._a) {
-            _t._a.pause();
-            _html5Unload(_t._a);
-          }
-        }
-        _resetProperties();
-      }
-      return _t;
-    };
-    this.destruct = function(_bFromSM) {
-      if (!_t.isHTML5) {
-        _t._iO.onfailure = null;
-        _flash._destroySound(_t.sID);
-      } else {
-        _stop_html5_timer();
-        if (_t._a) {
-          _t._a.pause();
-          _html5Unload(_t._a);
-          if (!_useGlobalHTML5Audio) {
-            _remove_html5_events();
-          }
-          _t._a._t = null;
-          _t._a = null;
-        }
-      }
-      if (!_bFromSM) {
-        _s.destroySound(_t.sID, true);
-      }
-    };
-    this.play = function(oOptions, _updatePlayState) {
-      var fN, allowMulti, a, onready;
-      _updatePlayState = _updatePlayState === undefined ? true : _updatePlayState;
-      if (!oOptions) {
-        oOptions = {};
-      }
-      _t._iO = _mixin(oOptions, _t._iO);
-      _t._iO = _mixin(_t._iO, _t.options);
-      _t._iO.url = _parseURL(_t._iO.url);
-      _t.instanceOptions = _t._iO;
-      if (_t._iO.serverURL && !_t.connected) {
-        if (!_t.getAutoPlay()) {
-          _t.setAutoPlay(true);
-        }
-        return _t;
-      }
-      if (_html5OK(_t._iO)) {
-        _t._setup_html5(_t._iO);
-        _start_html5_timer();
-      }
-      if (_t.playState === 1 && !_t.paused) {
-        allowMulti = _t._iO.multiShot;
-        if (!allowMulti) {
-          return _t;
-        } else {
-        }
-      }
-      if (!_t.loaded) {
-        if (_t.readyState === 0) {
-          if (!_t.isHTML5) {
-            _t._iO.autoPlay = true;
-          }
-          _t.load(_t._iO);
-        } else if (_t.readyState === 2) {
-          return _t;
-        } else {
-        }
-      } else {
-      }
-      if (!_t.isHTML5 && _fV === 9 && _t.position > 0 && _t.position === _t.duration) {
-        oOptions.position = 0;
-      }
-      if (_t.paused && _t.position && _t.position > 0) {
-        _t.resume();
-      } else {
-        _t._iO = _mixin(oOptions, _t._iO);
-        if (_t._iO.from !== null && _t._iO.to !== null && _t.instanceCount === 0 && _t.playState === 0 && !_t._iO.serverURL) {
-          onready = function() {
-            _t._iO = _mixin(oOptions, _t._iO);
-            _t.play(_t._iO);
-          };
-          if (_t.isHTML5 && !_t._html5_canplay) {
-            _t.load({
-              _oncanplay: onready
-            });
-            return false;
-          } else if (!_t.isHTML5 && !_t.loaded && (!_t.readyState || _t.readyState !== 2)) {
-            _t.load({
-              onload: onready
-            });
-            return false;
-          }
-          _t._iO = _applyFromTo();
-        }
-        if (!_t.instanceCount || _t._iO.multiShotEvents || (!_t.isHTML5 && _fV > 8 && !_t.getAutoPlay())) {
-          _t.instanceCount++;
-        }
-        if (_t.playState === 0 && _t._iO.onposition) {
-          _attachOnPosition(_t);
-        }
-        _t.playState = 1;
-        _t.paused = false;
-        _t.position = (typeof _t._iO.position !== 'undefined' && !isNaN(_t._iO.position) ? _t._iO.position : 0);
-        if (!_t.isHTML5) {
-          _t._iO = _policyFix(_loopFix(_t._iO));
-        }
-        if (_t._iO.onplay && _updatePlayState) {
-          _t._iO.onplay.apply(_t);
-          _onplay_called = true;
-        }
-        _t.setVolume(_t._iO.volume, true);
-        _t.setPan(_t._iO.pan, true);
-        if (!_t.isHTML5) {
-          _flash._start(_t.sID, _t._iO.loops || 1, (_fV === 9?_t._iO.position:_t._iO.position / 1000));
-        } else {
-          _start_html5_timer();
-          a = _t._setup_html5();
-          _t.setPosition(_t._iO.position);
-          a.play();
-        }
-      }
-      return _t;
-    };
-    this.start = this.play;
-    this.stop = function(bAll) {
-      var _iO = _t._iO, _oP;
-      if (_t.playState === 1) {
-        _t._onbufferchange(0);
-        _t._resetOnPosition(0);
-        _t.paused = false;
-        if (!_t.isHTML5) {
-          _t.playState = 0;
-        }
-        _detachOnPosition();
-        if (_iO.to) {
-          _t.clearOnPosition(_iO.to);
-        }
-        if (!_t.isHTML5) {
-          _flash._stop(_t.sID, bAll);
-          if (_iO.serverURL) {
-            _t.unload();
-          }
-        } else {
-          if (_t._a) {
-            _oP = _t.position;
-            _t.setPosition(0);
-            _t.position = _oP;
-            _t._a.pause();
-            _t.playState = 0;
-            _t._onTimer();
-            _stop_html5_timer();
-          }
-        }
-        _t.instanceCount = 0;
-        _t._iO = {};
-        if (_iO.onstop) {
-          _iO.onstop.apply(_t);
-        }
-      }
-      return _t;
-    };
-    this.setAutoPlay = function(autoPlay) {
-      _t._iO.autoPlay = autoPlay;
-      if (!_t.isHTML5) {
-        _flash._setAutoPlay(_t.sID, autoPlay);
-        if (autoPlay) {
-          if (!_t.instanceCount && _t.readyState === 1) {
-            _t.instanceCount++;
-          }
-        }
-      }
-    };
-    this.getAutoPlay = function() {
-      return _t._iO.autoPlay;
-    };
-    this.setPosition = function(nMsecOffset) {
-      if (nMsecOffset === undefined) {
-        nMsecOffset = 0;
-      }
-      var original_pos,
-          position, position1K,
-          offset = (_t.isHTML5 ? Math.max(nMsecOffset,0) : Math.min(_t.duration || _t._iO.duration, Math.max(nMsecOffset, 0)));
-      original_pos = _t.position;
-      _t.position = offset;
-      position1K = _t.position/1000;
-      _t._resetOnPosition(_t.position);
-      _t._iO.position = offset;
-      if (!_t.isHTML5) {
-        position = (_fV === 9 ? _t.position : position1K);
-        if (_t.readyState && _t.readyState !== 2) {
-          _flash._setPosition(_t.sID, position, (_t.paused || !_t.playState));
-        }
-      } else if (_t._a) {
-        if (_t._html5_canplay) {
-          if (_t._a.currentTime !== position1K) {
-            try {
-              _t._a.currentTime = position1K;
-              if (_t.playState === 0 || _t.paused) {
-                _t._a.pause();
-              }
-            } catch(e) {
-            }
-          }
-        } else {
-        }
-      }
-      if (_t.isHTML5) {
-        if (_t.paused) {
-          _t._onTimer(true);
-        }
-      }
-      return _t;
-    };
-    this.pause = function(_bCallFlash) {
-      if (_t.paused || (_t.playState === 0 && _t.readyState !== 1)) {
-        return _t;
-      }
-      _t.paused = true;
-      if (!_t.isHTML5) {
-        if (_bCallFlash || _bCallFlash === undefined) {
-          _flash._pause(_t.sID);
-        }
-      } else {
-        _t._setup_html5().pause();
-        _stop_html5_timer();
-      }
-      if (_t._iO.onpause) {
-        _t._iO.onpause.apply(_t);
-      }
-      return _t;
-    };
-    this.resume = function() {
-      var _iO = _t._iO;
-      if (!_t.paused) {
-        return _t;
-      }
-      _t.paused = false;
-      _t.playState = 1;
-      if (!_t.isHTML5) {
-        if (_iO.isMovieStar && !_iO.serverURL) {
-          _t.setPosition(_t.position);
-        }
-        _flash._pause(_t.sID);
-      } else {
-        _t._setup_html5().play();
-        _start_html5_timer();
-      }
-      if (_onplay_called && _iO.onplay) {
-        _iO.onplay.apply(_t);
-        _onplay_called = true;
-      } else if (_iO.onresume) {
-        _iO.onresume.apply(_t);
-      }
-      return _t;
-    };
-    this.togglePause = function() {
-      if (_t.playState === 0) {
-        _t.play({
-          position: (_fV === 9 && !_t.isHTML5 ? _t.position : _t.position / 1000)
-        });
-        return _t;
-      }
-      if (_t.paused) {
-        _t.resume();
-      } else {
-        _t.pause();
-      }
-      return _t;
-    };
-    this.setPan = function(nPan, bInstanceOnly) {
-      if (typeof nPan === 'undefined') {
-        nPan = 0;
-      }
-      if (typeof bInstanceOnly === 'undefined') {
-        bInstanceOnly = false;
-      }
-      if (!_t.isHTML5) {
-        _flash._setPan(_t.sID, nPan);
-      }
-      _t._iO.pan = nPan;
-      if (!bInstanceOnly) {
-        _t.pan = nPan;
-        _t.options.pan = nPan;
-      }
-      return _t;
-    };
-    this.setVolume = function(nVol, _bInstanceOnly) {
-      if (typeof nVol === 'undefined') {
-        nVol = 100;
-      }
-      if (typeof _bInstanceOnly === 'undefined') {
-        _bInstanceOnly = false;
-      }
-      if (!_t.isHTML5) {
-        _flash._setVolume(_t.sID, (_s.muted && !_t.muted) || _t.muted?0:nVol);
-      } else if (_t._a) {
-        _t._a.volume = Math.max(0, Math.min(1, nVol/100));
-      }
-      _t._iO.volume = nVol;
-      if (!_bInstanceOnly) {
-        _t.volume = nVol;
-        _t.options.volume = nVol;
-      }
-      return _t;
-    };
-    this.mute = function() {
-      _t.muted = true;
-      if (!_t.isHTML5) {
-        _flash._setVolume(_t.sID, 0);
-      } else if (_t._a) {
-        _t._a.muted = true;
-      }
-      return _t;
-    };
-    this.unmute = function() {
-      _t.muted = false;
-      var hasIO = typeof _t._iO.volume !== 'undefined';
-      if (!_t.isHTML5) {
-        _flash._setVolume(_t.sID, hasIO?_t._iO.volume:_t.options.volume);
-      } else if (_t._a) {
-        _t._a.muted = false;
-      }
-      return _t;
-    };
-    this.toggleMute = function() {
-      return (_t.muted?_t.unmute():_t.mute());
-    };
-    this.onPosition = function(nPosition, oMethod, oScope) {
-      _onPositionItems.push({
-        position: nPosition,
-        method: oMethod,
-        scope: (typeof oScope !== 'undefined' ? oScope : _t),
-        fired: false
-      });
-      return _t;
-    };
-    this.onposition = this.onPosition;
-    this.clearOnPosition = function(nPosition, oMethod) {
-      var i;
-      nPosition = parseInt(nPosition, 10);
-      if (isNaN(nPosition)) {
-        return false;
-      }
-      for (i=0; i < _onPositionItems.length; i++) {
-        if (nPosition === _onPositionItems[i].position) {
-          if (!oMethod || (oMethod === _onPositionItems[i].method)) {
-            if (_onPositionItems[i].fired) {
-              _onPositionFired--;
-            }
-            _onPositionItems.splice(i, 1);
-          }
-        }
-      }
-    };
-    this._processOnPosition = function() {
-      var i, item, j = _onPositionItems.length;
-      if (!j || !_t.playState || _onPositionFired >= j) {
-        return false;
-      }
-      for (i=j; i--;) {
-        item = _onPositionItems[i];
-        if (!item.fired && _t.position >= item.position) {
-          item.fired = true;
-          _onPositionFired++;
-          item.method.apply(item.scope, [item.position]);
-        }
-      }
-      return true;
-    };
-    this._resetOnPosition = function(nPosition) {
-      var i, item, j = _onPositionItems.length;
-      if (!j) {
-        return false;
-      }
-      for (i=j; i--;) {
-        item = _onPositionItems[i];
-        if (item.fired && nPosition <= item.position) {
-          item.fired = false;
-          _onPositionFired--;
-        }
-      }
-      return true;
-    };
-    _applyFromTo = function() {
-      var _iO = _t._iO,
-          f = _iO.from,
-          t = _iO.to,
-          start, end;
-      end = function() {
-        _t.clearOnPosition(t, end);
-        _t.stop();
-      };
-      start = function() {
-        if (t !== null && !isNaN(t)) {
-          _t.onPosition(t, end);
-        }
-      };
-      if (f !== null && !isNaN(f)) {
-        _iO.position = f;
-        _iO.multiShot = false;
-        start();
-      }
-      return _iO;
-    };
-    _attachOnPosition = function() {
-      var op = _t._iO.onposition;
-      if (op) {
-        var item;
-        for (item in op) {
-          if (op.hasOwnProperty(item)) {
-            _t.onPosition(parseInt(item, 10), op[item]);
-          }
-        }
-      }
-    };
-    _detachOnPosition = function() {
-      var op = _t._iO.onposition;
-      if (op) {
-        var item;
-        for (item in op) {
-          if (op.hasOwnProperty(item)) {
-            _t.clearOnPosition(parseInt(item, 10));
-          }
-        }
-      }
-    };
-    _start_html5_timer = function() {
-      if (_t.isHTML5) {
-        _startTimer(_t);
-      }
-    };
-    _stop_html5_timer = function() {
-      if (_t.isHTML5) {
-        _stopTimer(_t);
-      }
-    };
-    _resetProperties = function() {
-      _onPositionItems = [];
-      _onPositionFired = 0;
-      _onplay_called = false;
-      _t._hasTimer = null;
-      _t._a = null;
-      _t._html5_canplay = false;
-      _t.bytesLoaded = null;
-      _t.bytesTotal = null;
-      _t.duration = (_t._iO && _t._iO.duration ? _t._iO.duration : null);
-      _t.durationEstimate = null;
-      _t.eqData = [];
-      _t.eqData.left = [];
-      _t.eqData.right = [];
-      _t.failures = 0;
-      _t.isBuffering = false;
-      _t.instanceOptions = {};
-      _t.instanceCount = 0;
-      _t.loaded = false;
-      _t.metadata = {};
-      _t.readyState = 0;
-      _t.muted = false;
-      _t.paused = false;
-      _t.peakData = {
-        left: 0,
-        right: 0
-      };
-      _t.waveformData = {
-        left: [],
-        right: []
-      };
-      _t.playState = 0;
-      _t.position = null;
-    };
-    _resetProperties();
-    this._onTimer = function(bForce) {
-      var duration, isNew = false, time, x = {};
-      if (_t._hasTimer || bForce) {
-        if (_t._a && (bForce || ((_t.playState > 0 || _t.readyState === 1) && !_t.paused))) {
-          duration = _t._get_html5_duration();
-          if (duration !== _lastHTML5State.duration) {
-            _lastHTML5State.duration = duration;
-            _t.duration = duration;
-            isNew = true;
-          }
-          _t.durationEstimate = _t.duration;
-          time = (_t._a.currentTime * 1000 || 0);
-          if (time !== _lastHTML5State.time) {
-            _lastHTML5State.time = time;
-            isNew = true;
-          }
-          if (isNew || bForce) {
-            _t._whileplaying(time,x,x,x,x);
-          }
-          return isNew;
-        } else {
-          return false;
-        }
-      }
-    };
-    this._get_html5_duration = function() {
-      var _iO = _t._iO,
-          d = (_t._a ? _t._a.duration*1000 : (_iO ? _iO.duration : undefined)),
-          result = (d && !isNaN(d) && d !== Infinity ? d : (_iO ? _iO.duration : null));
-      return result;
-    };
-    this._setup_html5 = function(oOptions) {
-      var _iO = _mixin(_t._iO, oOptions), d = decodeURI,
-          _a = _useGlobalHTML5Audio ? _s._global_a : _t._a,
-          _dURL = d(_iO.url),
-          _oldIO = (_a && _a._t ? _a._t.instanceOptions : null);
-      if (_a) {
-        if (_a._t) {
-          if (!_useGlobalHTML5Audio && _dURL === d(_lastURL)) {
-            return _a;
-          } else if (_useGlobalHTML5Audio && _oldIO.url === _iO.url && (!_lastURL || (_lastURL === _oldIO.url))) {
-            return _a;
-          }
-        }
-        if (_useGlobalHTML5Audio && _a._t && _a._t.playState && _iO.url !== _oldIO.url) {
-          _a._t.stop();
-        }
-        _resetProperties();
-        _a.src = _iO.url;
-        _t.url = _iO.url;
-        _lastURL = _iO.url;
-        _a._called_load = false;
-      } else {
-        _a = new Audio(_iO.url);
-        _a._called_load = false;
-        if (_is_android) {
-          _a._called_load = true;
-        }
-        if (_useGlobalHTML5Audio) {
-          _s._global_a = _a;
-        }
-      }
-      _t.isHTML5 = true;
-      _t._a = _a;
-      _a._t = _t;
-      _add_html5_events();
-      _a.loop = (_iO.loops>1?'loop':'');
-      if (_iO.autoLoad || _iO.autoPlay) {
-        _t.load();
-      } else {
-        _a.autobuffer = false;
-        _a.preload = 'none';
-      }
-      _a.loop = (_iO.loops > 1 ? 'loop' : '');
-      return _a;
-    };
-    _add_html5_events = function() {
-      if (_t._a._added_events) {
-        return false;
-      }
-      var f;
-      function add(oEvt, oFn, bCapture) {
-        return _t._a ? _t._a.addEventListener(oEvt, oFn, bCapture||false) : null;
-      }
-      _t._a._added_events = true;
-      for (f in _html5_events) {
-        if (_html5_events.hasOwnProperty(f)) {
-          add(f, _html5_events[f]);
-        }
-      }
-      return true;
-    };
-    _remove_html5_events = function() {
-      var f;
-      function remove(oEvt, oFn, bCapture) {
-        return (_t._a ? _t._a.removeEventListener(oEvt, oFn, bCapture||false) : null);
-      }
-      _t._a._added_events = false;
-      for (f in _html5_events) {
-        if (_html5_events.hasOwnProperty(f)) {
-          remove(f, _html5_events[f]);
-        }
-      }
-    };
-    this._onload = function(nSuccess) {
-      var fN, loadOK = !!(nSuccess);
-      _t.loaded = loadOK;
-      _t.readyState = loadOK?3:2;
-      _t._onbufferchange(0);
-      if (_t._iO.onload) {
-        _t._iO.onload.apply(_t, [loadOK]);
-      }
-      return true;
-    };
-    this._onbufferchange = function(nIsBuffering) {
-      if (_t.playState === 0) {
-        return false;
-      }
-      if ((nIsBuffering && _t.isBuffering) || (!nIsBuffering && !_t.isBuffering)) {
-        return false;
-      }
-      _t.isBuffering = (nIsBuffering === 1);
-      if (_t._iO.onbufferchange) {
-        _t._iO.onbufferchange.apply(_t);
-      }
-      return true;
-    };
-    this._onsuspend = function() {
-      if (_t._iO.onsuspend) {
-        _t._iO.onsuspend.apply(_t);
-      }
-      return true;
-    };
-    this._onfailure = function(msg, level, code) {
-      _t.failures++;
-      if (_t._iO.onfailure && _t.failures === 1) {
-        _t._iO.onfailure(_t, msg, level, code);
-      } else {
-      }
-    };
-    this._onfinish = function() {
-      var _io_onfinish = _t._iO.onfinish;
-      _t._onbufferchange(0);
-      _t._resetOnPosition(0);
-      if (_t.instanceCount) {
-        _t.instanceCount--;
-        if (!_t.instanceCount) {
-          _detachOnPosition();
-          _t.playState = 0;
-          _t.paused = false;
-          _t.instanceCount = 0;
-          _t.instanceOptions = {};
-          _t._iO = {};
-          _stop_html5_timer();
-        }
-        if (!_t.instanceCount || _t._iO.multiShotEvents) {
-          if (_io_onfinish) {
-            _io_onfinish.apply(_t);
-          }
-        }
-      }
-    };
-    this._whileloading = function(nBytesLoaded, nBytesTotal, nDuration, nBufferLength) {
-      var _iO = _t._iO;
-      _t.bytesLoaded = nBytesLoaded;
-      _t.bytesTotal = nBytesTotal;
-      _t.duration = Math.floor(nDuration);
-      _t.bufferLength = nBufferLength;
-      if (!_iO.isMovieStar) {
-        if (_iO.duration) {
-          _t.durationEstimate = (_t.duration > _iO.duration) ? _t.duration : _iO.duration;
-        } else {
-          _t.durationEstimate = parseInt((_t.bytesTotal / _t.bytesLoaded) * _t.duration, 10);
-        }
-        if (_t.durationEstimate === undefined) {
-          _t.durationEstimate = _t.duration;
-        }
-        if (_t.readyState !== 3 && _iO.whileloading) {
-          _iO.whileloading.apply(_t);
-        }
-      } else {
-        _t.durationEstimate = _t.duration;
-        if (_t.readyState !== 3 && _iO.whileloading) {
-          _iO.whileloading.apply(_t);
-        }
-      }
-    };
-    this._whileplaying = function(nPosition, oPeakData, oWaveformDataLeft, oWaveformDataRight, oEQData) {
-      var _iO = _t._iO;
-      if (isNaN(nPosition) || nPosition === null) {
-        return false;
-      }
-      _t.position = nPosition;
-      _t._processOnPosition();
-      if (!_t.isHTML5 && _fV > 8) {
-        if (_iO.usePeakData && typeof oPeakData !== 'undefined' && oPeakData) {
-          _t.peakData = {
-            left: oPeakData.leftPeak,
-            right: oPeakData.rightPeak
-          };
-        }
-        if (_iO.useWaveformData && typeof oWaveformDataLeft !== 'undefined' && oWaveformDataLeft) {
-          _t.waveformData = {
-            left: oWaveformDataLeft.split(','),
-            right: oWaveformDataRight.split(',')
-          };
-        }
-        if (_iO.useEQData) {
-          if (typeof oEQData !== 'undefined' && oEQData && oEQData.leftEQ) {
-            var eqLeft = oEQData.leftEQ.split(',');
-            _t.eqData = eqLeft;
-            _t.eqData.left = eqLeft;
-            if (typeof oEQData.rightEQ !== 'undefined' && oEQData.rightEQ) {
-              _t.eqData.right = oEQData.rightEQ.split(',');
-            }
-          }
-        }
-      }
-      if (_t.playState === 1) {
-        if (!_t.isHTML5 && _fV === 8 && !_t.position && _t.isBuffering) {
-          _t._onbufferchange(0);
-        }
-        if (_iO.whileplaying) {
-          _iO.whileplaying.apply(_t);
-        }
-      }
-      return true;
-    };
-    this._onmetadata = function(oMDProps, oMDData) {
-      var oData = {}, i, j;
-      for (i = 0, j = oMDProps.length; i < j; i++) {
-        oData[oMDProps[i]] = oMDData[i];
-      }
-      _t.metadata = oData;
-      if (_t._iO.onmetadata) {
-        _t._iO.onmetadata.apply(_t);
-      }
-	};
-    this._onid3 = function(oID3Props, oID3Data) {
-      var oData = [], i, j;
-      for (i = 0, j = oID3Props.length; i < j; i++) {
-        oData[oID3Props[i]] = oID3Data[i];
-      }
-      _t.id3 = _mixin(_t.id3, oData);
-      if (_t._iO.onid3) {
-        _t._iO.onid3.apply(_t);
-      }
-    };
-    this._onconnect = function(bSuccess) {
-      bSuccess = (bSuccess === 1);
-      _t.connected = bSuccess;
-      if (bSuccess) {
-        _t.failures = 0;
-        if (_idCheck(_t.sID)) {
-          if (_t.getAutoPlay()) {
-            _t.play(undefined, _t.getAutoPlay());
-          } else if (_t._iO.autoLoad) {
-            _t.load();
-          }
-        }
-        if (_t._iO.onconnect) {
-          _t._iO.onconnect.apply(_t, [bSuccess]);
-        }
-      }
-    };
-    this._ondataerror = function(sError) {
-      if (_t.playState > 0) {
-        if (_t._iO.ondataerror) {
-          _t._iO.ondataerror.apply(_t);
-        }
-      }
-    };
-  };
-  _getDocument = function() {
-    return (_doc.body || _doc._docElement || _doc.getElementsByTagName('div')[0]);
-  };
-  _id = function(sID) {
-    return _doc.getElementById(sID);
-  };
-  _mixin = function(oMain, oAdd) {
-    var o1 = {}, i, o2, o;
-    for (i in oMain) {
-      if (oMain.hasOwnProperty(i)) {
-        o1[i] = oMain[i];
-      }
-    }
-    o2 = (typeof oAdd === 'undefined'?_s.defaultOptions:oAdd);
-    for (o in o2) {
-      if (o2.hasOwnProperty(o) && typeof o1[o] === 'undefined') {
-        o1[o] = o2[o];
-      }
-    }
-    return o1;
-  };
-  _event = (function() {
-    var old = (_win.attachEvent),
-    evt = {
-      add: (old?'attachEvent':'addEventListener'),
-      remove: (old?'detachEvent':'removeEventListener')
-    };
-    function getArgs(oArgs) {
-      var args = _slice.call(oArgs), len = args.length;
-      if (old) {
-        args[1] = 'on' + args[1];
-        if (len > 3) {
-          args.pop();
-        }
-      } else if (len === 3) {
-        args.push(false);
-      }
-      return args;
-    }
-    function apply(args, sType) {
-      var element = args.shift(),
-          method = [evt[sType]];
-      if (old) {
-        element[method](args[0], args[1]);
-      } else {
-        element[method].apply(element, args);
-      }
-    }
-    function add() {
-      apply(getArgs(arguments), 'add');
-    }
-    function remove() {
-      apply(getArgs(arguments), 'remove');
-    }
-    return {
-      'add': add,
-      'remove': remove
-    };
-  }());
-  function _html5_event(oFn) {
-    return function(e) {
-      var t = this._t;
-      if (!t || !t._a) {
-        return null;
-      } else {
-        return oFn.call(this, e);
-      }
-    };
-  }
-  _html5_events = {
-    abort: _html5_event(function(e) {
-    }),
-    canplay: _html5_event(function(e) {
-      var t = this._t;
-      if (t._html5_canplay) {
-        return true;
-      }
-      t._html5_canplay = true;
-      t._onbufferchange(0);
-      var position1K = (!isNaN(t.position)?t.position/1000:null);
-      if (t.position && this.currentTime !== position1K) {
-        try {
-          this.currentTime = position1K;
-        } catch(ee) {
-        }
-      }
-      if (t._iO._oncanplay) {
-        t._iO._oncanplay();
-      }
-    }),
-    load: _html5_event(function(e) {
-      var t = this._t;
-      if (!t.loaded) {
-        t._onbufferchange(0);
-        t._whileloading(t.bytesTotal, t.bytesTotal, t._get_html5_duration());
-        t._onload(true);
-      }
-    }),
-    emptied: _html5_event(function(e) {
-    }),
-    ended: _html5_event(function(e) {
-      var t = this._t;
-      t._onfinish();
-    }),
-    error: _html5_event(function(e) {
-      this._t._onload(false);
-    }),
-    loadeddata: _html5_event(function(e) {
-      var t = this._t,
-          bytesTotal = t.bytesTotal || 1;
-      if (!t._loaded && !_isSafari) {
-        t.duration = t._get_html5_duration();
-        t._whileloading(bytesTotal, bytesTotal, t._get_html5_duration());
-        t._onload(true);
-      }
-    }),
-    loadedmetadata: _html5_event(function(e) {
-    }),
-    loadstart: _html5_event(function(e) {
-      this._t._onbufferchange(1);
-    }),
-    play: _html5_event(function(e) {
-      this._t._onbufferchange(0);
-    }),
-    playing: _html5_event(function(e) {
-      this._t._onbufferchange(0);
-    }),
-    progress: _html5_event(function(e) {
-      var t = this._t;
-      if (t.loaded) {
-        return false;
-      }
-      var i, j, str, buffered = 0,
-          isProgress = (e.type === 'progress'),
-          ranges = e.target.buffered,
-          loaded = (e.loaded||0),
-          total = (e.total||1);
-      if (ranges && ranges.length) {
-        for (i=ranges.length; i--;) {
-          buffered = (ranges.end(i) - ranges.start(i));
-        }
-        loaded = buffered/e.target.duration;
-      }
-      if (!isNaN(loaded)) {
-        t._onbufferchange(0);
-        t._whileloading(loaded, total, t._get_html5_duration());
-        if (loaded && total && loaded === total) {
-          _html5_events.load.call(this, e);
-        }
-      }
-    }),
-    ratechange: _html5_event(function(e) {
-    }),
-    suspend: _html5_event(function(e) {
-      var t = this._t;
-      _html5_events.progress.call(this, e);
-      t._onsuspend();
-    }),
-    stalled: _html5_event(function(e) {
-    }),
-    timeupdate: _html5_event(function(e) {
-      this._t._onTimer();
-    }),
-    waiting: _html5_event(function(e) {
-      var t = this._t;
-      t._onbufferchange(1);
-    })
-  };
-  _html5OK = function(iO) {
-    return (!iO.serverURL && (iO.type?_html5CanPlay({type:iO.type}):_html5CanPlay({url:iO.url})||_s.html5Only));
-  };
-  _html5Unload = function(oAudio) {
-    if (oAudio) {
-      oAudio.src = (_is_firefox ? '' : _emptyURL);
-    }
-  };
-  _html5CanPlay = function(o) {
-    if (!_s.useHTML5Audio || !_s.hasHTML5) {
-      return false;
-    }
-    var url = (o.url || null),
-        mime = (o.type || null),
-        aF = _s.audioFormats,
-        result,
-        offset,
-        fileExt,
-        item;
-    function preferFlashCheck(kind) {
-      return (_s.preferFlash && _hasFlash && !_s.ignoreFlash && (typeof _s.flash[kind] !== 'undefined' && _s.flash[kind]));
-    }
-    if (mime && _s.html5[mime] !== 'undefined') {
-      return (_s.html5[mime] && !preferFlashCheck(mime));
-    }
-    if (!_html5Ext) {
-      _html5Ext = [];
-      for (item in aF) {
-        if (aF.hasOwnProperty(item)) {
-          _html5Ext.push(item);
-          if (aF[item].related) {
-            _html5Ext = _html5Ext.concat(aF[item].related);
-          }
-        }
-      }
-      _html5Ext = new RegExp('\\.('+_html5Ext.join('|')+')(\\?.*)?$','i');
-    }
-    fileExt = (url ? url.toLowerCase().match(_html5Ext) : null);
-    if (!fileExt || !fileExt.length) {
-      if (!mime) {
-        return false;
-      } else {
-        offset = mime.indexOf(';');
-        fileExt = (offset !== -1?mime.substr(0,offset):mime).substr(6);
-      }
-    } else {
-      fileExt = fileExt[1];
-    }
-    if (fileExt && typeof _s.html5[fileExt] !== 'undefined') {
-      return (_s.html5[fileExt] && !preferFlashCheck(fileExt));
-    } else {
-      mime = 'audio/'+fileExt;
-      result = _s.html5.canPlayType({type:mime});
-      _s.html5[fileExt] = result;
-      return (result && _s.html5[mime] && !preferFlashCheck(mime));
-    }
-  };
-  _testHTML5 = function() {
-    if (!_s.useHTML5Audio || typeof Audio === 'undefined') {
-      return false;
-    }
-    var a = (typeof Audio !== 'undefined' ? (_isOpera ? new Audio(null) : new Audio()) : null),
-        item, support = {}, aF, i;
-    function _cp(m) {
-      var canPlay, i, j, isOK = false;
-      if (!a || typeof a.canPlayType !== 'function') {
-        return false;
-      }
-      if (m instanceof Array) {
-        for (i=0, j=m.length; i<j && !isOK; i++) {
-          if (_s.html5[m[i]] || a.canPlayType(m[i]).match(_s.html5Test)) {
-            isOK = true;
-            _s.html5[m[i]] = true;
-            _s.flash[m[i]] = !!(_s.preferFlash && _hasFlash && m[i].match(_flashMIME));
-          }
-        }
-        return isOK;
-      } else {
-        canPlay = (a && typeof a.canPlayType === 'function' ? a.canPlayType(m) : false);
-        return !!(canPlay && (canPlay.match(_s.html5Test)));
-      }
-    }
-    aF = _s.audioFormats;
-    for (item in aF) {
-      if (aF.hasOwnProperty(item)) {
-        support[item] = _cp(aF[item].type);
-        support['audio/'+item] = support[item];
-        if (_s.preferFlash && !_s.ignoreFlash && item.match(_flashMIME)) {
-          _s.flash[item] = true;
-        } else {
-          _s.flash[item] = false;
-        }
-        if (aF[item] && aF[item].related) {
-          for (i=aF[item].related.length; i--;) {
-            support['audio/'+aF[item].related[i]] = support[item];
-            _s.html5[aF[item].related[i]] = support[item];
-            _s.flash[aF[item].related[i]] = support[item];
-          }
-        }
-      }
-    }
-    support.canPlayType = (a?_cp:null);
-    _s.html5 = _mixin(_s.html5, support);
-    return true;
-  };
-  _strings = {
-  };
-  _str = function() {
-  };
-  _loopFix = function(sOpt) {
-    if (_fV === 8 && sOpt.loops > 1 && sOpt.stream) {
-      sOpt.stream = false;
-    }
-    return sOpt;
-  };
-  _policyFix = function(sOpt, sPre) {
-    if (sOpt && !sOpt.usePolicyFile && (sOpt.onid3 || sOpt.usePeakData || sOpt.useWaveformData || sOpt.useEQData)) {
-      sOpt.usePolicyFile = true;
-    }
-    return sOpt;
-  };
-  _complain = function(sMsg) {
-  };
-  _doNothing = function() {
-    return false;
-  };
-  _disableObject = function(o) {
-    var oProp;
-    for (oProp in o) {
-      if (o.hasOwnProperty(oProp) && typeof o[oProp] === 'function') {
-        o[oProp] = _doNothing;
-      }
-    }
-    oProp = null;
-  };
-  _failSafely = function(bNoDisable) {
-    if (typeof bNoDisable === 'undefined') {
-      bNoDisable = false;
-    }
-    if (_disabled || bNoDisable) {
-      _s.disable(bNoDisable);
-    }
-  };
-  _normalizeMovieURL = function(smURL) {
-    var urlParams = null, url;
-    if (smURL) {
-      if (smURL.match(/\.swf(\?.*)?$/i)) {
-        urlParams = smURL.substr(smURL.toLowerCase().lastIndexOf('.swf?') + 4);
-        if (urlParams) {
-          return smURL;
-        }
-      } else if (smURL.lastIndexOf('/') !== smURL.length - 1) {
-        smURL += '/';
-      }
-    }
-    url = (smURL && smURL.lastIndexOf('/') !== - 1 ? smURL.substr(0, smURL.lastIndexOf('/') + 1) : './') + _s.movieURL;
-    if (_s.noSWFCache) {
-      url += ('?ts=' + new Date().getTime());
-    }
-    return url;
-  };
-  _setVersionInfo = function() {
-    _fV = parseInt(_s.flashVersion, 10);
-    if (_fV !== 8 && _fV !== 9) {
-      _s.flashVersion = _fV = _defaultFlashVersion;
-    }
-    var isDebug = (_s.debugMode || _s.debugFlash?'_debug.swf':'.swf');
-    if (_s.useHTML5Audio && !_s.html5Only && _s.audioFormats.mp4.required && _fV < 9) {
-      _s.flashVersion = _fV = 9;
-    }
-    _s.version = _s.versionNumber + (_s.html5Only?' (HTML5-only mode)':(_fV === 9?' (AS3/Flash 9)':' (AS2/Flash 8)'));
-    if (_fV > 8) {
-      _s.defaultOptions = _mixin(_s.defaultOptions, _s.flash9Options);
-      _s.features.buffering = true;
-      _s.defaultOptions = _mixin(_s.defaultOptions, _s.movieStarOptions);
-      _s.filePatterns.flash9 = new RegExp('\\.(mp3|' + _netStreamTypes.join('|') + ')(\\?.*)?$', 'i');
-      _s.features.movieStar = true;
-    } else {
-      _s.features.movieStar = false;
-    }
-    _s.filePattern = _s.filePatterns[(_fV !== 8?'flash9':'flash8')];
-    _s.movieURL = (_fV === 8?'soundmanager2.swf':'soundmanager2_flash9.swf').replace('.swf', isDebug);
-    _s.features.peakData = _s.features.waveformData = _s.features.eqData = (_fV > 8);
-  };
-  _setPolling = function(bPolling, bHighPerformance) {
-    if (!_flash) {
-      return false;
-    }
-    _flash._setPolling(bPolling, bHighPerformance);
-  };
-  _initDebug = function() {
-    if (_s.debugURLParam.test(_wl)) {
-      _s.debugMode = true;
-    }
-  };
-  _idCheck = this.getSoundById;
-  _getSWFCSS = function() {
-    var css = [];
-    if (_s.debugMode) {
-      css.push(_swfCSS.sm2Debug);
-    }
-    if (_s.debugFlash) {
-      css.push(_swfCSS.flashDebug);
-    }
-    if (_s.useHighPerformance) {
-      css.push(_swfCSS.highPerf);
-    }
-    return css.join(' ');
-  };
-  _flashBlockHandler = function() {
-    var name = _str('fbHandler'),
-        p = _s.getMoviePercent(),
-        css = _swfCSS,
-        error = {type:'FLASHBLOCK'};
-    if (_s.html5Only) {
-      return false;
-    }
-    if (!_s.ok()) {
-      if (_needsFlash) {
-        _s.oMC.className = _getSWFCSS() + ' ' + css.swfDefault + ' ' + (p === null?css.swfTimedout:css.swfError);
-      }
-      _s.didFlashBlock = true;
-      _processOnEvents({type:'ontimeout', ignoreInit:true, error:error});
-      _catchError(error);
-    } else {
-      if (_s.oMC) {
-        _s.oMC.className = [_getSWFCSS(), css.swfDefault, css.swfLoaded + (_s.didFlashBlock?' '+css.swfUnblocked:'')].join(' ');
-      }
-    }
-  };
-  _addOnEvent = function(sType, oMethod, oScope) {
-    if (typeof _on_queue[sType] === 'undefined') {
-      _on_queue[sType] = [];
-    }
-    _on_queue[sType].push({
-      'method': oMethod,
-      'scope': (oScope || null),
-      'fired': false
-    });
-  };
-  _processOnEvents = function(oOptions) {
-    if (!oOptions) {
-      oOptions = {
-        type: 'onready'
-      };
-    }
-    if (!_didInit && oOptions && !oOptions.ignoreInit) {
-      return false;
-    }
-    if (oOptions.type === 'ontimeout' && _s.ok()) {
-      return false;
-    }
-    var status = {
-          success: (oOptions && oOptions.ignoreInit?_s.ok():!_disabled)
-        },
-        srcQueue = (oOptions && oOptions.type?_on_queue[oOptions.type]||[]:[]),
-        queue = [], i, j,
-        args = [status],
-        canRetry = (_needsFlash && _s.useFlashBlock && !_s.ok());
-    if (oOptions.error) {
-      args[0].error = oOptions.error;
-    }
-    for (i = 0, j = srcQueue.length; i < j; i++) {
-      if (srcQueue[i].fired !== true) {
-        queue.push(srcQueue[i]);
-      }
-    }
-    if (queue.length) {
-      for (i = 0, j = queue.length; i < j; i++) {
-        if (queue[i].scope) {
-          queue[i].method.apply(queue[i].scope, args);
-        } else {
-          queue[i].method.apply(this, args);
-        }
-        if (!canRetry) {
-          queue[i].fired = true;
-        }
-      }
-    }
-    return true;
-  };
-  _initUserOnload = function() {
-    _win.setTimeout(function() {
-      if (_s.useFlashBlock) {
-        _flashBlockHandler();
-      }
-      _processOnEvents();
-      if (_s.onload instanceof Function) {
-        _s.onload.apply(_win);
-      }
-      if (_s.waitForWindowLoad) {
-        _event.add(_win, 'load', _initUserOnload);
-      }
-    },1);
-  };
-  _detectFlash = function() {
-    if (_hasFlash !== undefined) {
-      return _hasFlash;
-    }
-    var hasPlugin = false, n = navigator, nP = n.plugins, obj, type, types, AX = _win.ActiveXObject;
-    if (nP && nP.length) {
-      type = 'application/x-shockwave-flash';
-      types = n.mimeTypes;
-      if (types && types[type] && types[type].enabledPlugin && types[type].enabledPlugin.description) {
-        hasPlugin = true;
-      }
-    } else if (typeof AX !== 'undefined') {
-      try {
-        obj = new AX('ShockwaveFlash.ShockwaveFlash');
-      } catch(e) {
-      }
-      hasPlugin = (!!obj);
-    }
-    _hasFlash = hasPlugin;
-    return hasPlugin;
-  };
-  _featureCheck = function() {
-    var needsFlash, item,
-        isSpecial = (_is_iDevice && !!(_ua.match(/os (1|2|3_0|3_1)/i)));
-    if (isSpecial) {
-      _s.hasHTML5 = false;
-      _s.html5Only = true;
-      if (_s.oMC) {
-        _s.oMC.style.display = 'none';
-      }
-      return false;
-    }
-    if (_s.useHTML5Audio) {
-      if (!_s.html5 || !_s.html5.canPlayType) {
-        _s.hasHTML5 = false;
-        return true;
-      } else {
-        _s.hasHTML5 = true;
-      }
-      if (_isBadSafari) {
-        if (_detectFlash()) {
-          return true;
-        }
-      }
-    } else {
-      return true;
-    }
-    for (item in _s.audioFormats) {
-      if (_s.audioFormats.hasOwnProperty(item)) {
-        if ((_s.audioFormats[item].required && !_s.html5.canPlayType(_s.audioFormats[item].type)) || _s.flash[item] || _s.flash[_s.audioFormats[item].type]) {
-          needsFlash = true;
-        }
-      }
-    }
-    if (_s.ignoreFlash) {
-      needsFlash = false;
-    }
-    _s.html5Only = (_s.hasHTML5 && _s.useHTML5Audio && !needsFlash);
-    return (!_s.html5Only);
-  };
-  _parseURL = function(url) {
-    var i, j, result = 0;
-    if (url instanceof Array) {
-      for (i=0, j=url.length; i<j; i++) {
-        if (url[i] instanceof Object) {
-          if (_s.canPlayMIME(url[i].type)) {
-            result = i;
-            break;
-          }
-        } else if (_s.canPlayURL(url[i])) {
-          result = i;
-          break;
-        }
-      }
-      if (url[result].url) {
-        url[result] = url[result].url;
-      }
-      return url[result];
-    } else {
-      return url;
-    }
-  };
-  _startTimer = function(oSound) {
-    if (!oSound._hasTimer) {
-      oSound._hasTimer = true;
-      if (!_likesHTML5 && _s.html5PollingInterval) {
-        if (_h5IntervalTimer === null && _h5TimerCount === 0) {
-          _h5IntervalTimer = window.setInterval(_timerExecute, _s.html5PollingInterval);
-        }
-        _h5TimerCount++;
-      }
-    }
-  };
-  _stopTimer = function(oSound) {
-    if (oSound._hasTimer) {
-      oSound._hasTimer = false;
-      if (!_likesHTML5 && _s.html5PollingInterval) {
-        _h5TimerCount--;
-      }
-    }
-  };
-  _timerExecute = function() {
-    var i, j;
-    if (_h5IntervalTimer !== null && !_h5TimerCount) {
-      window.clearInterval(_h5IntervalTimer);
-      _h5IntervalTimer = null;
-      return false;
-    }
-    for (i = _s.soundIDs.length; i--;) {
-      if (_s.sounds[_s.soundIDs[i]].isHTML5 && _s.sounds[_s.soundIDs[i]]._hasTimer) {
-        _s.sounds[_s.soundIDs[i]]._onTimer();
-      }
-    }
-  };
-  _catchError = function(options) {
-    options = (typeof options !== 'undefined' ? options : {});
-    if (_s.onerror instanceof Function) {
-      _s.onerror.apply(_win, [{type:(typeof options.type !== 'undefined' ? options.type : null)}]);
-    }
-    if (typeof options.fatal !== 'undefined' && options.fatal) {
-      _s.disable();
-    }
-  };
-  _badSafariFix = function() {
-    if (!_isBadSafari || !_detectFlash()) {
-      return false;
-    }
-    var aF = _s.audioFormats, i, item;
-    for (item in aF) {
-      if (aF.hasOwnProperty(item)) {
-        if (item === 'mp3' || item === 'mp4') {
-          _s.html5[item] = false;
-          if (aF[item] && aF[item].related) {
-            for (i = aF[item].related.length; i--;) {
-              _s.html5[aF[item].related[i]] = false;
-            }
-          }
-        }
-      }
-    }
-  };
-  this._setSandboxType = function(sandboxType) {
-  };
-  this._externalInterfaceOK = function(flashDate, swfVersion) {
-    if (_s.swfLoaded) {
-      return false;
-    }
-    var e, eiTime = new Date().getTime();
-    _s.swfLoaded = true;
-    _tryInitOnFocus = false;
-    if (_isBadSafari) {
-      _badSafariFix();
-    }
-    if (_isIE) {
-      setTimeout(_init, 100);
-    } else {
-      _init();
-    }
-  };
-  _createMovie = function(smID, smURL) {
-    if (_didAppend && _appendSuccess) {
-      return false;
-    }
-    function _initMsg() {
-    }
-    if (_s.html5Only) {
-      _setVersionInfo();
-      _initMsg();
-      _s.oMC = _id(_s.movieID);
-      _init();
-      _didAppend = true;
-      _appendSuccess = true;
-      return false;
-    }
-    var remoteURL = (smURL || _s.url),
-    localURL = (_s.altURL || remoteURL),
-    swfTitle = 'JS/Flash audio component (SoundManager 2)',
-    oEmbed, oMovie, oTarget = _getDocument(), tmp, movieHTML, oEl, extraClass = _getSWFCSS(),
-    s, x, sClass, side = 'auto', isRTL = null,
-    html = _doc.getElementsByTagName('html')[0];
-    isRTL = (html && html.dir && html.dir.match(/rtl/i));
-    smID = (typeof smID === 'undefined'?_s.id:smID);
-    function param(name, value) {
-      return '<param name="'+name+'" value="'+value+'" />';
-    }
-    _setVersionInfo();
-    _s.url = _normalizeMovieURL(_overHTTP?remoteURL:localURL);
-    smURL = _s.url;
-    _s.wmode = (!_s.wmode && _s.useHighPerformance ? 'transparent' : _s.wmode);
-    if (_s.wmode !== null && (_ua.match(/msie 8/i) || (!_isIE && !_s.useHighPerformance)) && navigator.platform.match(/win32|win64/i)) {
-      _s.wmode = null;
-    }
-    oEmbed = {
-      'name': smID,
-      'id': smID,
-      'src': smURL,
-      'width': side,
-      'height': side,
-      'quality': 'high',
-      'allowScriptAccess': _s.allowScriptAccess,
-      'bgcolor': _s.bgColor,
-      'pluginspage': _http+'www.macromedia.com/go/getflashplayer',
-      'title': swfTitle,
-      'type': 'application/x-shockwave-flash',
-      'wmode': _s.wmode,
-      'hasPriority': 'true'
-    };
-    if (_s.debugFlash) {
-      oEmbed.FlashVars = 'debug=1';
-    }
-    if (!_s.wmode) {
-      delete oEmbed.wmode;
-    }
-    if (_isIE) {
-      oMovie = _doc.createElement('div');
-      movieHTML = [
-        '<object id="' + smID + '" data="' + smURL + '" type="' + oEmbed.type + '" title="' + oEmbed.title +'" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="' + _http+'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" width="' + oEmbed.width + '" height="' + oEmbed.height + '">',
-        param('movie', smURL),
-        param('AllowScriptAccess', _s.allowScriptAccess),
-        param('quality', oEmbed.quality),
-        (_s.wmode? param('wmode', _s.wmode): ''),
-        param('bgcolor', _s.bgColor),
-        param('hasPriority', 'true'),
-        (_s.debugFlash ? param('FlashVars', oEmbed.FlashVars) : ''),
-        '</object>'
-      ].join('');
-    } else {
-      oMovie = _doc.createElement('embed');
-      for (tmp in oEmbed) {
-        if (oEmbed.hasOwnProperty(tmp)) {
-          oMovie.setAttribute(tmp, oEmbed[tmp]);
-        }
-      }
-    }
-    _initDebug();
-    extraClass = _getSWFCSS();
-    oTarget = _getDocument();
-    if (oTarget) {
-      _s.oMC = (_id(_s.movieID) || _doc.createElement('div'));
-      if (!_s.oMC.id) {
-        _s.oMC.id = _s.movieID;
-        _s.oMC.className = _swfCSS.swfDefault + ' ' + extraClass;
-        s = null;
-        oEl = null;
-        if (!_s.useFlashBlock) {
-          if (_s.useHighPerformance) {
-            s = {
-              'position': 'fixed',
-              'width': '8px',
-              'height': '8px',
-              'bottom': '0px',
-              'left': '0px',
-              'overflow': 'hidden'
-            };
-          } else {
-            s = {
-              'position': 'absolute',
-              'width': '6px',
-              'height': '6px',
-              'top': '-9999px',
-              'left': '-9999px'
-            };
-            if (isRTL) {
-              s.left = Math.abs(parseInt(s.left,10))+'px';
-            }
-          }
-        }
-        if (_isWebkit) {
-          _s.oMC.style.zIndex = 10000;
-        }
-        if (!_s.debugFlash) {
-          for (x in s) {
-            if (s.hasOwnProperty(x)) {
-              _s.oMC.style[x] = s[x];
-            }
-          }
-        }
-        try {
-          if (!_isIE) {
-            _s.oMC.appendChild(oMovie);
-          }
-          oTarget.appendChild(_s.oMC);
-          if (_isIE) {
-            oEl = _s.oMC.appendChild(_doc.createElement('div'));
-            oEl.className = _swfCSS.swfBox;
-            oEl.innerHTML = movieHTML;
-          }
-          _appendSuccess = true;
-        } catch(e) {
-          throw new Error(_str('domError')+' \n'+e.toString());
-        }
-      } else {
-        sClass = _s.oMC.className;
-        _s.oMC.className = (sClass?sClass+' ':_swfCSS.swfDefault) + (extraClass?' '+extraClass:'');
-        _s.oMC.appendChild(oMovie);
-        if (_isIE) {
-          oEl = _s.oMC.appendChild(_doc.createElement('div'));
-          oEl.className = _swfCSS.swfBox;
-          oEl.innerHTML = movieHTML;
-        }
-        _appendSuccess = true;
-      }
-    }
-    _didAppend = true;
-    _initMsg();
-    return true;
-  };
-  _initMovie = function() {
-    if (_s.html5Only) {
-      _createMovie();
-      return false;
-    }
-    if (_flash) {
-      return false;
-    }
-    _flash = _s.getMovie(_s.id);
-    if (!_flash) {
-      if (!_oRemoved) {
-        _createMovie(_s.id, _s.url);
-      } else {
-        if (!_isIE) {
-          _s.oMC.appendChild(_oRemoved);
-        } else {
-          _s.oMC.innerHTML = _oRemovedHTML;
-        }
-        _oRemoved = null;
-        _didAppend = true;
-      }
-      _flash = _s.getMovie(_s.id);
-    }
-    if (_s.oninitmovie instanceof Function) {
-      setTimeout(_s.oninitmovie, 1);
-    }
-    return true;
-  };
-  _delayWaitForEI = function() {
-    setTimeout(_waitForEI, 1000);
-  };
-  _waitForEI = function() {
-    if (_waitingForEI) {
-      return false;
-    }
-    _waitingForEI = true;
-    _event.remove(_win, 'load', _delayWaitForEI);
-    if (_tryInitOnFocus && !_isFocused) {
-      return false;
-    }
-    var p;
-    if (!_didInit) {
-      p = _s.getMoviePercent();
-    }
-    setTimeout(function() {
-      p = _s.getMoviePercent();
-      if (!_didInit && _okToDisable) {
-        if (p === null) {
-          if (_s.useFlashBlock || _s.flashLoadTimeout === 0) {
-            if (_s.useFlashBlock) {
-              _flashBlockHandler();
-            }
-          } else {
-            _failSafely(true);
-          }
-        } else {
-          if (_s.flashLoadTimeout === 0) {
-          } else {
-            _failSafely(true);
-          }
-        }
-      }
-    }, _s.flashLoadTimeout);
-  };
-  _handleFocus = function() {
-    function cleanup() {
-      _event.remove(_win, 'focus', _handleFocus);
-      _event.remove(_win, 'load', _handleFocus);
-    }
-    if (_isFocused || !_tryInitOnFocus) {
-      cleanup();
-      return true;
-    }
-    _okToDisable = true;
-    _isFocused = true;
-    if (_isSafari && _tryInitOnFocus) {
-      _event.remove(_win, 'mousemove', _handleFocus);
-    }
-    _waitingForEI = false;
-    cleanup();
-    return true;
-  };
-  _showSupport = function() {
-    var item, tests = [];
-    if (_s.useHTML5Audio && _s.hasHTML5) {
-      for (item in _s.audioFormats) {
-        if (_s.audioFormats.hasOwnProperty(item)) {
-          tests.push(item + ': ' + _s.html5[item] + (!_s.html5[item] && _hasFlash && _s.flash[item] ? ' (using flash)' : (_s.preferFlash && _s.flash[item] && _hasFlash ? ' (preferring flash)': (!_s.html5[item] ? ' (' + (_s.audioFormats[item].required ? 'required, ':'') + 'and no flash support)' : ''))));
-        }
-      }
-    }
-  };
-  _initComplete = function(bNoDisable) {
-    if (_didInit) {
-      return false;
-    }
-    if (_s.html5Only) {
-      _didInit = true;
-      _initUserOnload();
-      return true;
-    }
-    var wasTimeout = (_s.useFlashBlock && _s.flashLoadTimeout && !_s.getMoviePercent()),
-        error;
-    if (!wasTimeout) {
-      _didInit = true;
-      if (_disabled) {
-        error = {type: (!_hasFlash && _needsFlash ? 'NO_FLASH' : 'INIT_TIMEOUT')};
-      }
-    }
-    if (_disabled || bNoDisable) {
-      if (_s.useFlashBlock && _s.oMC) {
-        _s.oMC.className = _getSWFCSS() + ' ' + (_s.getMoviePercent() === null?_swfCSS.swfTimedout:_swfCSS.swfError);
-      }
-      _processOnEvents({type:'ontimeout', error:error});
-      _catchError(error);
-      return false;
-    } else {
-    }
-    if (_s.waitForWindowLoad && !_windowLoaded) {
-      _event.add(_win, 'load', _initUserOnload);
-      return false;
-    } else {
-      _initUserOnload();
-    }
-    return true;
-  };
-  _init = function() {
-    if (_didInit) {
-      return false;
-    }
-    function _cleanup() {
-      _event.remove(_win, 'load', _s.beginDelayedInit);
-    }
-    if (_s.html5Only) {
-      if (!_didInit) {
-        _cleanup();
-        _s.enabled = true;
-        _initComplete();
-      }
-      return true;
-    }
-    _initMovie();
-    try {
-      _flash._externalInterfaceTest(false);
-      _setPolling(true, (_s.flashPollingInterval || (_s.useHighPerformance ? 10 : 50)));
-      if (!_s.debugMode) {
-        _flash._disableDebug();
-      }
-      _s.enabled = true;
-      if (!_s.html5Only) {
-        _event.add(_win, 'unload', _doNothing);
-      }
-    } catch(e) {
-      _catchError({type:'JS_TO_FLASH_EXCEPTION', fatal:true});
-      _failSafely(true);
-      _initComplete();
-      return false;
-    }
-    _initComplete();
-    _cleanup();
-    return true;
-  };
-  _domContentLoaded = function() {
-    if (_didDCLoaded) {
-      return false;
-    }
-    _didDCLoaded = true;
-    _initDebug();
-    if (!_hasFlash && _s.hasHTML5) {
-      _s.useHTML5Audio = true;
-      _s.preferFlash = false;
-    }
-    _testHTML5();
-    _s.html5.usingFlash = _featureCheck();
-    _needsFlash = _s.html5.usingFlash;
-    _showSupport();
-    if (!_hasFlash && _needsFlash) {
-      _s.flashLoadTimeout = 1;
-    }
-    if (_doc.removeEventListener) {
-      _doc.removeEventListener('DOMContentLoaded', _domContentLoaded, false);
-    }
-    _initMovie();
-    return true;
-  };
-  _domContentLoadedIE = function() {
-    if (_doc.readyState === 'complete') {
-      _domContentLoaded();
-      _doc.detachEvent('onreadystatechange', _domContentLoadedIE);
-    }
-    return true;
-  };
-  _winOnLoad = function() {
-    _windowLoaded = true;
-    _event.remove(_win, 'load', _winOnLoad);
-  };
-  _detectFlash();
-  _event.add(_win, 'focus', _handleFocus);
-  _event.add(_win, 'load', _handleFocus);
-  _event.add(_win, 'load', _delayWaitForEI);
-  _event.add(_win, 'load', _winOnLoad);
-  if (_isSafari && _tryInitOnFocus) {
-    _event.add(_win, 'mousemove', _handleFocus);
-  }
-  if (_doc.addEventListener) {
-    _doc.addEventListener('DOMContentLoaded', _domContentLoaded, false);
-  } else if (_doc.attachEvent) {
-    _doc.attachEvent('onreadystatechange', _domContentLoadedIE);
-  } else {
-    _catchError({type:'NO_DOM2_EVENTS', fatal:true});
-  }
-  if (_doc.readyState === 'complete') {
-    setTimeout(_domContentLoaded,100);
-  }
-}
-// SM2_DEFER details: http://www.schillmania.com/projects/soundmanager2/doc/getstarted/#lazy-loading
-if (typeof SM2_DEFER === 'undefined' || !SM2_DEFER) {
-  soundManager = new SoundManager();
-}
-window.SoundManager = SoundManager;
-window.soundManager = soundManager;
-}(window));
\ No newline at end of file
diff --git a/inc/SoundManager2/script/soundmanager2.js b/inc/SoundManager2/script/soundmanager2.js
deleted file mode 100755
index 4b115c3..0000000
--- a/inc/SoundManager2/script/soundmanager2.js
+++ /dev/null
@@ -1,5019 +0,0 @@
-/** @license
- *
- * SoundManager 2: JavaScript Sound for the Web
- * ----------------------------------------------
- * http://schillmania.com/projects/soundmanager2/
- *
- * Copyright (c) 2007, Scott Schiller. All rights reserved.
- * Code provided under the BSD License:
- * http://schillmania.com/projects/soundmanager2/license.txt
- *
- * V2.97a.20111220
- */
-
-/*global window, SM2_DEFER, sm2Debugger, console, document, navigator, setTimeout, setInterval, clearInterval, Audio */
-/* jslint regexp: true, sloppy: true, white: true, nomen: true, plusplus: true */
-
-/**
- * About this file
- * ---------------
- * This is the fully-commented source version of the SoundManager 2 API,
- * recommended for use during development and testing.
- *
- * See soundmanager2-nodebug-jsmin.js for an optimized build (~10KB with gzip.)
- * http://schillmania.com/projects/soundmanager2/doc/getstarted/#basic-inclusion
- * Alternately, serve this file with gzip for 75% compression savings (~30KB over HTTP.)
- *
- * You may notice <d> and </d> comments in this source; these are delimiters for
- * debug blocks which are removed in the -nodebug builds, further optimizing code size.
- *
- * Also, as you may note: Whoa, reliable cross-platform/device audio support is hard! ;)
- */
-
-(function(window) {
-
-var soundManager = null;
-
-/**
- * The SoundManager constructor.
- *
- * @constructor
- * @param {string} smURL Optional: Path to SWF files
- * @param {string} smID Optional: The ID to use for the SWF container element
- * @this {SoundManager}
- * @return {SoundManager} The new SoundManager instance
- */
-
-function SoundManager(smURL, smID) {
-  // Top-level configuration options
-
-  this.flashVersion = 8;             // flash build to use (8 or 9.) Some API features require 9.
-  this.debugMode = true;             // enable debugging output (console.log() with HTML fallback)
-  this.debugFlash = false;           // enable debugging output inside SWF, troubleshoot Flash/browser issues
-  this.useConsole = true;            // use console.log() if available (otherwise, writes to #soundmanager-debug element)
-  this.consoleOnly = true;           // if console is being used, do not create/write to #soundmanager-debug
-  this.waitForWindowLoad = false;    // force SM2 to wait for window.onload() before trying to call soundManager.onload()
-  this.bgColor = '#ffffff';          // SWF background color. N/A when wmode = 'transparent'
-  this.useHighPerformance = false;   // position:fixed flash movie can help increase js/flash speed, minimize lag
-  this.flashPollingInterval = null;  // msec affecting whileplaying/loading callback frequency. If null, default of 50 msec is used.
-  this.html5PollingInterval = null;  // msec affecting whileplaying() for HTML5 audio, excluding mobile devices. If null, native HTML5 update events are used.
-  this.flashLoadTimeout = 1000;      // msec to wait for flash movie to load before failing (0 = infinity)
-  this.wmode = null;                 // flash rendering mode - null, 'transparent', or 'opaque' (last two allow z-index to work)
-  this.allowScriptAccess = 'always'; // for scripting the SWF (object/embed property), 'always' or 'sameDomain'
-  this.useFlashBlock = false;        // *requires flashblock.css, see demos* - allow recovery from flash blockers. Wait indefinitely and apply timeout CSS to SWF, if applicable.
-  this.useHTML5Audio = true;         // use HTML5 Audio() where API is supported (most Safari, Chrome versions), Firefox (no MP3/MP4.) Ideally, transparent vs. Flash API where possible.
-  this.html5Test = /^(probably|maybe)$/i; // HTML5 Audio() format support test. Use /^probably$/i; if you want to be more conservative.
-  this.preferFlash = true;           // overrides useHTML5audio. if true and flash support present, will try to use flash for MP3/MP4 as needed since HTML5 audio support is still quirky in browsers.
-  this.noSWFCache = false;           // if true, appends ?ts={date} to break aggressive SWF caching.
-
-  this.audioFormats = {
-
-    /**
-     * determines HTML5 support + flash requirements.
-     * if no support (via flash and/or HTML5) for a "required" format, SM2 will fail to start.
-     * flash fallback is used for MP3 or MP4 if HTML5 can't play it (or if preferFlash = true)
-     * multiple MIME types may be tested while trying to get a positive canPlayType() response.
-     */
-
-    'mp3': {
-      'type': ['audio/mpeg; codecs="mp3"', 'audio/mpeg', 'audio/mp3', 'audio/MPA', 'audio/mpa-robust'],
-      'required': true
-    },
-
-    'mp4': {
-      'related': ['aac','m4a'], // additional formats under the MP4 container
-      'type': ['audio/mp4; codecs="mp4a.40.2"', 'audio/aac', 'audio/x-m4a', 'audio/MP4A-LATM', 'audio/mpeg4-generic'],
-      'required': false
-    },
-
-    'ogg': {
-      'type': ['audio/ogg; codecs=vorbis'],
-      'required': false
-    },
-
-    'wav': {
-      'type': ['audio/wav; codecs="1"', 'audio/wav', 'audio/wave', 'audio/x-wav'],
-      'required': false
-    }
-
-  };
-
-  this.defaultOptions = {
-
-    /**
-     * the default configuration for sound objects made with createSound() and related methods
-     * eg., volume, auto-load behaviour and so forth
-     */
-
-    'autoLoad': false,        // enable automatic loading (otherwise .load() will be called on demand with .play(), the latter being nicer on bandwidth - if you want to .load yourself, you also can)
-    'autoPlay': false,        // enable playing of file as soon as possible (much faster if "stream" is true)
-    'from': null,             // position to start playback within a sound (msec), default = beginning
-    'loops': 1,               // how many times to repeat the sound (position will wrap around to 0, setPosition() will break out of loop when >0)
-    'onid3': null,            // callback function for "ID3 data is added/available"
-    'onload': null,           // callback function for "load finished"
-    'whileloading': null,     // callback function for "download progress update" (X of Y bytes received)
-    'onplay': null,           // callback for "play" start
-    'onpause': null,          // callback for "pause"
-    'onresume': null,         // callback for "resume" (pause toggle)
-    'whileplaying': null,     // callback during play (position update)
-    'onposition': null,       // object containing times and function callbacks for positions of interest
-    'onstop': null,           // callback for "user stop"
-    'onfailure': null,        // callback function for when playing fails
-    'onfinish': null,         // callback function for "sound finished playing"
-    'multiShot': true,        // let sounds "restart" or layer on top of each other when played multiple times, rather than one-shot/one at a time
-    'multiShotEvents': false, // fire multiple sound events (currently onfinish() only) when multiShot is enabled
-    'position': null,         // offset (milliseconds) to seek to within loaded sound data.
-    'pan': 0,                 // "pan" settings, left-to-right, -100 to 100
-    'stream': true,           // allows playing before entire file has loaded (recommended)
-    'to': null,               // position to end playback within a sound (msec), default = end
-    'type': null,             // MIME-like hint for file pattern / canPlay() tests, eg. audio/mp3
-    'usePolicyFile': false,   // enable crossdomain.xml request for audio on remote domains (for ID3/waveform access)
-    'volume': 100             // self-explanatory. 0-100, the latter being the max.
-
-  };
-
-  this.flash9Options = {
-
-    /**
-     * flash 9-only options,
-     * merged into defaultOptions if flash 9 is being used
-     */
-
-    'isMovieStar': null,      // "MovieStar" MPEG4 audio mode. Null (default) = auto detect MP4, AAC etc. based on URL. true = force on, ignore URL
-    'usePeakData': false,     // enable left/right channel peak (level) data
-    'useWaveformData': false, // enable sound spectrum (raw waveform data) - NOTE: May increase CPU load.
-    'useEQData': false,       // enable sound EQ (frequency spectrum data) - NOTE: May increase CPU load.
-    'onbufferchange': null,   // callback for "isBuffering" property change
-    'ondataerror': null       // callback for waveform/eq data access error (flash playing audio in other tabs/domains)
-
-  };
-
-  this.movieStarOptions = {
-
-    /**
-     * flash 9.0r115+ MPEG4 audio options,
-     * merged into defaultOptions if flash 9+movieStar mode is enabled
-     */
-
-    'bufferTime': 3,          // seconds of data to buffer before playback begins (null = flash default of 0.1 seconds - if AAC playback is gappy, try increasing.)
-    'serverURL': null,        // rtmp: FMS or FMIS server to connect to, required when requesting media via RTMP or one of its variants
-    'onconnect': null,        // rtmp: callback for connection to flash media server
-    'duration': null          // rtmp: song duration (msec)
-
-  };
-
-  // HTML attributes (id + class names) for the SWF container
-
-  this.movieID = 'sm2-container';
-  this.id = (smID || 'sm2movie');
-
-  this.debugID = 'soundmanager-debug';
-  this.debugURLParam = /([#?&])debug=1/i;
-
-  // dynamic attributes
-
-  this.versionNumber = 'V2.97a.20111220';
-  this.version = null;
-  this.movieURL = null;
-  this.url = (smURL || null);
-  this.altURL = null;
-  this.swfLoaded = false;
-  this.enabled = false;
-  this.oMC = null;
-  this.sounds = {};
-  this.soundIDs = [];
-  this.muted = false;
-  this.didFlashBlock = false;
-  this.filePattern = null;
-
-  this.filePatterns = {
-
-    'flash8': /\.mp3(\?.*)?$/i,
-    'flash9': /\.mp3(\?.*)?$/i
-
-  };
-
-  // support indicators, set at init
-
-  this.features = {
-
-    'buffering': false,
-    'peakData': false,
-    'waveformData': false,
-    'eqData': false,
-    'movieStar': false
-
-  };
-
-  // flash sandbox info, used primarily in troubleshooting
-
-  this.sandbox = {
-
-    // <d>
-    'type': null,
-    'types': {
-      'remote': 'remote (domain-based) rules',
-      'localWithFile': 'local with file access (no internet access)',
-      'localWithNetwork': 'local with network (internet access only, no local access)',
-      'localTrusted': 'local, trusted (local+internet access)'
-    },
-    'description': null,
-    'noRemote': null,
-    'noLocal': null
-    // </d>
-
-  };
-
-  /**
-   * basic HTML5 Audio() support test
-   * try...catch because of IE 9 "not implemented" nonsense
-   * https://github.com/Modernizr/Modernizr/issues/224
-   */
-
-  this.hasHTML5 = (function() {
-    try {
-      return (typeof Audio !== 'undefined' && typeof new Audio().canPlayType !== 'undefined');
-    } catch(e) {
-      return false;
-    }
-  }());
-
-  /**
-   * format support (html5/flash)
-   * stores canPlayType() results based on audioFormats.
-   * eg. { mp3: boolean, mp4: boolean }
-   * treat as read-only.
-   */
-
-  this.html5 = {
-    'usingFlash': null // set if/when flash fallback is needed
-  };
-
-  this.flash = {}; // file type support hash
-
-  this.html5Only = false;   // determined at init time
-  this.ignoreFlash = false; // used for special cases (eg. iPad/iPhone/palm OS?)
-
-  /**
-   * a few private internals (OK, a lot. :D)
-   */
-
-  var SMSound,
-  _s = this, _flash = null, _sm = 'soundManager', _smc = _sm+'::', _h5 = 'HTML5::', _id, _ua = navigator.userAgent, _win = window, _wl = _win.location.href.toString(), _doc = document, _doNothing, _init, _fV, _on_queue = [], _debugOpen = true, _debugTS, _didAppend = false, _appendSuccess = false, _didInit = false, _disabled = false, _windowLoaded = false, _wDS, _wdCount = 0, _initComplete, _mixin, _addOnEvent, _processOnEvents, _initUserOnload, _delayWaitForEI, _waitForEI, _setVersionInfo, _handleFocus, _strings, _initMovie, _domContentLoaded, _winOnLoad, _didDCLoaded, _getDocument, _createMovie, _catchError, _setPolling, _initDebug, _debugLevels = ['log', 'info', 'warn', 'error'], _defaultFlashVersion = 8, _disableObject, _failSafely, _normalizeMovieURL, _oRemoved = null, _oRemovedHTML = null, _str, _flashBlockHandler, _getSWFCSS, _swfCSS, _toggleDebug, _loopFix, _policyFix, _complain, _idCheck, _waitingForEI = false, _initPending = false, _smTimer, _onTimer, _startTimer, _stopTimer, _timerExecute, _h5TimerCount = 0, _h5IntervalTimer = null, _parseURL,
-  _needsFlash = null, _featureCheck, _html5OK, _html5CanPlay, _html5Ext, _html5Unload, _domContentLoadedIE, _testHTML5, _event, _slice = Array.prototype.slice, _useGlobalHTML5Audio = false, _hasFlash, _detectFlash, _badSafariFix, _html5_events, _showSupport,
-  _is_iDevice = _ua.match(/(ipad|iphone|ipod)/i), _is_firefox = _ua.match(/firefox/i), _is_android = _ua.match(/droid/i), _isIE = _ua.match(/msie/i), _isWebkit = _ua.match(/webkit/i), _isSafari = (_ua.match(/safari/i) && !_ua.match(/chrome/i)), _isOpera = (_ua.match(/opera/i)), 
-  _likesHTML5 = (_ua.match(/(mobile|pre\/|xoom)/i) || _is_iDevice),
-  _isBadSafari = (!_wl.match(/usehtml5audio/i) && !_wl.match(/sm2\-ignorebadua/i) && _isSafari && !_ua.match(/silk/i) && _ua.match(/OS X 10_6_([3-7])/i)), // Safari 4 and 5 (excluding Kindle Fire, "Silk") occasionally fail to load/play HTML5 audio on Snow Leopard 10.6.3 through 10.6.7 due to bug(s) in QuickTime X and/or other underlying frameworks. :/ Confirmed bug. https://bugs.webkit.org/show_bug.cgi?id=32159
-  _hasConsole = (typeof console !== 'undefined' && typeof console.log !== 'undefined'), _isFocused = (typeof _doc.hasFocus !== 'undefined'?_doc.hasFocus():null), _tryInitOnFocus = (_isSafari && typeof _doc.hasFocus === 'undefined'), _okToDisable = !_tryInitOnFocus, _flashMIME = /(mp3|mp4|mpa)/i,
-  _emptyURL = 'about:blank', // safe URL to unload, or load nothing from (flash 8 + most HTML5 UAs)
-  _overHTTP = (_doc.location?_doc.location.protocol.match(/http/i):null),
-  _http = (!_overHTTP ? 'http:/'+'/' : ''),
-  // mp3, mp4, aac etc.
-  _netStreamMimeTypes = /^\s*audio\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4||m4v|m4a|mp4v|3gp|3g2)\s*(?:$|;)/i,
-  // Flash v9.0r115+ "moviestar" formats
-  _netStreamTypes = ['mpeg4', 'aac', 'flv', 'mov', 'mp4', 'm4v', 'f4v', 'm4a', 'mp4v', '3gp', '3g2'],
-  _netStreamPattern = new RegExp('\\.(' + _netStreamTypes.join('|') + ')(\\?.*)?$', 'i');
-
-  this.mimePattern = /^\s*audio\/(?:x-)?(?:mp(?:eg|3))\s*(?:$|;)/i; // default mp3 set
-
-  // use altURL if not "online"
-  this.useAltURL = !_overHTTP;
-  this._global_a = null;
-
-  _swfCSS = {
-
-    'swfBox': 'sm2-object-box',
-    'swfDefault': 'movieContainer',
-    'swfError': 'swf_error', // SWF loaded, but SM2 couldn't start (other error)
-    'swfTimedout': 'swf_timedout',
-    'swfLoaded': 'swf_loaded',
-    'swfUnblocked': 'swf_unblocked', // or loaded OK
-    'sm2Debug': 'sm2_debug',
-    'highPerf': 'high_performance',
-    'flashDebug': 'flash_debug'
-
-  };
-
-  if (_likesHTML5) {
-
-    // prefer HTML5 for mobile + tablet-like devices, probably more reliable vs. flash at this point.
-    _s.useHTML5Audio = true;
-    _s.preferFlash = false;
-
-    if (_is_iDevice) {
-      // by default, use global feature. iOS onfinish() -> next may fail otherwise.
-      _s.ignoreFlash = true;
-      _useGlobalHTML5Audio = true;
-    }
-
-  }
-
-  /**
-   * Public SoundManager API
-   * -----------------------
-   */
-
-  this.ok = function() {
-
-    return (_needsFlash?(_didInit && !_disabled):(_s.useHTML5Audio && _s.hasHTML5));
-
-  };
-
-  this.supported = this.ok; // legacy
-
-  this.getMovie = function(smID) {
-
-    // safety net: some old browsers differ on SWF references, possibly related to ExternalInterface / flash version
-    return _id(smID) || _doc[smID] || _win[smID];
-
-  };
-
-  /**
-   * Creates a SMSound sound object instance.
-   *
-   * @param {object} oOptions Sound options (at minimum, id and url are required.)
-   * @return {object} SMSound The new SMSound object.
-   */
-
-  this.createSound = function(oOptions) {
-
-    var _cs, _cs_string,
-    thisOptions = null, oSound = null, _tO = null;
-
-    // <d>
-    _cs = _sm+'.createSound(): ';
-    _cs_string = _cs + _str(!_didInit?'notReady':'notOK');
-    // </d>
-
-    if (!_didInit || !_s.ok()) {
-      _complain(_cs_string);
-      return false;
-    }
-
-    if (arguments.length === 2) {
-      // function overloading in JS! :) ..assume simple createSound(id,url) use case
-      oOptions = {
-        'id': arguments[0],
-        'url': arguments[1]
-      };
-    }
-
-    // inherit from defaultOptions
-    thisOptions = _mixin(oOptions);
-
-    thisOptions.url = _parseURL(thisOptions.url);
-
-    // local shortcut
-    _tO = thisOptions;
-
-    // <d>
-    if (_tO.id.toString().charAt(0).match(/^[0-9]$/)) {
-      _s._wD(_cs + _str('badID', _tO.id), 2);
-    }
-
-    _s._wD(_cs + _tO.id + ' (' + _tO.url + ')', 1);
-    // </d>
-
-    if (_idCheck(_tO.id, true)) {
-      _s._wD(_cs + _tO.id + ' exists', 1);
-      return _s.sounds[_tO.id];
-    }
-
-    function make() {
-
-      thisOptions = _loopFix(thisOptions);
-      _s.sounds[_tO.id] = new SMSound(_tO);
-      _s.soundIDs.push(_tO.id);
-      return _s.sounds[_tO.id];
-
-    }
-
-    if (_html5OK(_tO)) {
-
-      oSound = make();
-      _s._wD('Loading sound '+_tO.id+' via HTML5');
-      oSound._setup_html5(_tO);
-
-    } else {
-
-      if (_fV > 8) {
-        if (_tO.isMovieStar === null) {
-          // attempt to detect MPEG-4 formats
-          _tO.isMovieStar = (_tO.serverURL || (_tO.type ? _tO.type.match(_netStreamMimeTypes) : false) || _tO.url.match(_netStreamPattern));
-        }
-        // <d>
-        if (_tO.isMovieStar) {
-          _s._wD(_cs + 'using MovieStar handling');
-        }
-        // </d>
-        if (_tO.isMovieStar) {
-          if (_tO.usePeakData) {
-            _wDS('noPeak');
-            _tO.usePeakData = false;
-          }
-          // <d>
-          if (_tO.loops > 1) {
-            _wDS('noNSLoop');
-          }
-          // </d>
-        }
-      }
-
-      _tO = _policyFix(_tO, _cs);
-      oSound = make();
-
-      if (_fV === 8) {
-        _flash._createSound(_tO.id, _tO.loops||1, _tO.usePolicyFile);
-      } else {
-        _flash._createSound(_tO.id, _tO.url, _tO.usePeakData, _tO.useWaveformData, _tO.useEQData, _tO.isMovieStar, (_tO.isMovieStar?_tO.bufferTime:false), _tO.loops||1, _tO.serverURL, _tO.duration||null, _tO.autoPlay, true, _tO.autoLoad, _tO.usePolicyFile);
-        if (!_tO.serverURL) {
-          // We are connected immediately
-          oSound.connected = true;
-          if (_tO.onconnect) {
-            _tO.onconnect.apply(oSound);
-          }
-        }
-      }
-
-      if (!_tO.serverURL && (_tO.autoLoad || _tO.autoPlay)) {
-        // call load for non-rtmp streams
-        oSound.load(_tO);
-      }
-
-    }
-
-    // rtmp will play in onconnect
-    if (!_tO.serverURL && _tO.autoPlay) {
-      oSound.play();
-    }
-
-    return oSound;
-
-  };
-
-  /**
-   * Destroys a SMSound sound object instance.
-   *
-   * @param {string} sID The ID of the sound to destroy
-   */
-
-  this.destroySound = function(sID, _bFromSound) {
-
-    // explicitly destroy a sound before normal page unload, etc.
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-
-    var oS = _s.sounds[sID], i;
-
-    // Disable all callbacks while the sound is being destroyed
-    oS._iO = {};
-
-    oS.stop();
-    oS.unload();
-
-    for (i = 0; i < _s.soundIDs.length; i++) {
-      if (_s.soundIDs[i] === sID) {
-        _s.soundIDs.splice(i, 1);
-        break;
-      }
-    }
-
-    if (!_bFromSound) {
-      // ignore if being called from SMSound instance
-      oS.destruct(true);
-    }
-
-    oS = null;
-    delete _s.sounds[sID];
-
-    return true;
-
-  };
-
-  /**
-   * Calls the load() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @param {object} oOptions Optional: Sound options
-   */
-
-  this.load = function(sID, oOptions) {
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].load(oOptions);
-
-  };
-
-  /**
-   * Calls the unload() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   */
-
-  this.unload = function(sID) {
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].unload();
-
-  };
-
-  /**
-   * Calls the onPosition() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @param {number} nPosition The position to watch for
-   * @param {function} oMethod The relevant callback to fire
-   * @param {object} oScope Optional: The scope to apply the callback to
-   * @return {SMSound} The SMSound object
-   */
-
-  this.onPosition = function(sID, nPosition, oMethod, oScope) {
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].onposition(nPosition, oMethod, oScope);
-
-  };
-
-  // legacy/backwards-compability: lower-case method name
-  this.onposition = this.onPosition;
-
-  /**
-   * Calls the clearOnPosition() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @param {number} nPosition The position to watch for
-   * @param {function} oMethod Optional: The relevant callback to fire
-   * @return {SMSound} The SMSound object
-   */
-
-  this.clearOnPosition = function(sID, nPosition, oMethod) {
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].clearOnPosition(nPosition, oMethod);
-
-  };
-
-  /**
-   * Calls the play() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @param {object} oOptions Optional: Sound options
-   * @return {SMSound} The SMSound object
-   */
-
-  this.play = function(sID, oOptions) {
-
-    if (!_didInit || !_s.ok()) {
-      _complain(_sm+'.play(): ' + _str(!_didInit?'notReady':'notOK'));
-      return false;
-    }
-
-    if (!_idCheck(sID)) {
-      if (!(oOptions instanceof Object)) {
-        // overloading use case: play('mySound','/path/to/some.mp3');
-        oOptions = {
-          url: oOptions
-        };
-      }
-      if (oOptions && oOptions.url) {
-        // overloading use case, create+play: .play('someID',{url:'/path/to.mp3'});
-        _s._wD(_sm+'.play(): attempting to create "' + sID + '"', 1);
-        oOptions.id = sID;
-        return _s.createSound(oOptions).play();
-      } else {
-        return false;
-      }
-    }
-
-    return _s.sounds[sID].play(oOptions);
-
-  };
-
-  this.start = this.play; // just for convenience
-
-  /**
-   * Calls the setPosition() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @param {number} nMsecOffset Position (milliseconds)
-   * @return {SMSound} The SMSound object
-   */
-
-  this.setPosition = function(sID, nMsecOffset) {
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].setPosition(nMsecOffset);
-
-  };
-
-  /**
-   * Calls the stop() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @return {SMSound} The SMSound object
-   */
-
-  this.stop = function(sID) {
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-
-    _s._wD(_sm+'.stop(' + sID + ')', 1);
-    return _s.sounds[sID].stop();
-
-  };
-
-  /**
-   * Stops all currently-playing sounds.
-   */
-
-  this.stopAll = function() {
-
-    var oSound;
-    _s._wD(_sm+'.stopAll()', 1);
-
-    for (oSound in _s.sounds) {
-      if (_s.sounds.hasOwnProperty(oSound)) {
-        // apply only to sound objects
-        _s.sounds[oSound].stop();
-      }
-    }
-
-  };
-
-  /**
-   * Calls the pause() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @return {SMSound} The SMSound object
-   */
-
-  this.pause = function(sID) {
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].pause();
-
-  };
-
-  /**
-   * Pauses all currently-playing sounds.
-   */
-
-  this.pauseAll = function() {
-
-    var i;
-    for (i = _s.soundIDs.length; i--;) {
-      _s.sounds[_s.soundIDs[i]].pause();
-    }
-
-  };
-
-  /**
-   * Calls the resume() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @return {SMSound} The SMSound object
-   */
-
-  this.resume = function(sID) {
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].resume();
-
-  };
-
-  /**
-   * Resumes all currently-paused sounds.
-   */
-
-  this.resumeAll = function() {
-
-    var i;
-    for (i = _s.soundIDs.length; i--;) {
-      _s.sounds[_s.soundIDs[i]].resume();
-    }
-
-  };
-
-  /**
-   * Calls the togglePause() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @return {SMSound} The SMSound object
-   */
-
-  this.togglePause = function(sID) {
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].togglePause();
-
-  };
-
-  /**
-   * Calls the setPan() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @param {number} nPan The pan value (-100 to 100)
-   * @return {SMSound} The SMSound object
-   */
-
-  this.setPan = function(sID, nPan) {
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].setPan(nPan);
-
-  };
-
-  /**
-   * Calls the setVolume() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @param {number} nVol The volume value (0 to 100)
-   * @return {SMSound} The SMSound object
-   */
-
-  this.setVolume = function(sID, nVol) {
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].setVolume(nVol);
-
-  };
-
-  /**
-   * Calls the mute() method of either a single SMSound object by ID, or all sound objects.
-   *
-   * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)
-   */
-
-  this.mute = function(sID) {
-
-    var i = 0;
-
-    if (typeof sID !== 'string') {
-      sID = null;
-    }
-
-    if (!sID) {
-      _s._wD(_sm+'.mute(): Muting all sounds');
-      for (i = _s.soundIDs.length; i--;) {
-        _s.sounds[_s.soundIDs[i]].mute();
-      }
-      _s.muted = true;
-    } else {
-      if (!_idCheck(sID)) {
-        return false;
-      }
-      _s._wD(_sm+'.mute(): Muting "' + sID + '"');
-      return _s.sounds[sID].mute();
-    }
-
-    return true;
-
-  };
-
-  /**
-   * Mutes all sounds.
-   */
-
-  this.muteAll = function() {
-
-    _s.mute();
-
-  };
-
-  /**
-   * Calls the unmute() method of either a single SMSound object by ID, or all sound objects.
-   *
-   * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)
-   */
-
-  this.unmute = function(sID) {
-
-    var i;
-
-    if (typeof sID !== 'string') {
-      sID = null;
-    }
-
-    if (!sID) {
-
-      _s._wD(_sm+'.unmute(): Unmuting all sounds');
-      for (i = _s.soundIDs.length; i--;) {
-        _s.sounds[_s.soundIDs[i]].unmute();
-      }
-      _s.muted = false;
-
-    } else {
-
-      if (!_idCheck(sID)) {
-        return false;
-      }
-      _s._wD(_sm+'.unmute(): Unmuting "' + sID + '"');
-      return _s.sounds[sID].unmute();
-
-    }
-
-    return true;
-
-  };
-
-  /**
-   * Unmutes all sounds.
-   */
-
-  this.unmuteAll = function() {
-
-    _s.unmute();
-
-  };
-
-  /**
-   * Calls the toggleMute() method of a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @return {SMSound} The SMSound object
-   */
-
-  this.toggleMute = function(sID) {
-
-    if (!_idCheck(sID)) {
-      return false;
-    }
-    return _s.sounds[sID].toggleMute();
-
-  };
-
-  /**
-   * Retrieves the memory used by the flash plugin.
-   *
-   * @return {number} The amount of memory in use
-   */
-
-  this.getMemoryUse = function() {
-
-    // flash-only
-    var ram = 0;
-
-    if (_flash && _fV !== 8) {
-      ram = parseInt(_flash._getMemoryUse(), 10);
-    }
-
-    return ram;
-
-  };
-
-  /**
-   * Undocumented: NOPs soundManager and all SMSound objects.
-   */
-
-  this.disable = function(bNoDisable) {
-
-    // destroy all functions
-    var i;
-
-    if (typeof bNoDisable === 'undefined') {
-      bNoDisable = false;
-    }
-
-    if (_disabled) {
-      return false;
-    }
-
-    _disabled = true;
-    _wDS('shutdown', 1);
-
-    for (i = _s.soundIDs.length; i--;) {
-      _disableObject(_s.sounds[_s.soundIDs[i]]);
-    }
-
-    // fire "complete", despite fail
-    _initComplete(bNoDisable);
-    _event.remove(_win, 'load', _initUserOnload);
-
-    return true;
-
-  };
-
-  /**
-   * Determines playability of a MIME type, eg. 'audio/mp3'.
-   */
-
-  this.canPlayMIME = function(sMIME) {
-
-    var result;
-
-    if (_s.hasHTML5) {
-      result = _html5CanPlay({type:sMIME});
-    }
-
-    if (!_needsFlash || result) {
-      // no flash, or OK
-      return result;
-    } else {
-      // if flash 9, test netStream (movieStar) types as well.
-      return (sMIME ? !!((_fV > 8 ? sMIME.match(_netStreamMimeTypes) : null) || sMIME.match(_s.mimePattern)) : null);
-    }
-
-  };
-
-  /**
-   * Determines playability of a URL based on audio support.
-   *
-   * @param {string} sURL The URL to test
-   * @return {boolean} URL playability
-   */
-
-  this.canPlayURL = function(sURL) {
-
-    var result;
-
-    if (_s.hasHTML5) {
-      result = _html5CanPlay({url: sURL});
-    }
-
-    if (!_needsFlash || result) {
-      // no flash, or OK
-      return result;
-    } else {
-      return (sURL ? !!(sURL.match(_s.filePattern)) : null);
-    }
-
-  };
-
-  /**
-   * Determines playability of an HTML DOM &lt;a&gt; object (or similar object literal) based on audio support.
-   *
-   * @param {object} oLink an HTML DOM &lt;a&gt; object or object literal including href and/or type attributes
-   * @return {boolean} URL playability
-   */
-
-  this.canPlayLink = function(oLink) {
-
-    if (typeof oLink.type !== 'undefined' && oLink.type) {
-      if (_s.canPlayMIME(oLink.type)) {
-        return true;
-      }
-    }
-
-    return _s.canPlayURL(oLink.href);
-
-  };
-
-  /**
-   * Retrieves a SMSound object by ID.
-   *
-   * @param {string} sID The ID of the sound
-   * @return {SMSound} The SMSound object
-   */
-
-  this.getSoundById = function(sID, _suppressDebug) {
-
-    if (!sID) {
-      throw new Error(_sm+'.getSoundById(): sID is null/undefined');
-    }
-
-    var result = _s.sounds[sID];
-
-    // <d>
-    if (!result && !_suppressDebug) {
-      _s._wD('"' + sID + '" is an invalid sound ID.', 2);
-    }
-    // </d>
-
-    return result;
-
-  };
-
-  /**
-   * Queues a callback for execution when SoundManager has successfully initialized.
-   *
-   * @param {function} oMethod The callback method to fire
-   * @param {object} oScope Optional: The scope to apply to the callback
-   */
-
-  this.onready = function(oMethod, oScope) {
-
-    var sType = 'onready';
-
-    if (oMethod && oMethod instanceof Function) {
-
-      // <d>
-      if (_didInit) {
-        _s._wD(_str('queue', sType));
-      }
-      // </d>
-
-      if (!oScope) {
-        oScope = _win;
-      }
-
-      _addOnEvent(sType, oMethod, oScope);
-      _processOnEvents();
-
-      return true;
-
-    } else {
-
-      throw _str('needFunction', sType);
-
-    }
-
-  };
-
-  /**
-   * Queues a callback for execution when SoundManager has failed to initialize.
-   *
-   * @param {function} oMethod The callback method to fire
-   * @param {object} oScope Optional: The scope to apply to the callback
-   */
-
-  this.ontimeout = function(oMethod, oScope) {
-
-    var sType = 'ontimeout';
-
-    if (oMethod && oMethod instanceof Function) {
-
-      // <d>
-      if (_didInit) {
-        _s._wD(_str('queue', sType));
-      }
-      // </d>
-
-      if (!oScope) {
-        oScope = _win;
-      }
-
-      _addOnEvent(sType, oMethod, oScope);
-      _processOnEvents({type:sType});
-
-      return true;
-
-    } else {
-
-      throw _str('needFunction', sType);
-
-    }
-
-  };
-
-  /**
-   * Writes console.log()-style debug output to a console or in-browser element.
-   * Applies when SoundManager.debugMode = true
-   *
-   * @param {string} sText The console message
-   * @param {string} sType Optional: Log type of 'info', 'warn' or 'error'
-   * @param {object} Optional: The scope to apply to the callback
-   */
-
-  this._writeDebug = function(sText, sType, _bTimestamp) {
-
-    // pseudo-private console.log()-style output
-    // <d>
-
-    var sDID = 'soundmanager-debug', o, oItem, sMethod;
-
-    if (!_s.debugMode) {
-      return false;
-    }
-
-    if (typeof _bTimestamp !== 'undefined' && _bTimestamp) {
-      sText = sText + ' | ' + new Date().getTime();
-    }
-
-    if (_hasConsole && _s.useConsole) {
-      sMethod = _debugLevels[sType];
-      if (typeof console[sMethod] !== 'undefined') {
-        console[sMethod](sText);
-      } else {
-        console.log(sText);
-      }
-      if (_s.consoleOnly) {
-        return true;
-      }
-    }
-
-    try {
-
-      o = _id(sDID);
-
-      if (!o) {
-        return false;
-      }
-
-      oItem = _doc.createElement('div');
-
-      if (++_wdCount % 2 === 0) {
-        oItem.className = 'sm2-alt';
-      }
-
-      if (typeof sType === 'undefined') {
-        sType = 0;
-      } else {
-        sType = parseInt(sType, 10);
-      }
-
-      oItem.appendChild(_doc.createTextNode(sText));
-
-      if (sType) {
-        if (sType >= 2) {
-          oItem.style.fontWeight = 'bold';
-        }
-        if (sType === 3) {
-          oItem.style.color = '#ff3333';
-        }
-      }
-
-      // top-to-bottom
-      // o.appendChild(oItem);
-
-      // bottom-to-top
-      o.insertBefore(oItem, o.firstChild);
-
-    } catch(e) {
-      // oh well
-    }
-
-    o = null;
-    // </d>
-
-    return true;
-
-  };
-
-  // alias
-  this._wD = this._writeDebug;
-
-  /**
-   * Provides debug / state information on all SMSound objects.
-   */
-
-  this._debug = function() {
-
-    // <d>
-    var i, j;
-    _wDS('currentObj', 1);
-
-    for (i = 0, j = _s.soundIDs.length; i < j; i++) {
-      _s.sounds[_s.soundIDs[i]]._debug();
-    }
-    // </d>
-
-  };
-
-  /**
-   * Restarts and re-initializes the SoundManager instance.
-   */
-
-  this.reboot = function() {
-
-    // attempt to reset and init SM2
-    _s._wD(_sm+'.reboot()');
-
-    // <d>
-    if (_s.soundIDs.length) {
-      _s._wD('Destroying ' + _s.soundIDs.length + ' SMSound objects...');
-    }
-    // </d>
-
-    var i, j;
-
-    for (i = _s.soundIDs.length; i--;) {
-      _s.sounds[_s.soundIDs[i]].destruct();
-    }
-
-    // trash ze flash
-
-    try {
-      if (_isIE) {
-        _oRemovedHTML = _flash.innerHTML;
-      }
-      _oRemoved = _flash.parentNode.removeChild(_flash);
-      _s._wD('Flash movie removed.');
-    } catch(e) {
-      // uh-oh.
-      _wDS('badRemove', 2);
-    }
-
-    // actually, force recreate of movie.
-    _oRemovedHTML = _oRemoved = _needsFlash = null;
-
-    _s.enabled = _didDCLoaded = _didInit = _waitingForEI = _initPending = _didAppend = _appendSuccess = _disabled = _s.swfLoaded = false;
-    _s.soundIDs = _s.sounds = [];
-    _flash = null;
-
-    for (i in _on_queue) {
-      if (_on_queue.hasOwnProperty(i)) {
-        for (j = _on_queue[i].length; j--;) {
-          _on_queue[i][j].fired = false;
-        }
-      }
-    }
-
-    _s._wD(_sm + ': Rebooting...');
-    _win.setTimeout(_s.beginDelayedInit, 20);
-
-  };
-
-  /**
-   * Undocumented: Determines the SM2 flash movie's load progress.
-   *
-   * @return {number or null} Percent loaded, or if invalid/unsupported, null.
-   */
-
-  this.getMoviePercent = function() {
-
-    return (_flash && typeof _flash.PercentLoaded !== 'undefined' ? _flash.PercentLoaded() : null);
-
-  };
-
-  /**
-   * Additional helper for manually invoking SM2's init process after DOM Ready / window.onload().
-   */
-
-  this.beginDelayedInit = function() {
-
-    _windowLoaded = true;
-    _domContentLoaded();
-
-    setTimeout(function() {
-
-      if (_initPending) {
-        return false;
-      }
-
-      _createMovie();
-      _initMovie();
-      _initPending = true;
-
-      return true;
-
-    }, 20);
-
-    _delayWaitForEI();
-
-  };
-
-  /**
-   * Destroys the SoundManager instance and all SMSound instances.
-   */
-
-  this.destruct = function() {
-
-    _s._wD(_sm+'.destruct()');
-    _s.disable(true);
-
-  };
-
-  /**
-   * SMSound() (sound object) constructor
-   * ------------------------------------
-   *
-   * @param {object} oOptions Sound options (id and url are required attributes)
-   * @return {SMSound} The new SMSound object
-   */
-
-  SMSound = function(oOptions) {
-
-    var _t = this, _resetProperties, _add_html5_events, _remove_html5_events, _stop_html5_timer, _start_html5_timer, _attachOnPosition, _onplay_called = false, _onPositionItems = [], _onPositionFired = 0, _detachOnPosition, _applyFromTo, _lastURL = null;
-
-    var _lastHTML5State = {
-      // tracks duration + position (time)
-      duration: null,
-      time: null
-    };
-
-    this.sID = oOptions.id;
-    this.url = oOptions.url;
-    this.options = _mixin(oOptions);
-
-    // per-play-instance-specific options
-    this.instanceOptions = this.options;
-
-    // short alias
-    this._iO = this.instanceOptions;
-
-    // assign property defaults
-    this.pan = this.options.pan;
-    this.volume = this.options.volume;
-    this.isHTML5 = false;
-    this._a = null;
-
-    /**
-     * SMSound() public methods
-     * ------------------------
-     */
-
-    this.id3 = {};
-
-    /**
-     * Writes SMSound object parameters to debug console
-     */
-
-    this._debug = function() {
-
-      // <d>
-      // pseudo-private console.log()-style output
-
-      if (_s.debugMode) {
-
-        var stuff = null, msg = [], sF, sfBracket, maxLength = 64;
-
-        for (stuff in _t.options) {
-          if (_t.options[stuff] !== null) {
-            if (_t.options[stuff] instanceof Function) {
-              // handle functions specially
-              sF = _t.options[stuff].toString();
-              // normalize spaces
-              sF = sF.replace(/\s\s+/g, ' ');
-              sfBracket = sF.indexOf('{');
-              msg.push(' ' + stuff + ': {' + sF.substr(sfBracket + 1, (Math.min(Math.max(sF.indexOf('\n') - 1, maxLength), maxLength))).replace(/\n/g, '') + '... }');
-            } else {
-              msg.push(' ' + stuff + ': ' + _t.options[stuff]);
-            }
-          }
-        }
-
-        _s._wD('SMSound() merged options: {\n' + msg.join(', \n') + '\n}');
-
-      }
-      // </d>
-
-    };
-
-    // <d>
-    this._debug();
-    // </d>
-
-    /**
-     * Begins loading a sound per its *url*.
-     *
-     * @param {object} oOptions Optional: Sound options
-     * @return {SMSound} The SMSound object
-     */
-
-    this.load = function(oOptions) {
-
-      var oS = null, _iO;
-
-      if (typeof oOptions !== 'undefined') {
-        _t._iO = _mixin(oOptions, _t.options);
-        _t.instanceOptions = _t._iO;
-      } else {
-        oOptions = _t.options;
-        _t._iO = oOptions;
-        _t.instanceOptions = _t._iO;
-        if (_lastURL && _lastURL !== _t.url) {
-          _wDS('manURL');
-          _t._iO.url = _t.url;
-          _t.url = null;
-        }
-      }
-
-      if (!_t._iO.url) {
-        _t._iO.url = _t.url;
-      }
-
-      _t._iO.url = _parseURL(_t._iO.url);
-
-      _s._wD('SMSound.load(): ' + _t._iO.url, 1);
-
-      if (_t._iO.url === _t.url && _t.readyState !== 0 && _t.readyState !== 2) {
-        _wDS('onURL', 1);
-        // if loaded and an onload() exists, fire immediately.
-        if (_t.readyState === 3 && _t._iO.onload) {
-          // assume success based on truthy duration.
-          _t._iO.onload.apply(_t, [(!!_t.duration)]);
-        }
-        return _t;
-      }
-
-      // local shortcut
-      _iO = _t._iO;
-
-      _lastURL = _t.url;
-      _t.loaded = false;
-      _t.readyState = 1;
-      _t.playState = 0;
-
-      // TODO: If switching from HTML5 -> flash (or vice versa), stop currently-playing audio.
-
-      if (_html5OK(_iO)) {
-
-        oS = _t._setup_html5(_iO);
-
-        if (!oS._called_load) {
-
-          _s._wD(_h5+'load: '+_t.sID);
-          _t._html5_canplay = false;
-
-          // given explicit load call, try to get whole file.
-          // early HTML5 implementation (non-standard)
-          _t._a.autobuffer = 'auto';
-          // standard
-          _t._a.preload = 'auto';
-
-          oS.load();
-          oS._called_load = true;
-
-          if (_iO.autoPlay) {
-            _t.play();
-          }
-
-        } else {
-          _s._wD(_h5+'ignoring request to load again: '+_t.sID);
-        }
-
-      } else {
-
-        try {
-          _t.isHTML5 = false;
-          _t._iO = _policyFix(_loopFix(_iO));
-          // re-assign local shortcut
-          _iO = _t._iO;
-          if (_fV === 8) {
-            _flash._load(_t.sID, _iO.url, _iO.stream, _iO.autoPlay, (_iO.whileloading?1:0), _iO.loops||1, _iO.usePolicyFile);
-          } else {
-            _flash._load(_t.sID, _iO.url, !!(_iO.stream), !!(_iO.autoPlay), _iO.loops||1, !!(_iO.autoLoad), _iO.usePolicyFile);
-          }
-        } catch(e) {
-          _wDS('smError', 2);
-          _debugTS('onload', false);
-          _catchError({type:'SMSOUND_LOAD_JS_EXCEPTION', fatal:true});
-
-        }
-
-      }
-
-      return _t;
-
-    };
-
-    /**
-     * Unloads a sound, canceling any open HTTP requests.
-     *
-     * @return {SMSound} The SMSound object
-     */
-
-    this.unload = function() {
-
-      // Flash 8/AS2 can't "close" a stream - fake it by loading an empty URL
-      // Flash 9/AS3: Close stream, preventing further load
-      // HTML5: Most UAs will use empty URL
-
-      if (_t.readyState !== 0) {
-
-        _s._wD('SMSound.unload(): "' + _t.sID + '"');
-
-        if (!_t.isHTML5) {
-          if (_fV === 8) {
-            _flash._unload(_t.sID, _emptyURL);
-          } else {
-            _flash._unload(_t.sID);
-          }
-        } else {
-          _stop_html5_timer();
-          if (_t._a) {
-            _t._a.pause();
-            _html5Unload(_t._a);
-          }
-        }
-
-        // reset load/status flags
-        _resetProperties();
-
-      }
-
-      return _t;
-
-    };
-
-    /**
-     * Unloads and destroys a sound.
-     */
-
-    this.destruct = function(_bFromSM) {
-
-      _s._wD('SMSound.destruct(): "' + _t.sID + '"');
-
-      if (!_t.isHTML5) {
-
-        // kill sound within Flash
-        // Disable the onfailure handler
-        _t._iO.onfailure = null;
-        _flash._destroySound(_t.sID);
-
-      } else {
-
-        _stop_html5_timer();
-
-        if (_t._a) {
-          _t._a.pause();
-          _html5Unload(_t._a);
-          if (!_useGlobalHTML5Audio) {
-            _remove_html5_events();
-          }
-          // break obvious circular reference
-          _t._a._t = null;
-          _t._a = null;
-        }
-
-      }
-
-      if (!_bFromSM) {
-        // ensure deletion from controller
-        _s.destroySound(_t.sID, true);
-
-      }
-
-    };
-
-    /**
-     * Begins playing a sound.
-     *
-     * @param {object} oOptions Optional: Sound options
-     * @return {SMSound} The SMSound object
-     */
-
-    this.play = function(oOptions, _updatePlayState) {
-
-      var fN, allowMulti, a, onready;
-
-      // <d>
-      fN = 'SMSound.play(): ';
-      // </d>
-
-      _updatePlayState = _updatePlayState === undefined ? true : _updatePlayState; // default to true
-
-      if (!oOptions) {
-        oOptions = {};
-      }
-
-      _t._iO = _mixin(oOptions, _t._iO);
-      _t._iO = _mixin(_t._iO, _t.options);
-      _t._iO.url = _parseURL(_t._iO.url);
-      _t.instanceOptions = _t._iO;
-
-      // RTMP-only
-      if (_t._iO.serverURL && !_t.connected) {
-        if (!_t.getAutoPlay()) {
-          _s._wD(fN+' Netstream not connected yet - setting autoPlay');
-          _t.setAutoPlay(true);
-        }
-        // play will be called in _onconnect()
-        return _t;
-      }
-
-      if (_html5OK(_t._iO)) {
-        _t._setup_html5(_t._iO);
-        _start_html5_timer();
-      }
-
-      if (_t.playState === 1 && !_t.paused) {
-        allowMulti = _t._iO.multiShot;
-        if (!allowMulti) {
-          _s._wD(fN + '"' + _t.sID + '" already playing (one-shot)', 1);
-          return _t;
-        } else {
-          _s._wD(fN + '"' + _t.sID + '" already playing (multi-shot)', 1);
-        }
-      }
-
-      if (!_t.loaded) {
-
-        if (_t.readyState === 0) {
-
-          _s._wD(fN + 'Attempting to load "' + _t.sID + '"', 1);
-
-          // try to get this sound playing ASAP
-          if (!_t.isHTML5) {
-            // assign directly because setAutoPlay() increments the instanceCount
-            _t._iO.autoPlay = true;
-          }
-
-          _t.load(_t._iO);
-
-        } else if (_t.readyState === 2) {
-
-          _s._wD(fN + 'Could not load "' + _t.sID + '" - exiting', 2);
-          return _t;
-
-        } else {
-
-          _s._wD(fN + '"' + _t.sID + '" is loading - attempting to play..', 1);
-
-        }
-
-      } else {
-
-        _s._wD(fN + '"' + _t.sID + '"');
-
-      }
-
-      if (!_t.isHTML5 && _fV === 9 && _t.position > 0 && _t.position === _t.duration) {
-        // flash 9 needs a position reset if play() is called while at the end of a sound.
-        _s._wD(fN + '"' + _t.sID + '": Sound at end, resetting to position:0');
-        oOptions.position = 0;
-      }
-
-      /**
-       * Streams will pause when their buffer is full if they are being loaded.
-       * In this case paused is true, but the song hasn't started playing yet.
-       * If we just call resume() the onplay() callback will never be called.
-       * So only call resume() if the position is > 0.
-       * Another reason is because options like volume won't have been applied yet.
-       */
-
-      if (_t.paused && _t.position && _t.position > 0) {
-
-        // https://gist.github.com/37b17df75cc4d7a90bf6
-        _s._wD(fN + '"' + _t.sID + '" is resuming from paused state',1);
-        _t.resume();
-
-      } else {
-
-        _t._iO = _mixin(oOptions, _t._iO);
-
-        // apply from/to parameters, if they exist (and not using RTMP)
-        if (_t._iO.from !== null && _t._iO.to !== null && _t.instanceCount === 0 && _t.playState === 0 && !_t._iO.serverURL) {
-
-          onready = function() {
-            // sound "canplay" or onload()
-            // re-apply from/to to instance options, and start playback
-            _t._iO = _mixin(oOptions, _t._iO);
-            _t.play(_t._iO);
-          };
-
-          // HTML5 needs to at least have "canplay" fired before seeking.
-          if (_t.isHTML5 && !_t._html5_canplay) {
-
-            // this hasn't been loaded yet. load it first, and then do this again.
-            _s._wD(fN+'Beginning load of "'+ _t.sID+'" for from/to case');
-
-            _t.load({
-              _oncanplay: onready
-            });
-
-            return false;
-
-          } else if (!_t.isHTML5 && !_t.loaded && (!_t.readyState || _t.readyState !== 2)) {
-
-            // to be safe, preload the whole thing in Flash.
-
-            _s._wD(fN+'Preloading "'+ _t.sID+'" for from/to case');
-
-            _t.load({
-              onload: onready
-            });
-
-            return false;
-
-          }
-
-          // otherwise, we're ready to go. re-apply local options, and continue
-
-          _t._iO = _applyFromTo();
-
-        }
-
-        _s._wD(fN+'"'+ _t.sID+'" is starting to play');
-
-        if (!_t.instanceCount || _t._iO.multiShotEvents || (!_t.isHTML5 && _fV > 8 && !_t.getAutoPlay())) {
-          _t.instanceCount++;
-        }
-
-        // if first play and onposition parameters exist, apply them now
-        if (_t.playState === 0 && _t._iO.onposition) {
-          _attachOnPosition(_t);
-        }
-
-        _t.playState = 1;
-        _t.paused = false;
-
-        _t.position = (typeof _t._iO.position !== 'undefined' && !isNaN(_t._iO.position) ? _t._iO.position : 0);
-
-        if (!_t.isHTML5) {
-          _t._iO = _policyFix(_loopFix(_t._iO));
-        }
-
-        if (_t._iO.onplay && _updatePlayState) {
-          _t._iO.onplay.apply(_t);
-          _onplay_called = true;
-        }
-
-        _t.setVolume(_t._iO.volume, true);
-        _t.setPan(_t._iO.pan, true);
-
-        if (!_t.isHTML5) {
-
-          _flash._start(_t.sID, _t._iO.loops || 1, (_fV === 9?_t._iO.position:_t._iO.position / 1000));
-
-        } else {
-
-          _start_html5_timer();
-          a = _t._setup_html5();
-          _t.setPosition(_t._iO.position);
-          a.play();
-
-        }
-
-      }
-
-      return _t;
-
-    };
-
-    // just for convenience
-    this.start = this.play;
-
-    /**
-     * Stops playing a sound (and optionally, all sounds)
-     *
-     * @param {boolean} bAll Optional: Whether to stop all sounds
-     * @return {SMSound} The SMSound object
-     */
-
-    this.stop = function(bAll) {
-
-      var _iO = _t._iO, _oP;
-
-      if (_t.playState === 1) {
-
-        _t._onbufferchange(0);
-        _t._resetOnPosition(0);
-        _t.paused = false;
-
-        if (!_t.isHTML5) {
-          _t.playState = 0;
-        }
-
-        // remove onPosition listeners, if any
-        _detachOnPosition();
-
-        // and "to" position, if set
-        if (_iO.to) {
-          _t.clearOnPosition(_iO.to);
-        }
-
-        if (!_t.isHTML5) {
-
-          _flash._stop(_t.sID, bAll);
-
-          // hack for netStream: just unload
-          if (_iO.serverURL) {
-            _t.unload();
-          }
-
-        } else {
-
-          if (_t._a) {
-
-            _oP = _t.position;
-
-            // act like Flash, though
-            _t.setPosition(0);
-
-            // hack: reflect old position for onstop() (also like Flash)
-            _t.position = _oP;
-
-            // html5 has no stop()
-            // NOTE: pausing means iOS requires interaction to resume.
-            _t._a.pause();
-
-            _t.playState = 0;
-
-            // and update UI
-            _t._onTimer();
-
-            _stop_html5_timer();
-
-          }
-
-        }
-
-        _t.instanceCount = 0;
-        _t._iO = {};
-
-        if (_iO.onstop) {
-          _iO.onstop.apply(_t);
-        }
-
-      }
-
-      return _t;
-
-    };
-
-    /**
-     * Undocumented/internal: Sets autoPlay for RTMP.
-     *
-     * @param {boolean} autoPlay state
-     */
-
-    this.setAutoPlay = function(autoPlay) {
-
-      _s._wD('sound '+_t.sID+' turned autoplay ' + (autoPlay ? 'on' : 'off'));
-      _t._iO.autoPlay = autoPlay;
-
-      if (!_t.isHTML5) {
-        _flash._setAutoPlay(_t.sID, autoPlay);
-        if (autoPlay) {
-          // only increment the instanceCount if the sound isn't loaded (TODO: verify RTMP)
-          if (!_t.instanceCount && _t.readyState === 1) {
-            _t.instanceCount++;
-            _s._wD('sound '+_t.sID+' incremented instance count to '+_t.instanceCount);
-          }
-        }
-      }
-
-    };
-
-    /**
-     * Undocumented/internal: Returns the autoPlay boolean.
-     *
-     * @return {boolean} The current autoPlay value
-     */
-
-    this.getAutoPlay = function() {
-
-      return _t._iO.autoPlay;
-
-    };
-
-    /**
-     * Sets the position of a sound.
-     *
-     * @param {number} nMsecOffset Position (milliseconds)
-     * @return {SMSound} The SMSound object
-     */
-
-    this.setPosition = function(nMsecOffset) {
-
-      if (nMsecOffset === undefined) {
-        nMsecOffset = 0;
-      }
-
-      var original_pos,
-          position, position1K,
-          // Use the duration from the instance options, if we don't have a track duration yet.
-          // position >= 0 and <= current available (loaded) duration
-          offset = (_t.isHTML5 ? Math.max(nMsecOffset,0) : Math.min(_t.duration || _t._iO.duration, Math.max(nMsecOffset, 0)));
-
-      original_pos = _t.position;
-      _t.position = offset;
-      position1K = _t.position/1000;
-      _t._resetOnPosition(_t.position);
-      _t._iO.position = offset;
-
-      if (!_t.isHTML5) {
-
-        position = (_fV === 9 ? _t.position : position1K);
-        if (_t.readyState && _t.readyState !== 2) {
-          // if paused or not playing, will not resume (by playing)
-          _flash._setPosition(_t.sID, position, (_t.paused || !_t.playState));
-        }
-
-      } else if (_t._a) {
-
-        // Set the position in the canplay handler if the sound is not ready yet
-        if (_t._html5_canplay) {
-          if (_t._a.currentTime !== position1K) {
-            /**
-             * DOM/JS errors/exceptions to watch out for:
-             * if seek is beyond (loaded?) position, "DOM exception 11"
-             * "INDEX_SIZE_ERR": DOM exception 1
-             */
-            _s._wD('setPosition('+position1K+'): setting position');
-            try {
-              _t._a.currentTime = position1K;
-              if (_t.playState === 0 || _t.paused) {
-                // allow seek without auto-play/resume
-                _t._a.pause();
-              }
-            } catch(e) {
-              _s._wD('setPosition('+position1K+'): setting position failed: '+e.message, 2);
-            }
-          }
-        } else {
-          _s._wD('setPosition('+position1K+'): delaying, sound not ready');
-        }
-
-      }
-
-      if (_t.isHTML5) {
-        if (_t.paused) {
-          // if paused, refresh UI right away
-          // force update
-          _t._onTimer(true);
-        }
-      }
-
-      return _t;
-
-    };
-
-    /**
-     * Pauses sound playback.
-     *
-     * @return {SMSound} The SMSound object
-     */
-
-    this.pause = function(_bCallFlash) {
-
-      if (_t.paused || (_t.playState === 0 && _t.readyState !== 1)) {
-        return _t;
-      }
-
-      _s._wD('SMSound.pause()');
-      _t.paused = true;
-
-      if (!_t.isHTML5) {
-        if (_bCallFlash || _bCallFlash === undefined) {
-          _flash._pause(_t.sID);
-        }
-      } else {
-        _t._setup_html5().pause();
-        _stop_html5_timer();
-      }
-
-      if (_t._iO.onpause) {
-        _t._iO.onpause.apply(_t);
-      }
-
-      return _t;
-
-    };
-
-    /**
-     * Resumes sound playback.
-     *
-     * @return {SMSound} The SMSound object
-     */
-
-    /**
-     * When auto-loaded streams pause on buffer full they have a playState of 0.
-     * We need to make sure that the playState is set to 1 when these streams "resume".
-     * When a paused stream is resumed, we need to trigger the onplay() callback if it
-     * hasn't been called already. In this case since the sound is being played for the
-     * first time, I think it's more appropriate to call onplay() rather than onresume().
-     */
-
-    this.resume = function() {
-
-      var _iO = _t._iO;
-
-      if (!_t.paused) {
-        return _t;
-      }
-
-      _s._wD('SMSound.resume()');
-      _t.paused = false;
-      _t.playState = 1;
-
-      if (!_t.isHTML5) {
-        if (_iO.isMovieStar && !_iO.serverURL) {
-          // Bizarre Webkit bug (Chrome reported via 8tracks.com dudes): AAC content paused for 30+ seconds(?) will not resume without a reposition.
-          _t.setPosition(_t.position);
-        }
-        // flash method is toggle-based (pause/resume)
-        _flash._pause(_t.sID);
-      } else {
-        _t._setup_html5().play();
-        _start_html5_timer();
-      }
-
-      if (_onplay_called && _iO.onplay) {
-        _iO.onplay.apply(_t);
-        _onplay_called = true;
-      } else if (_iO.onresume) {
-        _iO.onresume.apply(_t);
-      }
-
-      return _t;
-
-    };
-
-    /**
-     * Toggles sound playback.
-     *
-     * @return {SMSound} The SMSound object
-     */
-
-    this.togglePause = function() {
-
-      _s._wD('SMSound.togglePause()');
-
-      if (_t.playState === 0) {
-        _t.play({
-          position: (_fV === 9 && !_t.isHTML5 ? _t.position : _t.position / 1000)
-        });
-        return _t;
-      }
-
-      if (_t.paused) {
-        _t.resume();
-      } else {
-        _t.pause();
-      }
-
-      return _t;
-
-    };
-
-    /**
-     * Sets the panning (L-R) effect.
-     *
-     * @param {number} nPan The pan value (-100 to 100)
-     * @return {SMSound} The SMSound object
-     */
-
-    this.setPan = function(nPan, bInstanceOnly) {
-
-      if (typeof nPan === 'undefined') {
-        nPan = 0;
-      }
-
-      if (typeof bInstanceOnly === 'undefined') {
-        bInstanceOnly = false;
-      }
-
-      if (!_t.isHTML5) {
-        _flash._setPan(_t.sID, nPan);
-      } // else { no HTML5 pan? }
-
-      _t._iO.pan = nPan;
-
-      if (!bInstanceOnly) {
-        _t.pan = nPan;
-        _t.options.pan = nPan;
-      }
-
-      return _t;
-
-    };
-
-    /**
-     * Sets the volume.
-     *
-     * @param {number} nVol The volume value (0 to 100)
-     * @return {SMSound} The SMSound object
-     */
-
-    this.setVolume = function(nVol, _bInstanceOnly) {
-
-      /**
-       * Note: Setting volume has no effect on iOS "special snowflake" devices.
-       * Hardware volume control overrides software, and volume
-       * will always return 1 per Apple docs. (iOS 4 + 5.)
-       * http://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/AddingSoundtoCanvasAnimations/AddingSoundtoCanvasAnimations.html
-       */
-
-      if (typeof nVol === 'undefined') {
-        nVol = 100;
-      }
-
-      if (typeof _bInstanceOnly === 'undefined') {
-        _bInstanceOnly = false;
-      }
-
-      if (!_t.isHTML5) {
-        _flash._setVolume(_t.sID, (_s.muted && !_t.muted) || _t.muted?0:nVol);
-      } else if (_t._a) {
-        // valid range: 0-1
-        _t._a.volume = Math.max(0, Math.min(1, nVol/100));
-      }
-
-      _t._iO.volume = nVol;
-
-      if (!_bInstanceOnly) {
-        _t.volume = nVol;
-        _t.options.volume = nVol;
-      }
-
-      return _t;
-
-    };
-
-    /**
-     * Mutes the sound.
-     *
-     * @return {SMSound} The SMSound object
-     */
-
-    this.mute = function() {
-
-      _t.muted = true;
-
-      if (!_t.isHTML5) {
-        _flash._setVolume(_t.sID, 0);
-      } else if (_t._a) {
-        _t._a.muted = true;
-      }
-
-      return _t;
-
-    };
-
-    /**
-     * Unmutes the sound.
-     *
-     * @return {SMSound} The SMSound object
-     */
-
-    this.unmute = function() {
-
-      _t.muted = false;
-      var hasIO = typeof _t._iO.volume !== 'undefined';
-
-      if (!_t.isHTML5) {
-        _flash._setVolume(_t.sID, hasIO?_t._iO.volume:_t.options.volume);
-      } else if (_t._a) {
-        _t._a.muted = false;
-      }
-
-      return _t;
-
-    };
-
-    /**
-     * Toggles the muted state of a sound.
-     *
-     * @return {SMSound} The SMSound object
-     */
-
-    this.toggleMute = function() {
-
-      return (_t.muted?_t.unmute():_t.mute());
-
-    };
-
-    /**
-     * Registers a callback to be fired when a sound reaches a given position during playback.
-     *
-     * @param {number} nPosition The position to watch for
-     * @param {function} oMethod The relevant callback to fire
-     * @param {object} oScope Optional: The scope to apply the callback to
-     * @return {SMSound} The SMSound object
-     */
-
-    this.onPosition = function(nPosition, oMethod, oScope) {
-
-      // TODO: basic dupe checking?
-
-      _onPositionItems.push({
-        position: nPosition,
-        method: oMethod,
-        scope: (typeof oScope !== 'undefined' ? oScope : _t),
-        fired: false
-      });
-
-      return _t;
-
-    };
-
-    // legacy/backwards-compability: lower-case method name
-    this.onposition = this.onPosition;
-
-    /**
-     * Removes registered callback(s) from a sound, by position and/or callback.
-     *
-     * @param {number} nPosition The position to clear callback(s) for
-     * @param {function} oMethod Optional: Identify one callback to be removed when multiple listeners exist for one position
-     * @return {SMSound} The SMSound object
-     */
-
-    this.clearOnPosition = function(nPosition, oMethod) {
-
-      var i;
-
-      nPosition = parseInt(nPosition, 10);
-
-      if (isNaN(nPosition)) {
-        // safety check
-        return false;
-      }
-
-      for (i=0; i < _onPositionItems.length; i++) {
-
-        if (nPosition === _onPositionItems[i].position) {
-          // remove this item if no method was specified, or, if the method matches
-          if (!oMethod || (oMethod === _onPositionItems[i].method)) {
-            if (_onPositionItems[i].fired) {
-              // decrement "fired" counter, too
-              _onPositionFired--;
-            }
-            _onPositionItems.splice(i, 1);
-          }
-        }
-
-      }
-
-    };
-
-    this._processOnPosition = function() {
-
-      var i, item, j = _onPositionItems.length;
-
-      if (!j || !_t.playState || _onPositionFired >= j) {
-        return false;
-      }
-
-      for (i=j; i--;) {
-        item = _onPositionItems[i];
-        if (!item.fired && _t.position >= item.position) {
-          item.fired = true;
-          _onPositionFired++;
-          item.method.apply(item.scope, [item.position]);
-        }
-      }
-
-      return true;
-
-    };
-
-    this._resetOnPosition = function(nPosition) {
-
-      // reset "fired" for items interested in this position
-      var i, item, j = _onPositionItems.length;
-
-      if (!j) {
-        return false;
-      }
-
-      for (i=j; i--;) {
-        item = _onPositionItems[i];
-        if (item.fired && nPosition <= item.position) {
-          item.fired = false;
-          _onPositionFired--;
-        }
-      }
-
-      return true;
-
-    };
-
-    /**
-     * SMSound() private internals
-     * --------------------------------
-     */
-
-    _applyFromTo = function() {
-
-      var _iO = _t._iO,
-          f = _iO.from,
-          t = _iO.to,
-          start, end;
-
-      end = function() {
-
-        // end has been reached.
-        _s._wD(_t.sID + ': "to" time of ' + t + ' reached.');
-
-        // detach listener
-        _t.clearOnPosition(t, end);
-
-        // stop should clear this, too
-        _t.stop();
-
-      };
-
-      start = function() {
-
-        _s._wD(_t.sID + ': playing "from" ' + f);
-
-        // add listener for end
-        if (t !== null && !isNaN(t)) {
-          _t.onPosition(t, end);
-        }
-
-      };
-
-      if (f !== null && !isNaN(f)) {
-
-        // apply to instance options, guaranteeing correct start position.
-        _iO.position = f;
-
-        // multiShot timing can't be tracked, so prevent that.
-        _iO.multiShot = false;
-
-        start();
-
-      }
-
-      // return updated instanceOptions including starting position
-      return _iO;
-
-    };
-
-    _attachOnPosition = function() {
-
-      var op = _t._iO.onposition;
-
-      // attach onposition things, if any, now.
-
-      if (op) {
-
-        var item;
-
-        for (item in op) {
-          if (op.hasOwnProperty(item)) {
-            _t.onPosition(parseInt(item, 10), op[item]); 
-          }
-        }
-
-      }
-
-    };
-
-    _detachOnPosition = function() {
-
-      var op = _t._iO.onposition;
-
-      // detach any onposition()-style listeners.
-
-      if (op) {
-
-        var item;
-
-        for (item in op) {
-          if (op.hasOwnProperty(item)) {
-            _t.clearOnPosition(parseInt(item, 10));
-          }
-        }
-
-      }
-
-    };
-
-    _start_html5_timer = function() {
-
-      if (_t.isHTML5) {
-        _startTimer(_t);
-      }
-
-    };
-
-    _stop_html5_timer = function() {
-
-      if (_t.isHTML5) {
-        _stopTimer(_t);
-      }
-
-    };
-
-    _resetProperties = function() {
-
-      _onPositionItems = [];
-      _onPositionFired = 0;
-      _onplay_called = false;
-
-      _t._hasTimer = null;
-      _t._a = null;
-      _t._html5_canplay = false;
-      _t.bytesLoaded = null;
-      _t.bytesTotal = null;
-      _t.duration = (_t._iO && _t._iO.duration ? _t._iO.duration : null);
-      _t.durationEstimate = null;
-
-      // legacy: 1D array
-      _t.eqData = [];
-
-      _t.eqData.left = [];
-      _t.eqData.right = [];
-
-      _t.failures = 0;
-      _t.isBuffering = false;
-      _t.instanceOptions = {};
-      _t.instanceCount = 0;
-      _t.loaded = false;
-      _t.metadata = {};
-
-      // 0 = uninitialised, 1 = loading, 2 = failed/error, 3 = loaded/success
-      _t.readyState = 0;
-
-      _t.muted = false;
-      _t.paused = false;
-
-      _t.peakData = {
-        left: 0,
-        right: 0
-      };
-
-      _t.waveformData = {
-        left: [],
-        right: []
-      };
-
-      _t.playState = 0;
-      _t.position = null;
-
-    };
-
-    _resetProperties();
-
-    /**
-     * Pseudo-private SMSound internals
-     * --------------------------------
-     */
-
-    this._onTimer = function(bForce) {
-
-      /**
-       * HTML5-only _whileplaying() etc.
-       * called from both HTML5 native events, and polling/interval-based timers
-       * mimics flash and fires only when time/duration change, so as to be polling-friendly
-       */
-
-      var duration, isNew = false, time, x = {};
-
-      if (_t._hasTimer || bForce) {
-
-        // TODO: May not need to track readyState (1 = loading)
-
-        if (_t._a && (bForce || ((_t.playState > 0 || _t.readyState === 1) && !_t.paused))) {
-
-          duration = _t._get_html5_duration();
-
-          if (duration !== _lastHTML5State.duration) {
-
-            _lastHTML5State.duration = duration;
-            _t.duration = duration;
-            isNew = true;
-
-          }
-
-          // TODO: investigate why this goes wack if not set/re-set each time.
-          _t.durationEstimate = _t.duration;
-
-          time = (_t._a.currentTime * 1000 || 0);
-
-          if (time !== _lastHTML5State.time) {
-
-            _lastHTML5State.time = time;
-            isNew = true;
-
-          }
-
-          if (isNew || bForce) {
-
-            _t._whileplaying(time,x,x,x,x);
-
-          }
-
-          return isNew;
-
-        } else {
-
-          // _s._wD('_onTimer: Warn for "'+_t.sID+'": '+(!_t._a?'Could not find element. ':'')+(_t.playState === 0?'playState bad, 0?':'playState = '+_t.playState+', OK'));
-
-          return false;
-
-        }
-
-      }
-
-    };
-
-    this._get_html5_duration = function() {
-
-      var _iO = _t._iO,
-          d = (_t._a ? _t._a.duration*1000 : (_iO ? _iO.duration : undefined)),
-          result = (d && !isNaN(d) && d !== Infinity ? d : (_iO ? _iO.duration : null));
-
-      return result;
-
-    };
-
-    this._setup_html5 = function(oOptions) {
-
-      var _iO = _mixin(_t._iO, oOptions), d = decodeURI,
-          _a = _useGlobalHTML5Audio ? _s._global_a : _t._a,
-          _dURL = d(_iO.url),
-          _oldIO = (_a && _a._t ? _a._t.instanceOptions : null);
-
-      if (_a) {
-
-        if (_a._t) {
-
-          if (!_useGlobalHTML5Audio && _dURL === d(_lastURL)) {
-            // same url, ignore request
-            return _a; 
-          } else if (_useGlobalHTML5Audio && _oldIO.url === _iO.url && (!_lastURL || (_lastURL === _oldIO.url))) {
-            // iOS-type reuse case
-            return _a;
-          }
-
-        }
-
-        _s._wD('setting new URL on existing object: ' + _dURL + (_lastURL ? ', old URL: ' + _lastURL : ''));
-
-        /**
-         * "First things first, I, Poppa.." (reset the previous state of the old sound, if playing)
-         * Fixes case with devices that can only play one sound at a time
-         * Otherwise, other sounds in mid-play will be terminated without warning and in a stuck state
-         */
-
-        if (_useGlobalHTML5Audio && _a._t && _a._t.playState && _iO.url !== _oldIO.url) {
-          _a._t.stop();
-        }
-
-        // new URL, so reset load/playstate and so on
-        _resetProperties();
-
-        _a.src = _iO.url;
-        _t.url = _iO.url;
-        _lastURL = _iO.url;
-        _a._called_load = false;
-
-      } else {
-
-        _s._wD('creating HTML5 Audio() element with URL: '+_dURL);
-        _a = new Audio(_iO.url);
-
-        _a._called_load = false;
-
-        // android (seen in 2.3/Honeycomb) sometimes fails first .load() -> .play(), results in playback failure and ended() events?
-        if (_is_android) {
-          _a._called_load = true;
-        }
-
-        if (_useGlobalHTML5Audio) {
-          _s._global_a = _a;
-        }
-
-      }
-
-      _t.isHTML5 = true;
-
-      // store a ref on the track
-      _t._a = _a;
-
-      // store a ref on the audio
-      _a._t = _t;
-
-      _add_html5_events();
-      _a.loop = (_iO.loops>1?'loop':'');
-
-      if (_iO.autoLoad || _iO.autoPlay) {
-
-        _t.load();
-
-      } else {
-
-        // early HTML5 implementation (non-standard)
-        _a.autobuffer = false;
-
-        // standard
-        _a.preload = 'none';
-
-      }
-
-      // boolean instead of "loop", for webkit? - spec says string. http://www.w3.org/TR/html-markup/audio.html#audio.attrs.loop
-      _a.loop = (_iO.loops > 1 ? 'loop' : '');
-
-      return _a;
-
-    };
-
-    _add_html5_events = function() {
-
-      if (_t._a._added_events) {
-        return false;
-      }
-
-      var f;
-
-      function add(oEvt, oFn, bCapture) {
-        return _t._a ? _t._a.addEventListener(oEvt, oFn, bCapture||false) : null;
-      }
-
-      _s._wD(_h5+'adding event listeners: '+_t.sID);
-      _t._a._added_events = true;
-
-      for (f in _html5_events) {
-        if (_html5_events.hasOwnProperty(f)) {
-          add(f, _html5_events[f]);
-        }
-      }
-
-      return true;
-
-    };
-
-    _remove_html5_events = function() {
-
-      // Remove event listeners
-
-      var f;
-
-      function remove(oEvt, oFn, bCapture) {
-        return (_t._a ? _t._a.removeEventListener(oEvt, oFn, bCapture||false) : null);
-      }
-
-      _s._wD(_h5+'removing event listeners: '+_t.sID);
-      _t._a._added_events = false;
-
-      for (f in _html5_events) {
-        if (_html5_events.hasOwnProperty(f)) {
-          remove(f, _html5_events[f]);
-        }
-      }
-
-    };
-
-    /**
-     * Pseudo-private event internals
-     * ------------------------------
-     */
-
-    this._onload = function(nSuccess) {
-
-
-      var fN, loadOK = !!(nSuccess);
-      _s._wD(fN + '"' + _t.sID + '"' + (loadOK?' loaded.':' failed to load? - ' + _t.url), (loadOK?1:2));
-
-      // <d>
-      fN = 'SMSound._onload(): ';
-      if (!loadOK && !_t.isHTML5) {
-        if (_s.sandbox.noRemote === true) {
-          _s._wD(fN + _str('noNet'), 1);
-        }
-        if (_s.sandbox.noLocal === true) {
-          _s._wD(fN + _str('noLocal'), 1);
-        }
-      }
-      // </d>
-
-      _t.loaded = loadOK;
-      _t.readyState = loadOK?3:2;
-      _t._onbufferchange(0);
-
-      if (_t._iO.onload) {
-        _t._iO.onload.apply(_t, [loadOK]);
-      }
-
-      return true;
-
-    };
-
-    this._onbufferchange = function(nIsBuffering) {
-
-      if (_t.playState === 0) {
-        // ignore if not playing
-        return false;
-      }
-
-      if ((nIsBuffering && _t.isBuffering) || (!nIsBuffering && !_t.isBuffering)) {
-        return false;
-      }
-
-      _t.isBuffering = (nIsBuffering === 1);
-      if (_t._iO.onbufferchange) {
-        _s._wD('SMSound._onbufferchange(): ' + nIsBuffering);
-        _t._iO.onbufferchange.apply(_t);
-      }
-
-      return true;
-
-    };
-
-    /**
-     * Notify Mobile Safari that user action is required
-     * to continue playing / loading the audio file.
-     */
-
-    this._onsuspend = function() {
-
-      if (_t._iO.onsuspend) {
-        _s._wD('SMSound._onsuspend()');
-        _t._iO.onsuspend.apply(_t);
-      }
-
-      return true;
-
-    };
-
-    /**
-     * flash 9/movieStar + RTMP-only method, should fire only once at most
-     * at this point we just recreate failed sounds rather than trying to reconnect
-     */
-
-    this._onfailure = function(msg, level, code) {
-
-      _t.failures++;
-      _s._wD('SMSound._onfailure(): "'+_t.sID+'" count '+_t.failures);
-
-      if (_t._iO.onfailure && _t.failures === 1) {
-        _t._iO.onfailure(_t, msg, level, code);
-      } else {
-        _s._wD('SMSound._onfailure(): ignoring');
-      }
-
-    };
-
-    this._onfinish = function() {
-
-      // store local copy before it gets trashed..
-      var _io_onfinish = _t._iO.onfinish;
-
-      _t._onbufferchange(0);
-      _t._resetOnPosition(0);
-
-      // reset some state items
-      if (_t.instanceCount) {
-
-        _t.instanceCount--;
-
-        if (!_t.instanceCount) {
-
-          // remove onPosition listeners, if any
-          _detachOnPosition();
-
-          // reset instance options
-          _t.playState = 0;
-          _t.paused = false;
-          _t.instanceCount = 0;
-          _t.instanceOptions = {};
-          _t._iO = {};
-          _stop_html5_timer();
-
-        }
-
-        if (!_t.instanceCount || _t._iO.multiShotEvents) {
-          // fire onfinish for last, or every instance
-          if (_io_onfinish) {
-            _s._wD('SMSound._onfinish(): "' + _t.sID + '"');
-            _io_onfinish.apply(_t);
-          }
-        }
-
-      }
-
-    };
-
-    this._whileloading = function(nBytesLoaded, nBytesTotal, nDuration, nBufferLength) {
-
-      var _iO = _t._iO;
-
-      _t.bytesLoaded = nBytesLoaded;
-      _t.bytesTotal = nBytesTotal;
-      _t.duration = Math.floor(nDuration);
-      _t.bufferLength = nBufferLength;
-
-      if (!_iO.isMovieStar) {
-
-        if (_iO.duration) {
-          // use options, if specified and larger
-          _t.durationEstimate = (_t.duration > _iO.duration) ? _t.duration : _iO.duration;
-        } else {
-          _t.durationEstimate = parseInt((_t.bytesTotal / _t.bytesLoaded) * _t.duration, 10);
-
-        }
-
-        if (_t.durationEstimate === undefined) {
-          _t.durationEstimate = _t.duration;
-        }
-
-        if (_t.readyState !== 3 && _iO.whileloading) {
-          _iO.whileloading.apply(_t);
-        }
-
-      } else {
-
-        _t.durationEstimate = _t.duration;
-        if (_t.readyState !== 3 && _iO.whileloading) {
-          _iO.whileloading.apply(_t);
-        }
-
-      }
-
-    };
-
-    this._whileplaying = function(nPosition, oPeakData, oWaveformDataLeft, oWaveformDataRight, oEQData) {
-
-      var _iO = _t._iO;
-
-      if (isNaN(nPosition) || nPosition === null) {
-        // flash safety net
-        return false;
-      }
-
-      _t.position = nPosition;
-      _t._processOnPosition();
-
-      if (!_t.isHTML5 && _fV > 8) {
-
-        if (_iO.usePeakData && typeof oPeakData !== 'undefined' && oPeakData) {
-          _t.peakData = {
-            left: oPeakData.leftPeak,
-            right: oPeakData.rightPeak
-          };
-        }
-
-        if (_iO.useWaveformData && typeof oWaveformDataLeft !== 'undefined' && oWaveformDataLeft) {
-          _t.waveformData = {
-            left: oWaveformDataLeft.split(','),
-            right: oWaveformDataRight.split(',')
-          };
-        }
-
-        if (_iO.useEQData) {
-          if (typeof oEQData !== 'undefined' && oEQData && oEQData.leftEQ) {
-            var eqLeft = oEQData.leftEQ.split(',');
-            _t.eqData = eqLeft;
-            _t.eqData.left = eqLeft;
-            if (typeof oEQData.rightEQ !== 'undefined' && oEQData.rightEQ) {
-              _t.eqData.right = oEQData.rightEQ.split(',');
-            }
-          }
-        }
-
-      }
-
-      if (_t.playState === 1) {
-
-        // special case/hack: ensure buffering is false if loading from cache (and not yet started)
-        if (!_t.isHTML5 && _fV === 8 && !_t.position && _t.isBuffering) {
-          _t._onbufferchange(0);
-        }
-
-        if (_iO.whileplaying) {
-          // flash may call after actual finish
-          _iO.whileplaying.apply(_t);
-        }
-
-      }
-
-      return true;
-
-    };
-
-    this._onmetadata = function(oMDProps, oMDData) {
-
-      /**
-       * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature
-       * RTMP may include song title, MovieStar content may include encoding info
-       * 
-       * @param {array} oMDProps (names)
-       * @param {array} oMDData (values)
-       */
-
-      _s._wD('SMSound._onmetadata(): "' + this.sID + '" metadata received.');
-
-      var oData = {}, i, j;
-
-      for (i = 0, j = oMDProps.length; i < j; i++) {
-        oData[oMDProps[i]] = oMDData[i];
-      }
-      _t.metadata = oData;
-
-      if (_t._iO.onmetadata) {
-        _t._iO.onmetadata.apply(_t);
-      }
-
-	};
-
-    this._onid3 = function(oID3Props, oID3Data) {
-
-      /**
-       * internal: flash 8 + flash 9 ID3 feature
-       * may include artist, song title etc.
-       * 
-       * @param {array} oID3Props (names)
-       * @param {array} oID3Data (values)
-       */
-
-      _s._wD('SMSound._onid3(): "' + this.sID + '" ID3 data received.');
-
-      var oData = [], i, j;
-
-      for (i = 0, j = oID3Props.length; i < j; i++) {
-        oData[oID3Props[i]] = oID3Data[i];
-      }
-      _t.id3 = _mixin(_t.id3, oData);
-
-      if (_t._iO.onid3) {
-        _t._iO.onid3.apply(_t);
-      }
-
-    };
-
-    // flash/RTMP-only
-
-    this._onconnect = function(bSuccess) {
-
-      bSuccess = (bSuccess === 1);
-      _s._wD('SMSound._onconnect(): "'+_t.sID+'"'+(bSuccess?' connected.':' failed to connect? - '+_t.url), (bSuccess?1:2));
-      _t.connected = bSuccess;
-
-      if (bSuccess) {
-
-        _t.failures = 0;
-
-        if (_idCheck(_t.sID)) {
-          if (_t.getAutoPlay()) {
-            // only update the play state if auto playing
-            _t.play(undefined, _t.getAutoPlay());
-          } else if (_t._iO.autoLoad) {
-            _t.load();
-          }
-        }
-
-        if (_t._iO.onconnect) {
-          _t._iO.onconnect.apply(_t, [bSuccess]);
-        }
-
-      }
-
-    };
-
-    this._ondataerror = function(sError) {
-
-      // flash 9 wave/eq data handler
-      // hack: called at start, and end from flash at/after onfinish()
-      if (_t.playState > 0) {
-        _s._wD('SMSound._ondataerror(): ' + sError);
-        if (_t._iO.ondataerror) {
-          _t._iO.ondataerror.apply(_t);
-        }
-      }
-
-    };
-
-  }; // SMSound()
-
-  /**
-   * Private SoundManager internals
-   * ------------------------------
-   */
-
-  _getDocument = function() {
-
-    return (_doc.body || _doc._docElement || _doc.getElementsByTagName('div')[0]);
-
-  };
-
-  _id = function(sID) {
-
-    return _doc.getElementById(sID);
-
-  };
-
-  _mixin = function(oMain, oAdd) {
-
-    // non-destructive merge
-    var o1 = {}, i, o2, o;
-
-    // clone c1
-    for (i in oMain) {
-      if (oMain.hasOwnProperty(i)) {
-        o1[i] = oMain[i];
-      }
-    }
-
-    o2 = (typeof oAdd === 'undefined'?_s.defaultOptions:oAdd);
-    for (o in o2) {
-      if (o2.hasOwnProperty(o) && typeof o1[o] === 'undefined') {
-        o1[o] = o2[o];
-      }
-    }
-    return o1;
-
-  };
-
-  _event = (function() {
-
-    var old = (_win.attachEvent),
-    evt = {
-      add: (old?'attachEvent':'addEventListener'),
-      remove: (old?'detachEvent':'removeEventListener')
-    };
-
-    function getArgs(oArgs) {
-
-      var args = _slice.call(oArgs), len = args.length;
-
-      if (old) {
-        // prefix
-        args[1] = 'on' + args[1];
-        if (len > 3) {
-          // no capture
-          args.pop();
-        }
-      } else if (len === 3) {
-        args.push(false);
-      }
-
-      return args;
-
-    }
-
-    function apply(args, sType) {
-
-      var element = args.shift(),
-          method = [evt[sType]];
-
-      if (old) {
-        element[method](args[0], args[1]);
-      } else {
-        element[method].apply(element, args);
-      }
-
-    }
-
-    function add() {
-
-      apply(getArgs(arguments), 'add');
-
-    }
-
-    function remove() {
-
-      apply(getArgs(arguments), 'remove');
-
-    }
-
-    return {
-      'add': add,
-      'remove': remove
-    };
-
-  }());
-
-  /**
-   * Internal HTML5 event handling
-   * -----------------------------
-   */
-
-  function _html5_event(oFn) {
-
-    // wrap html5 event handlers so we don't call them on destroyed sounds
-
-    return function(e) {
-
-      var t = this._t;
-
-      if (!t || !t._a) {
-        // <d>
-        if (t && t.sID) {
-          _s._wD(_h5+'ignoring '+e.type+': '+t.sID);
-        } else {
-          _s._wD(_h5+'ignoring '+e.type);
-        }
-        // </d>
-        return null;
-      } else {
-        return oFn.call(this, e);
-      }
-
-    };
-
-  }
-
-  _html5_events = {
-
-    // HTML5 event-name-to-handler map
-
-    abort: _html5_event(function(e) {
-
-      _s._wD(_h5+'abort: '+this._t.sID);
-
-    }),
-
-    // enough has loaded to play
-
-    canplay: _html5_event(function(e) {
-
-      var t = this._t;
-
-      if (t._html5_canplay) {
-        // this event has already fired. ignore.
-        return true;
-      }
-
-      t._html5_canplay = true;
-      _s._wD(_h5+'canplay: '+t.sID+', '+t.url);
-      t._onbufferchange(0);
-      var position1K = (!isNaN(t.position)?t.position/1000:null);
-
-      // set the position if position was set before the sound loaded
-      if (t.position && this.currentTime !== position1K) {
-        _s._wD(_h5+'canplay: setting position to '+position1K);
-        try {
-          this.currentTime = position1K;
-        } catch(ee) {
-          _s._wD(_h5+'setting position failed: '+ee.message, 2);
-        }
-      }
-
-      // hack for HTML5 from/to case
-      if (t._iO._oncanplay) {
-        t._iO._oncanplay();
-      }
-
-    }),
-
-    load: _html5_event(function(e) {
-
-      var t = this._t;
-
-      if (!t.loaded) {
-        t._onbufferchange(0);
-        // should be 1, and the same
-        t._whileloading(t.bytesTotal, t.bytesTotal, t._get_html5_duration());
-        t._onload(true);
-      }
-
-    }),
-
-    emptied: _html5_event(function(e) {
-
-      _s._wD(_h5+'emptied: '+this._t.sID);
-
-    }),
-
-    ended: _html5_event(function(e) {
-
-      var t = this._t;
-
-      _s._wD(_h5+'ended: '+t.sID);
-      t._onfinish();
-
-    }),
-
-    error: _html5_event(function(e) {
-
-      _s._wD(_h5+'error: '+this.error.code);
-      // call load with error state?
-      this._t._onload(false);
-
-    }),
-
-    loadeddata: _html5_event(function(e) {
-
-      var t = this._t,
-          // at least 1 byte, so math works
-          bytesTotal = t.bytesTotal || 1;
-
-      _s._wD(_h5+'loadeddata: '+this._t.sID);
-
-      // safari seems to nicely report progress events, eventually totalling 100%
-      if (!t._loaded && !_isSafari) {
-        t.duration = t._get_html5_duration();
-        // fire whileloading() with 100% values
-        t._whileloading(bytesTotal, bytesTotal, t._get_html5_duration());
-        t._onload(true);
-      }
-
-    }),
-
-    loadedmetadata: _html5_event(function(e) {
-
-      _s._wD(_h5+'loadedmetadata: '+this._t.sID);
-
-    }),
-
-    loadstart: _html5_event(function(e) {
-
-      _s._wD(_h5+'loadstart: '+this._t.sID);
-      // assume buffering at first
-      this._t._onbufferchange(1);
-
-    }),
-
-    play: _html5_event(function(e) {
-
-      _s._wD(_h5+'play: '+this._t.sID+', '+this._t.url);
-      // once play starts, no buffering
-      this._t._onbufferchange(0);
-
-    }),
-
-    playing: _html5_event(function(e) {
-
-      _s._wD(_h5+'playing: '+this._t.sID);
-
-      // once play starts, no buffering
-      this._t._onbufferchange(0);
-
-    }),
-
-    progress: _html5_event(function(e) {
-
-      var t = this._t;
-
-      if (t.loaded) {
-        return false;
-      }
-
-      var i, j, str, buffered = 0,
-          isProgress = (e.type === 'progress'),
-          ranges = e.target.buffered,
-
-          // firefox 3.6 implements e.loaded/total (bytes)
-          loaded = (e.loaded||0),
-
-          total = (e.total||1);
-
-      if (ranges && ranges.length) {
-
-        // if loaded is 0, try TimeRanges implementation as % of load
-        // https://developer.mozilla.org/en/DOM/TimeRanges
-
-        for (i=ranges.length; i--;) {
-          buffered = (ranges.end(i) - ranges.start(i));
-        }
-
-        // linear case, buffer sum; does not account for seeking and HTTP partials / byte ranges
-        loaded = buffered/e.target.duration;
-
-        // <d>
-        if (isProgress && ranges.length > 1) {
-          str = [];
-          j = ranges.length;
-          for (i=0; i<j; i++) {
-            str.push(e.target.buffered.start(i) +'-'+ e.target.buffered.end(i));
-          }
-          _s._wD(_h5+'progress: timeRanges: '+str.join(', '));
-        }
-
-        if (isProgress && !isNaN(loaded)) {
-          _s._wD(_h5+'progress: '+t.sID+': ' + Math.floor(loaded*100)+'% loaded');
-        }
-        // </d>
-
-      }
-
-      if (!isNaN(loaded)) {
-
-        // if progress, likely not buffering
-        t._onbufferchange(0);
-        t._whileloading(loaded, total, t._get_html5_duration());
-        if (loaded && total && loaded === total) {
-          // in case "onload" doesn't fire (eg. gecko 1.9.2)
-          _html5_events.load.call(this, e);
-        }
-
-      }
-
-    }),
-
-    ratechange: _html5_event(function(e) {
-
-      _s._wD(_h5+'ratechange: '+this._t.sID);
-
-    }),
-
-    suspend: _html5_event(function(e) {
-
-      // download paused/stopped, may have finished (eg. onload)
-      var t = this._t;
-
-      _s._wD(_h5+'suspend: '+t.sID);
-      _html5_events.progress.call(this, e);
-      t._onsuspend();
-
-    }),
-
-    stalled: _html5_event(function(e) {
-
-      _s._wD(_h5+'stalled: '+this._t.sID);
-
-    }),
-
-    timeupdate: _html5_event(function(e) {
-
-      this._t._onTimer();
-
-    }),
-
-    waiting: _html5_event(function(e) {
-
-      var t = this._t;
-
-      // see also: seeking
-      _s._wD(_h5+'waiting: '+t.sID);
-
-      // playback faster than download rate, etc.
-      t._onbufferchange(1);
-
-    })
-
-  };
-
-  _html5OK = function(iO) {
-
-    // Use type, if specified. If HTML5-only mode, no other options, so just give 'er
-    return (!iO.serverURL && (iO.type?_html5CanPlay({type:iO.type}):_html5CanPlay({url:iO.url})||_s.html5Only));
-
-  };
-
-  _html5Unload = function(oAudio) {
-
-    /**
-     * Internal method: Unload media, and cancel any current/pending network requests.
-     * Firefox can load an empty URL, which allegedly destroys the decoder and stops the download.
-     * https://developer.mozilla.org/En/Using_audio_and_video_in_Firefox#Stopping_the_download_of_media
-     * Other UA behaviour is unclear, so everyone else gets an about:blank-style URL.
-     */
-
-    if (oAudio) {
-      // Firefox likes '' for unload, most other UAs don't and fail to unload.
-      oAudio.src = (_is_firefox ? '' : _emptyURL);
-    }
-
-  };
-
-  _html5CanPlay = function(o) {
-
-    /**
-     * Try to find MIME, test and return truthiness
-     * o = {
-     *  url: '/path/to/an.mp3',
-     *  type: 'audio/mp3'
-     * }
-     */
-
-    if (!_s.useHTML5Audio || !_s.hasHTML5) {
-      return false;
-    }
-
-    var url = (o.url || null),
-        mime = (o.type || null),
-        aF = _s.audioFormats,
-        result,
-        offset,
-        fileExt,
-        item;
-
-    function preferFlashCheck(kind) {
-
-      // whether flash should play a given type
-      return (_s.preferFlash && _hasFlash && !_s.ignoreFlash && (typeof _s.flash[kind] !== 'undefined' && _s.flash[kind]));
-
-    }
-
-    // account for known cases like audio/mp3
-
-    if (mime && _s.html5[mime] !== 'undefined') {
-      return (_s.html5[mime] && !preferFlashCheck(mime));
-    }
-
-    if (!_html5Ext) {
-      _html5Ext = [];
-      for (item in aF) {
-        if (aF.hasOwnProperty(item)) {
-          _html5Ext.push(item);
-          if (aF[item].related) {
-            _html5Ext = _html5Ext.concat(aF[item].related);
-          }
-        }
-      }
-      _html5Ext = new RegExp('\\.('+_html5Ext.join('|')+')(\\?.*)?$','i');
-    }
-
-    // TODO: Strip URL queries, etc.
-    fileExt = (url ? url.toLowerCase().match(_html5Ext) : null);
-
-    if (!fileExt || !fileExt.length) {
-      if (!mime) {
-        return false;
-      } else {
-        // audio/mp3 -> mp3, result should be known
-        offset = mime.indexOf(';');
-        // strip "audio/X; codecs.."
-        fileExt = (offset !== -1?mime.substr(0,offset):mime).substr(6);
-      }
-    } else {
-      // match the raw extension name - "mp3", for example
-      fileExt = fileExt[1];
-    }
-
-    if (fileExt && typeof _s.html5[fileExt] !== 'undefined') {
-      // result known
-      return (_s.html5[fileExt] && !preferFlashCheck(fileExt));
-    } else {
-      mime = 'audio/'+fileExt;
-      result = _s.html5.canPlayType({type:mime});
-      _s.html5[fileExt] = result;
-      // _s._wD('canPlayType, found result: '+result);
-      return (result && _s.html5[mime] && !preferFlashCheck(mime));
-    }
-
-  };
-
-  _testHTML5 = function() {
-
-    if (!_s.useHTML5Audio || typeof Audio === 'undefined') {
-      return false;
-    }
-
-    // double-whammy: Opera 9.64 throws WRONG_ARGUMENTS_ERR if no parameter passed to Audio(), and Webkit + iOS happily tries to load "null" as a URL. :/
-    var a = (typeof Audio !== 'undefined' ? (_isOpera ? new Audio(null) : new Audio()) : null),
-        item, support = {}, aF, i;
-
-    function _cp(m) {
-
-      var canPlay, i, j, isOK = false;
-
-      if (!a || typeof a.canPlayType !== 'function') {
-        return false;
-      }
-
-      if (m instanceof Array) {
-        // iterate through all mime types, return any successes
-        for (i=0, j=m.length; i<j && !isOK; i++) {
-          if (_s.html5[m[i]] || a.canPlayType(m[i]).match(_s.html5Test)) {
-            isOK = true;
-            _s.html5[m[i]] = true;
-
-            // if flash can play and preferred, also mark it for use.
-            _s.flash[m[i]] = !!(_s.preferFlash && _hasFlash && m[i].match(_flashMIME));
-
-          }
-        }
-        return isOK;
-      } else {
-        canPlay = (a && typeof a.canPlayType === 'function' ? a.canPlayType(m) : false);
-        return !!(canPlay && (canPlay.match(_s.html5Test)));
-      }
-
-    }
-
-    // test all registered formats + codecs
-
-    aF = _s.audioFormats;
-
-    for (item in aF) {
-      if (aF.hasOwnProperty(item)) {
-        support[item] = _cp(aF[item].type);
-
-        // write back generic type too, eg. audio/mp3
-        support['audio/'+item] = support[item];
-
-        // assign flash
-        if (_s.preferFlash && !_s.ignoreFlash && item.match(_flashMIME)) {
-          _s.flash[item] = true;
-        } else {
-          _s.flash[item] = false;
-        }
-
-        // assign result to related formats, too
-        if (aF[item] && aF[item].related) {
-          for (i=aF[item].related.length; i--;) {
-            // eg. audio/m4a
-            support['audio/'+aF[item].related[i]] = support[item];
-            _s.html5[aF[item].related[i]] = support[item];
-            _s.flash[aF[item].related[i]] = support[item];
-          }
-        }
-      }
-    }
-
-    support.canPlayType = (a?_cp:null);
-    _s.html5 = _mixin(_s.html5, support);
-
-    return true;
-
-  };
-
-  _strings = {
-
-    // <d>
-    notReady: 'Not loaded yet - wait for soundManager.onload()/onready()',
-    notOK: 'Audio support is not available.',
-    domError: _smc + 'createMovie(): appendChild/innerHTML call failed. DOM not ready or other error.',
-    spcWmode: _smc + 'createMovie(): Removing wmode, preventing known SWF loading issue(s)',
-    swf404: _sm + ': Verify that %s is a valid path.',
-    tryDebug: 'Try ' + _sm + '.debugFlash = true for more security details (output goes to SWF.)',
-    checkSWF: 'See SWF output for more debug info.',
-    localFail: _sm + ': Non-HTTP page (' + _doc.location.protocol + ' URL?) Review Flash player security settings for this special case:\nhttp://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html\nMay need to add/allow path, eg. c:/sm2/ or /users/me/sm2/',
-    waitFocus: _sm + ': Special case: Waiting for focus-related event..',
-    waitImpatient: _sm + ': Getting impatient, still waiting for Flash%s...',
-    waitForever: _sm + ': Waiting indefinitely for Flash (will recover if unblocked)...',
-    needFunction: _sm + ': Function object expected for %s',
-    badID: 'Warning: Sound ID "%s" should be a string, starting with a non-numeric character',
-    currentObj: '--- ' + _sm + '._debug(): Current sound objects ---',
-    waitEI: _smc + 'initMovie(): Waiting for ExternalInterface call from Flash..',
-    waitOnload: _sm + ': Waiting for window.onload()',
-    docLoaded: _sm + ': Document already loaded',
-    onload: _smc + 'initComplete(): calling soundManager.onload()',
-    onloadOK: _sm + '.onload() complete',
-    init: _smc + 'init()',
-    didInit: _smc + 'init(): Already called?',
-    flashJS: _sm + ': Attempting to call Flash from JS..',
-    secNote: 'Flash security note: Network/internet URLs will not load due to security restrictions. Access can be configured via Flash Player Global Security Settings Page: http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html',
-    badRemove: 'Warning: Failed to remove flash movie.',
-    noPeak: 'Warning: peakData features unsupported for movieStar formats',
-    shutdown: _sm + '.disable(): Shutting down',
-    queue: _sm + ': Queueing %s handler',
-    smFail: _sm + ': Failed to initialise.',
-    smError: 'SMSound.load(): Exception: JS-Flash communication failed, or JS error.',
-    fbTimeout: 'No flash response, applying .'+_swfCSS.swfTimedout+' CSS..',
-    fbLoaded: 'Flash loaded',
-    fbHandler: _smc+'flashBlockHandler()',
-    manURL: 'SMSound.load(): Using manually-assigned URL',
-    onURL: _sm + '.load(): current URL already assigned.',
-    badFV: _sm + '.flashVersion must be 8 or 9. "%s" is invalid. Reverting to %s.',
-    as2loop: 'Note: Setting stream:false so looping can work (flash 8 limitation)',
-    noNSLoop: 'Note: Looping not implemented for MovieStar formats',
-    needfl9: 'Note: Switching to flash 9, required for MP4 formats.',
-    mfTimeout: 'Setting flashLoadTimeout = 0 (infinite) for off-screen, mobile flash case',
-    mfOn: 'mobileFlash::enabling on-screen flash repositioning',
-    policy: 'Enabling usePolicyFile for data access'
-    // </d>
-
-  };
-
-  _str = function() {
-
-    // internal string replace helper.
-    // arguments: o [,items to replace]
-    // <d>
-
-    // real array, please
-    var args = _slice.call(arguments),
-
-    // first arg
-    o = args.shift(),
-
-    str = (_strings && _strings[o]?_strings[o]:''), i, j;
-    if (str && args && args.length) {
-      for (i = 0, j = args.length; i < j; i++) {
-        str = str.replace('%s', args[i]);
-      }
-    }
-
-    return str;
-    // </d>
-
-  };
-
-  _loopFix = function(sOpt) {
-
-    // flash 8 requires stream = false for looping to work
-    if (_fV === 8 && sOpt.loops > 1 && sOpt.stream) {
-      _wDS('as2loop');
-      sOpt.stream = false;
-    }
-
-    return sOpt;
-
-  };
-
-  _policyFix = function(sOpt, sPre) {
-
-    if (sOpt && !sOpt.usePolicyFile && (sOpt.onid3 || sOpt.usePeakData || sOpt.useWaveformData || sOpt.useEQData)) {
-      _s._wD((sPre || '') + _str('policy'));
-      sOpt.usePolicyFile = true;
-    }
-
-    return sOpt;
-
-  };
-
-  _complain = function(sMsg) {
-
-    // <d>
-    if (typeof console !== 'undefined' && typeof console.warn !== 'undefined') {
-      console.warn(sMsg);
-    } else {
-      _s._wD(sMsg);
-    }
-    // </d>
-
-  };
-
-  _doNothing = function() {
-
-    return false;
-
-  };
-
-  _disableObject = function(o) {
-
-    var oProp;
-
-    for (oProp in o) {
-      if (o.hasOwnProperty(oProp) && typeof o[oProp] === 'function') {
-        o[oProp] = _doNothing;
-      }
-    }
-
-    oProp = null;
-
-  };
-
-  _failSafely = function(bNoDisable) {
-
-    // general failure exception handler
-
-    if (typeof bNoDisable === 'undefined') {
-      bNoDisable = false;
-    }
-
-    if (_disabled || bNoDisable) {
-      _wDS('smFail', 2);
-      _s.disable(bNoDisable);
-    }
-
-  };
-
-  _normalizeMovieURL = function(smURL) {
-
-    var urlParams = null, url;
-
-    if (smURL) {
-      if (smURL.match(/\.swf(\?.*)?$/i)) {
-        urlParams = smURL.substr(smURL.toLowerCase().lastIndexOf('.swf?') + 4);
-        if (urlParams) {
-          // assume user knows what they're doing
-          return smURL;
-        }
-      } else if (smURL.lastIndexOf('/') !== smURL.length - 1) {
-        // append trailing slash, if needed
-        smURL += '/';
-      }
-    }
-
-    url = (smURL && smURL.lastIndexOf('/') !== - 1 ? smURL.substr(0, smURL.lastIndexOf('/') + 1) : './') + _s.movieURL;
-
-    if (_s.noSWFCache) {
-      url += ('?ts=' + new Date().getTime());
-    }
-
-    return url;
-
-  };
-
-  _setVersionInfo = function() {
-
-    // short-hand for internal use
-
-    _fV = parseInt(_s.flashVersion, 10);
-
-    if (_fV !== 8 && _fV !== 9) {
-      _s._wD(_str('badFV', _fV, _defaultFlashVersion));
-      _s.flashVersion = _fV = _defaultFlashVersion;
-    }
-
-    // debug flash movie, if applicable
-
-    var isDebug = (_s.debugMode || _s.debugFlash?'_debug.swf':'.swf');
-
-    if (_s.useHTML5Audio && !_s.html5Only && _s.audioFormats.mp4.required && _fV < 9) {
-      _s._wD(_str('needfl9'));
-      _s.flashVersion = _fV = 9;
-    }
-
-    _s.version = _s.versionNumber + (_s.html5Only?' (HTML5-only mode)':(_fV === 9?' (AS3/Flash 9)':' (AS2/Flash 8)'));
-
-    // set up default options
-    if (_fV > 8) {
-      // +flash 9 base options
-      _s.defaultOptions = _mixin(_s.defaultOptions, _s.flash9Options);
-      _s.features.buffering = true;
-      // +moviestar support
-      _s.defaultOptions = _mixin(_s.defaultOptions, _s.movieStarOptions);
-      _s.filePatterns.flash9 = new RegExp('\\.(mp3|' + _netStreamTypes.join('|') + ')(\\?.*)?$', 'i');
-      _s.features.movieStar = true;
-    } else {
-      _s.features.movieStar = false;
-    }
-
-    // regExp for flash canPlay(), etc.
-    _s.filePattern = _s.filePatterns[(_fV !== 8?'flash9':'flash8')];
-
-    // if applicable, use _debug versions of SWFs
-    _s.movieURL = (_fV === 8?'soundmanager2.swf':'soundmanager2_flash9.swf').replace('.swf', isDebug);
-
-    _s.features.peakData = _s.features.waveformData = _s.features.eqData = (_fV > 8);
-
-  };
-
-  _setPolling = function(bPolling, bHighPerformance) {
-
-    if (!_flash) {
-      return false;
-    }
-
-    _flash._setPolling(bPolling, bHighPerformance);
-
-  };
-
-  _initDebug = function() {
-
-    // starts debug mode, creating output <div> for UAs without console object
-
-    // allow force of debug mode via URL
-    if (_s.debugURLParam.test(_wl)) {
-      _s.debugMode = true;
-    }
-
-    // <d>
-    if (_id(_s.debugID)) {
-      return false;
-    }
-
-    var oD, oDebug, oTarget, oToggle, tmp;
-
-    if (_s.debugMode && !_id(_s.debugID) && (!_hasConsole || !_s.useConsole || !_s.consoleOnly)) {
-
-      oD = _doc.createElement('div');
-      oD.id = _s.debugID + '-toggle';
-
-      oToggle = {
-        'position': 'fixed',
-        'bottom': '0px',
-        'right': '0px',
-        'width': '1.2em',
-        'height': '1.2em',
-        'lineHeight': '1.2em',
-        'margin': '2px',
-        'textAlign': 'center',
-        'border': '1px solid #999',
-        'cursor': 'pointer',
-        'background': '#fff',
-        'color': '#333',
-        'zIndex': 10001
-      };
-
-      oD.appendChild(_doc.createTextNode('-'));
-      oD.onclick = _toggleDebug;
-      oD.title = 'Toggle SM2 debug console';
-
-      if (_ua.match(/msie 6/i)) {
-        oD.style.position = 'absolute';
-        oD.style.cursor = 'hand';
-      }
-
-      for (tmp in oToggle) {
-        if (oToggle.hasOwnProperty(tmp)) {
-          oD.style[tmp] = oToggle[tmp];
-        }
-      }
-
-      oDebug = _doc.createElement('div');
-      oDebug.id = _s.debugID;
-      oDebug.style.display = (_s.debugMode?'block':'none');
-
-      if (_s.debugMode && !_id(oD.id)) {
-        try {
-          oTarget = _getDocument();
-          oTarget.appendChild(oD);
-        } catch(e2) {
-          throw new Error(_str('domError')+' \n'+e2.toString());
-        }
-        oTarget.appendChild(oDebug);
-      }
-
-    }
-
-    oTarget = null;
-    // </d>
-
-  };
-
-  _idCheck = this.getSoundById;
-
-  // <d>
-  _wDS = function(o, errorLevel) {
-
-    if (!o) {
-      return '';
-    } else {
-      return _s._wD(_str(o), errorLevel);
-    }
-
-  };
-
-  // last-resort debugging option
-
-  if (_wl.indexOf('sm2-debug=alert') + 1 && _s.debugMode) {
-    _s._wD = function(sText) {window.alert(sText);};
-  }
-
-  _toggleDebug = function() {
-
-    var o = _id(_s.debugID),
-    oT = _id(_s.debugID + '-toggle');
-
-    if (!o) {
-      return false;
-    }
-
-    if (_debugOpen) {
-      // minimize
-      oT.innerHTML = '+';
-      o.style.display = 'none';
-    } else {
-      oT.innerHTML = '-';
-      o.style.display = 'block';
-    }
-
-    _debugOpen = !_debugOpen;
-
-  };
-
-  _debugTS = function(sEventType, bSuccess, sMessage) {
-
-    // troubleshooter debug hooks
-
-    if (typeof sm2Debugger !== 'undefined') {
-      try {
-        sm2Debugger.handleEvent(sEventType, bSuccess, sMessage);
-      } catch(e) {
-        // oh well
-      }
-    }
-
-    return true;
-
-  };
-  // </d>
-
-  _getSWFCSS = function() {
-
-    var css = [];
-
-    if (_s.debugMode) {
-      css.push(_swfCSS.sm2Debug);
-    }
-
-    if (_s.debugFlash) {
-      css.push(_swfCSS.flashDebug);
-    }
-
-    if (_s.useHighPerformance) {
-      css.push(_swfCSS.highPerf);
-    }
-
-    return css.join(' ');
-
-  };
-
-  _flashBlockHandler = function() {
-
-    // *possible* flash block situation.
-
-    var name = _str('fbHandler'),
-        p = _s.getMoviePercent(),
-        css = _swfCSS,
-        error = {type:'FLASHBLOCK'};
-
-    if (_s.html5Only) {
-      return false;
-    }
-
-    if (!_s.ok()) {
-
-      if (_needsFlash) {
-        // make the movie more visible, so user can fix
-        _s.oMC.className = _getSWFCSS() + ' ' + css.swfDefault + ' ' + (p === null?css.swfTimedout:css.swfError);
-        _s._wD(name+': '+_str('fbTimeout')+(p?' ('+_str('fbLoaded')+')':''));
-      }
-
-      _s.didFlashBlock = true;
-
-      // fire onready(), complain lightly
-      _processOnEvents({type:'ontimeout', ignoreInit:true, error:error});
-      _catchError(error);
-
-    } else {
-
-      // SM2 loaded OK (or recovered)
-
-      // <d>
-      if (_s.didFlashBlock) {
-        _s._wD(name+': Unblocked');
-      }
-      // </d>
-
-      if (_s.oMC) {
-        _s.oMC.className = [_getSWFCSS(), css.swfDefault, css.swfLoaded + (_s.didFlashBlock?' '+css.swfUnblocked:'')].join(' ');
-      }
-
-    }
-
-  };
-
-  _addOnEvent = function(sType, oMethod, oScope) {
-
-    if (typeof _on_queue[sType] === 'undefined') {
-      _on_queue[sType] = [];
-    }
-
-    _on_queue[sType].push({
-      'method': oMethod,
-      'scope': (oScope || null),
-      'fired': false
-    });
-
-  };
-
-  _processOnEvents = function(oOptions) {
-
-    // assume onready, if unspecified
-
-    if (!oOptions) {
-      oOptions = {
-        type: 'onready'
-      };
-    }
-
-    if (!_didInit && oOptions && !oOptions.ignoreInit) {
-      // not ready yet.
-      return false;
-    }
-
-    if (oOptions.type === 'ontimeout' && _s.ok()) {
-      // invalid case
-      return false;
-    }
-
-    var status = {
-          success: (oOptions && oOptions.ignoreInit?_s.ok():!_disabled)
-        },
-
-        // queue specified by type, or none
-        srcQueue = (oOptions && oOptions.type?_on_queue[oOptions.type]||[]:[]),
-
-        queue = [], i, j,
-        args = [status],
-        canRetry = (_needsFlash && _s.useFlashBlock && !_s.ok());
-
-    if (oOptions.error) {
-      args[0].error = oOptions.error;
-    }
-
-    for (i = 0, j = srcQueue.length; i < j; i++) {
-      if (srcQueue[i].fired !== true) {
-        queue.push(srcQueue[i]);
-      }
-    }
-
-    if (queue.length) {
-      _s._wD(_sm + ': Firing ' + queue.length + ' '+oOptions.type+'() item' + (queue.length === 1?'':'s'));
-      for (i = 0, j = queue.length; i < j; i++) {
-        if (queue[i].scope) {
-          queue[i].method.apply(queue[i].scope, args);
-        } else {
-          queue[i].method.apply(this, args);
-        }
-        if (!canRetry) {
-          // flashblock case doesn't count here
-          queue[i].fired = true;
-        }
-      }
-    }
-
-    return true;
-
-  };
-
-  _initUserOnload = function() {
-
-    _win.setTimeout(function() {
-
-      if (_s.useFlashBlock) {
-        _flashBlockHandler();
-      }
-
-      _processOnEvents();
-
-      // call user-defined "onload", scoped to window
-
-      if (_s.onload instanceof Function) {
-        _wDS('onload', 1);
-        _s.onload.apply(_win);
-        _wDS('onloadOK', 1);
-      }
-
-      if (_s.waitForWindowLoad) {
-        _event.add(_win, 'load', _initUserOnload);
-      }
-
-    },1);
-
-  };
-
-  _detectFlash = function() {
-
-    // hat tip: Flash Detect library (BSD, (C) 2007) by Carl "DocYes" S. Yestrau - http://featureblend.com/javascript-flash-detection-library.html / http://featureblend.com/license.txt
-
-    if (_hasFlash !== undefined) {
-      // this work has already been done.
-      return _hasFlash;
-    }
-
-    var hasPlugin = false, n = navigator, nP = n.plugins, obj, type, types, AX = _win.ActiveXObject;
-
-    if (nP && nP.length) {
-      type = 'application/x-shockwave-flash';
-      types = n.mimeTypes;
-      if (types && types[type] && types[type].enabledPlugin && types[type].enabledPlugin.description) {
-        hasPlugin = true;
-      }
-    } else if (typeof AX !== 'undefined') {
-      try {
-        obj = new AX('ShockwaveFlash.ShockwaveFlash');
-      } catch(e) {
-        // oh well
-      }
-      hasPlugin = (!!obj);
-    }
-
-    _hasFlash = hasPlugin;
-
-    return hasPlugin;
-
-  };
-
-  _featureCheck = function() {
-
-    var needsFlash, item,
-
-        // iPhone <= 3.1 has broken HTML5 audio(), but firmware 3.2 (iPad) + iOS4 works.
-        isSpecial = (_is_iDevice && !!(_ua.match(/os (1|2|3_0|3_1)/i)));
-
-    if (isSpecial) {
-
-      // has Audio(), but is broken; let it load links directly.
-      _s.hasHTML5 = false;
-
-      // ignore flash case, however
-      _s.html5Only = true;
-
-      if (_s.oMC) {
-        _s.oMC.style.display = 'none';
-      }
-
-      return false;
-
-    }
-
-    if (_s.useHTML5Audio) {
-
-      if (!_s.html5 || !_s.html5.canPlayType) {
-        _s._wD('SoundManager: No HTML5 Audio() support detected.');
-        _s.hasHTML5 = false;
-        return true;
-      } else {
-        _s.hasHTML5 = true;
-      }
-      if (_isBadSafari) {
-        _s._wD(_smc+'Note: Buggy HTML5 Audio in Safari on this OS X release, see https://bugs.webkit.org/show_bug.cgi?id=32159 - '+(!_hasFlash?' would use flash fallback for MP3/MP4, but none detected.':'will use flash fallback for MP3/MP4, if available'),1);
-        if (_detectFlash()) {
-          return true;
-        }
-      }
-    } else {
-
-      // flash needed (or, HTML5 needs enabling.)
-      return true;
-
-    }
-
-    for (item in _s.audioFormats) {
-      if (_s.audioFormats.hasOwnProperty(item)) {
-        if ((_s.audioFormats[item].required && !_s.html5.canPlayType(_s.audioFormats[item].type)) || _s.flash[item] || _s.flash[_s.audioFormats[item].type]) {
-          // flash may be required, or preferred for this format
-          needsFlash = true;
-        }
-      }
-    }
-
-    // sanity check..
-    if (_s.ignoreFlash) {
-      needsFlash = false;
-    }
-
-    _s.html5Only = (_s.hasHTML5 && _s.useHTML5Audio && !needsFlash);
-
-    return (!_s.html5Only);
-
-  };
-
-  _parseURL = function(url) {
-
-    /**
-     * Internal: Finds and returns the first playable URL (or failing that, the first URL.)
-     * @param {string or array} url A single URL string, OR, an array of URL strings or {url:'/path/to/resource', type:'audio/mp3'} objects.
-     */
-
-    var i, j, result = 0;
-
-    if (url instanceof Array) {
-
-      // find the first good one
-      for (i=0, j=url.length; i<j; i++) {
-
-        if (url[i] instanceof Object) {
-          // MIME check
-          if (_s.canPlayMIME(url[i].type)) {
-            result = i;
-            break;
-          }
-
-        } else if (_s.canPlayURL(url[i])) {
-          // URL string check
-          result = i;
-          break;
-        }
-
-      }
-
-      // normalize to string
-      if (url[result].url) {
-        url[result] = url[result].url;
-      }
-
-      return url[result];
-
-    } else {
-
-      // single URL case
-      return url;
-
-    }
-
-  };
-
-
-  _startTimer = function(oSound) {
-
-    /**
-     * attach a timer to this sound, and start an interval if needed
-     */
-
-    if (!oSound._hasTimer) {
-
-      oSound._hasTimer = true;
-
-      if (!_likesHTML5 && _s.html5PollingInterval) {
-
-        if (_h5IntervalTimer === null && _h5TimerCount === 0) {
-
-          _h5IntervalTimer = window.setInterval(_timerExecute, _s.html5PollingInterval);
-   
-        }
-
-        _h5TimerCount++;
-
-      }
-
-    }
-
-  };
-
-  _stopTimer = function(oSound) {
-
-    /**
-     * detach a timer
-     */
-
-    if (oSound._hasTimer) {
-
-      oSound._hasTimer = false;
-
-      if (!_likesHTML5 && _s.html5PollingInterval) {
-
-        // interval will stop itself at next execution.
-
-        _h5TimerCount--;
-
-      }
-
-    }
-
-  };
-
-  _timerExecute = function() {
-
-    /**
-     * manual polling for HTML5 progress events, ie., whileplaying() (can achieve greater precision than conservative default HTML5 interval)
-     */
-
-    var i, j;
-
-    if (_h5IntervalTimer !== null && !_h5TimerCount) {
-
-      // no active timers, stop polling interval.
-
-      window.clearInterval(_h5IntervalTimer);
-
-      _h5IntervalTimer = null;
-
-      return false;
-
-    }
-
-    // check all HTML5 sounds with timers
-
-    for (i = _s.soundIDs.length; i--;) {
-
-      if (_s.sounds[_s.soundIDs[i]].isHTML5 && _s.sounds[_s.soundIDs[i]]._hasTimer) {
-
-        _s.sounds[_s.soundIDs[i]]._onTimer();
-
-      }
-
-    }
-
-  };
-
-  _catchError = function(options) {
-
-    options = (typeof options !== 'undefined' ? options : {});
-
-    if (_s.onerror instanceof Function) {
-      _s.onerror.apply(_win, [{type:(typeof options.type !== 'undefined' ? options.type : null)}]);
-    }
-
-    if (typeof options.fatal !== 'undefined' && options.fatal) {
-      _s.disable();
-    }
-
-  };
-
-  _badSafariFix = function() {
-
-    // special case: "bad" Safari (OS X 10.3 - 10.7) must fall back to flash for MP3/MP4
-    if (!_isBadSafari || !_detectFlash()) {
-      // doesn't apply
-      return false;
-    }
-
-    var aF = _s.audioFormats, i, item;
-
-    for (item in aF) {
-      if (aF.hasOwnProperty(item)) {
-        if (item === 'mp3' || item === 'mp4') {
-          _s._wD(_sm+': Using flash fallback for '+item+' format');
-          _s.html5[item] = false;
-          // assign result to related formats, too
-          if (aF[item] && aF[item].related) {
-            for (i = aF[item].related.length; i--;) {
-              _s.html5[aF[item].related[i]] = false;
-            }
-          }
-        }
-      }
-    }
-
-  };
-
-  /**
-   * Pseudo-private flash/ExternalInterface methods
-   * ----------------------------------------------
-   */
-
-  this._setSandboxType = function(sandboxType) {
-
-    // <d>
-    var sb = _s.sandbox;
-
-    sb.type = sandboxType;
-    sb.description = sb.types[(typeof sb.types[sandboxType] !== 'undefined'?sandboxType:'unknown')];
-
-    _s._wD('Flash security sandbox type: ' + sb.type);
-
-    if (sb.type === 'localWithFile') {
-
-      sb.noRemote = true;
-      sb.noLocal = false;
-      _wDS('secNote', 2);
-
-    } else if (sb.type === 'localWithNetwork') {
-
-      sb.noRemote = false;
-      sb.noLocal = true;
-
-    } else if (sb.type === 'localTrusted') {
-
-      sb.noRemote = false;
-      sb.noLocal = false;
-
-    }
-    // </d>
-
-  };
-
-  this._externalInterfaceOK = function(flashDate, swfVersion) {
-
-    // flash callback confirming flash loaded, EI working etc.
-    // flashDate = approx. timing/delay info for JS/flash bridge
-    // swfVersion: SWF build string
-
-    if (_s.swfLoaded) {
-      return false;
-    }
-
-    var e, eiTime = new Date().getTime();
-
-    _s._wD(_smc+'externalInterfaceOK()' + (flashDate?' (~' + (eiTime - flashDate) + ' ms)':''));
-    _debugTS('swf', true);
-    _debugTS('flashtojs', true);
-    _s.swfLoaded = true;
-    _tryInitOnFocus = false;
-
-    if (_isBadSafari) {
-      _badSafariFix();
-    }
-
-    // complain if JS + SWF build/version strings don't match, excluding +DEV builds
-    // <d>
-    if (!swfVersion || swfVersion.replace(/\+dev/i,'') !== _s.versionNumber.replace(/\+dev/i, '')) {
-
-      e = _sm + ': Fatal: JavaScript file build "' + _s.versionNumber + '" does not match Flash SWF build "' + swfVersion + '" at ' + _s.url + '. Ensure both are up-to-date.';
-
-      // escape flash -> JS stack so this error fires in window.
-      setTimeout(function versionMismatch() {
-        throw new Error(e);
-      }, 0);
-
-      // exit, init will fail with timeout
-      return false;
-
-    }
-    // </d>
-
-    if (_isIE) {
-      // IE needs a timeout OR delay until window.onload - may need TODO: investigating
-      setTimeout(_init, 100);
-    } else {
-      _init();
-    }
-
-  };
-
-  /**
-   * Private initialization helpers
-   * ------------------------------
-   */
-
-  _createMovie = function(smID, smURL) {
-
-    if (_didAppend && _appendSuccess) {
-      // ignore if already succeeded
-      return false;
-    }
-
-    function _initMsg() {
-      _s._wD('-- SoundManager 2 ' + _s.version + (!_s.html5Only && _s.useHTML5Audio?(_s.hasHTML5?' + HTML5 audio':', no HTML5 audio support'):'') + (!_s.html5Only ? (_s.useHighPerformance?', high performance mode, ':', ') + (( _s.flashPollingInterval ? 'custom (' + _s.flashPollingInterval + 'ms)' : 'normal') + ' polling') + (_s.wmode?', wmode: ' + _s.wmode:'') + (_s.debugFlash?', flash debug mode':'') + (_s.useFlashBlock?', flashBlock mode':'') : '') + ' --', 1);
-    }
-
-    if (_s.html5Only) {
-
-      // 100% HTML5 mode
-      _setVersionInfo();
-
-      _initMsg();
-      _s.oMC = _id(_s.movieID);
-      _init();
-
-      // prevent multiple init attempts
-      _didAppend = true;
-
-      _appendSuccess = true;
-
-      return false;
-
-    }
-
-    // flash path
-    var remoteURL = (smURL || _s.url),
-    localURL = (_s.altURL || remoteURL),
-    swfTitle = 'JS/Flash audio component (SoundManager 2)',
-    oEmbed, oMovie, oTarget = _getDocument(), tmp, movieHTML, oEl, extraClass = _getSWFCSS(),
-    s, x, sClass, side = 'auto', isRTL = null,
-    html = _doc.getElementsByTagName('html')[0];
-
-    isRTL = (html && html.dir && html.dir.match(/rtl/i));
-    smID = (typeof smID === 'undefined'?_s.id:smID);
-
-    function param(name, value) {
-      return '<param name="'+name+'" value="'+value+'" />';
-    }
-
-    // safety check for legacy (change to Flash 9 URL)
-    _setVersionInfo();
-    _s.url = _normalizeMovieURL("inc/SoundManager2/swf/");
-    smURL = _s.url;
-
-    _s.wmode = (!_s.wmode && _s.useHighPerformance ? 'transparent' : _s.wmode);
-
-    if (_s.wmode !== null && (_ua.match(/msie 8/i) || (!_isIE && !_s.useHighPerformance)) && navigator.platform.match(/win32|win64/i)) {
-      /**
-       * extra-special case: movie doesn't load until scrolled into view when using wmode = anything but 'window' here
-       * does not apply when using high performance (position:fixed means on-screen), OR infinite flash load timeout
-       * wmode breaks IE 8 on Vista + Win7 too in some cases, as of January 2011 (?)
-       */
-      _wDS('spcWmode');
-      _s.wmode = null;
-    }
-
-    oEmbed = {
-      'name': smID,
-      'id': smID,
-      'src': smURL,
-      'width': side,
-      'height': side,
-      'quality': 'high',
-      'allowScriptAccess': _s.allowScriptAccess,
-      'bgcolor': _s.bgColor,
-      'pluginspage': _http+'www.macromedia.com/go/getflashplayer',
-      'title': swfTitle,
-      'type': 'application/x-shockwave-flash',
-      'wmode': _s.wmode,
-      // http://help.adobe.com/en_US/as3/mobile/WS4bebcd66a74275c36cfb8137124318eebc6-7ffd.html
-      'hasPriority': 'true'
-    };
-
-    if (_s.debugFlash) {
-      oEmbed.FlashVars = 'debug=1';
-    }
-
-    if (!_s.wmode) {
-      // don't write empty attribute
-      delete oEmbed.wmode;
-    }
-
-    if (_isIE) {
-
-      // IE is "special".
-      oMovie = _doc.createElement('div');
-      movieHTML = [
-        '<object id="' + smID + '" data="' + smURL + '" type="' + oEmbed.type + '" title="' + oEmbed.title +'" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="' + _http+'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" width="' + oEmbed.width + '" height="' + oEmbed.height + '">',
-        param('movie', smURL),
-        param('AllowScriptAccess', _s.allowScriptAccess),
-        param('quality', oEmbed.quality),
-        (_s.wmode? param('wmode', _s.wmode): ''),
-        param('bgcolor', _s.bgColor),
-        param('hasPriority', 'true'),
-        (_s.debugFlash ? param('FlashVars', oEmbed.FlashVars) : ''),
-        '</object>'
-      ].join('');
-
-    } else {
-
-      oMovie = _doc.createElement('embed');
-      for (tmp in oEmbed) {
-        if (oEmbed.hasOwnProperty(tmp)) {
-          oMovie.setAttribute(tmp, oEmbed[tmp]);
-        }
-      }
-
-    }
-
-    _initDebug();
-    extraClass = _getSWFCSS();
-    oTarget = _getDocument();
-
-    if (oTarget) {
-
-      _s.oMC = (_id(_s.movieID) || _doc.createElement('div'));
-
-      if (!_s.oMC.id) {
-
-        _s.oMC.id = _s.movieID;
-        _s.oMC.className = _swfCSS.swfDefault + ' ' + extraClass;
-        s = null;
-        oEl = null;
-
-        if (!_s.useFlashBlock) {
-          if (_s.useHighPerformance) {
-            // on-screen at all times
-            s = {
-              'position': 'fixed',
-              'width': '8px',
-              'height': '8px',
-              // >= 6px for flash to run fast, >= 8px to start up under Firefox/win32 in some cases. odd? yes.
-              'bottom': '0px',
-              'left': '0px',
-              'overflow': 'hidden'
-            };
-          } else {
-            // hide off-screen, lower priority
-            s = {
-              'position': 'absolute',
-              'width': '6px',
-              'height': '6px',
-              'top': '-9999px',
-              'left': '-9999px'
-            };
-            if (isRTL) {
-              s.left = Math.abs(parseInt(s.left,10))+'px';
-            }
-          }
-        }
-
-        if (_isWebkit) {
-          // soundcloud-reported render/crash fix, safari 5
-          _s.oMC.style.zIndex = 10000;
-        }
-
-        if (!_s.debugFlash) {
-          for (x in s) {
-            if (s.hasOwnProperty(x)) {
-              _s.oMC.style[x] = s[x];
-            }
-          }
-        }
-
-        try {
-          if (!_isIE) {
-            _s.oMC.appendChild(oMovie);
-          }
-          oTarget.appendChild(_s.oMC);
-          if (_isIE) {
-            oEl = _s.oMC.appendChild(_doc.createElement('div'));
-            oEl.className = _swfCSS.swfBox;
-            oEl.innerHTML = movieHTML;
-          }
-          _appendSuccess = true;
-        } catch(e) {
-          throw new Error(_str('domError')+' \n'+e.toString());
-        }
-
-      } else {
-
-        // SM2 container is already in the document (eg. flashblock use case)
-        sClass = _s.oMC.className;
-        _s.oMC.className = (sClass?sClass+' ':_swfCSS.swfDefault) + (extraClass?' '+extraClass:'');
-        _s.oMC.appendChild(oMovie);
-        if (_isIE) {
-          oEl = _s.oMC.appendChild(_doc.createElement('div'));
-          oEl.className = _swfCSS.swfBox;
-          oEl.innerHTML = movieHTML;
-        }
-        _appendSuccess = true;
-
-      }
-
-    }
-
-    _didAppend = true;
-    _initMsg();
-    _s._wD(_smc+'createMovie(): Trying to load ' + smURL + (!_overHTTP && _s.altURL?' (alternate URL)':''), 1);
-
-    return true;
-
-  };
-
-  _initMovie = function() {
-
-    if (_s.html5Only) {
-      _createMovie();
-      return false;
-    }
-
-    // attempt to get, or create, movie
-    // may already exist
-    if (_flash) {
-      return false;
-    }
-
-    // inline markup case
-    _flash = _s.getMovie(_s.id);
-
-    if (!_flash) {
-      if (!_oRemoved) {
-        // try to create
-        _createMovie(_s.id, _s.url);
-      } else {
-        // try to re-append removed movie after reboot()
-        if (!_isIE) {
-          _s.oMC.appendChild(_oRemoved);
-        } else {
-          _s.oMC.innerHTML = _oRemovedHTML;
-        }
-        _oRemoved = null;
-        _didAppend = true;
-      }
-      _flash = _s.getMovie(_s.id);
-    }
-
-    // <d>
-    if (_flash) {
-      _wDS('waitEI');
-    }
-    // </d>
-
-    if (_s.oninitmovie instanceof Function) {
-      setTimeout(_s.oninitmovie, 1);
-    }
-
-    return true;
-
-  };
-
-  _delayWaitForEI = function() {
-
-    setTimeout(_waitForEI, 1000);
-
-  };
-
-  _waitForEI = function() {
-
-    if (_waitingForEI) {
-      return false;
-    }
-
-    _waitingForEI = true;
-    _event.remove(_win, 'load', _delayWaitForEI);
-
-    if (_tryInitOnFocus && !_isFocused) {
-      // giant Safari 3.1 hack - assume mousemove = focus given lack of focus event
-      _wDS('waitFocus');
-      return false;
-    }
-
-    var p;
-    if (!_didInit) {
-      p = _s.getMoviePercent();
-      _s._wD(_str('waitImpatient', (p === 100?' (SWF loaded)':(p > 0?' (SWF ' + p + '% loaded)':''))));
-    }
-
-    setTimeout(function() {
-
-      p = _s.getMoviePercent();
-
-      // <d>
-      if (!_didInit) {
-        _s._wD(_sm + ': No Flash response within expected time.\nLikely causes: ' + (p === 0?'Loading ' + _s.movieURL + ' may have failed (and/or Flash ' + _fV + '+ not present?), ':'') + 'Flash blocked or JS-Flash security error.' + (_s.debugFlash?' ' + _str('checkSWF'):''), 2);
-        if (!_overHTTP && p) {
-          _wDS('localFail', 2);
-          if (!_s.debugFlash) {
-            _wDS('tryDebug', 2);
-          }
-        }
-        if (p === 0) {
-          // if 0 (not null), probably a 404.
-          _s._wD(_str('swf404', _s.url));
-        }
-        _debugTS('flashtojs', false, ': Timed out' + _overHTTP?' (Check flash security or flash blockers)':' (No plugin/missing SWF?)');
-      }
-      // </d>
-
-      // give up / time-out, depending
-
-      if (!_didInit && _okToDisable) {
-        if (p === null) {
-          // SWF failed. Maybe blocked.
-          if (_s.useFlashBlock || _s.flashLoadTimeout === 0) {
-            if (_s.useFlashBlock) {
-              _flashBlockHandler();
-            }
-            _wDS('waitForever');
-          } else {
-            // old SM2 behaviour, simply fail
-            _failSafely(true);
-          }
-        } else {
-          // flash loaded? Shouldn't be a blocking issue, then.
-          if (_s.flashLoadTimeout === 0) {
-             _wDS('waitForever');
-          } else {
-            _failSafely(true);
-          }
-        }
-      }
-
-    }, _s.flashLoadTimeout);
-
-  };
-
-  _handleFocus = function() {
-
-    function cleanup() {
-      _event.remove(_win, 'focus', _handleFocus);
-      _event.remove(_win, 'load', _handleFocus);
-    }
-
-    if (_isFocused || !_tryInitOnFocus) {
-      cleanup();
-      return true;
-    }
-
-    _okToDisable = true;
-    _isFocused = true;
-    _s._wD(_smc+'handleFocus()');
-
-    if (_isSafari && _tryInitOnFocus) {
-      _event.remove(_win, 'mousemove', _handleFocus);
-    }
-
-    // allow init to restart
-    _waitingForEI = false;
-
-    cleanup();
-    return true;
-
-  };
-
-  _showSupport = function() {
-
-    var item, tests = [];
-
-    if (_s.useHTML5Audio && _s.hasHTML5) {
-      for (item in _s.audioFormats) {
-        if (_s.audioFormats.hasOwnProperty(item)) {
-          tests.push(item + ': ' + _s.html5[item] + (!_s.html5[item] && _hasFlash && _s.flash[item] ? ' (using flash)' : (_s.preferFlash && _s.flash[item] && _hasFlash ? ' (preferring flash)': (!_s.html5[item] ? ' (' + (_s.audioFormats[item].required ? 'required, ':'') + 'and no flash support)' : ''))));
-        }
-      }
-      _s._wD('-- SoundManager 2: HTML5 support tests ('+_s.html5Test+'): '+tests.join(', ')+' --',1);
-    }
-
-  };
-
-  _initComplete = function(bNoDisable) {
-
-    if (_didInit) {
-      return false;
-    }
-
-    if (_s.html5Only) {
-      // all good.
-      _s._wD('-- SoundManager 2: loaded --');
-      _didInit = true;
-      _initUserOnload();
-      _debugTS('onload', true);
-      return true;
-    }
-
-    var wasTimeout = (_s.useFlashBlock && _s.flashLoadTimeout && !_s.getMoviePercent()),
-        error;
-
-    if (!wasTimeout) {
-      _didInit = true;
-      if (_disabled) {
-        error = {type: (!_hasFlash && _needsFlash ? 'NO_FLASH' : 'INIT_TIMEOUT')};
-      }
-    }
-
-    _s._wD('-- SoundManager 2 ' + (_disabled?'failed to load':'loaded') + ' (' + (_disabled?'security/load error':'OK') + ') --', 1);
-
-    if (_disabled || bNoDisable) {
-      if (_s.useFlashBlock && _s.oMC) {
-        _s.oMC.className = _getSWFCSS() + ' ' + (_s.getMoviePercent() === null?_swfCSS.swfTimedout:_swfCSS.swfError);
-      }
-      _processOnEvents({type:'ontimeout', error:error});
-      _debugTS('onload', false);
-      _catchError(error);
-      return false;
-    } else {
-      _debugTS('onload', true);
-    }
-
-    if (_s.waitForWindowLoad && !_windowLoaded) {
-      _wDS('waitOnload');
-      _event.add(_win, 'load', _initUserOnload);
-      return false;
-    } else {
-      // <d>
-      if (_s.waitForWindowLoad && _windowLoaded) {
-        _wDS('docLoaded');
-      }
-      // </d>
-      _initUserOnload();
-    }
-
-    return true;
-
-  };
-
-  _init = function() {
-
-    _wDS('init');
-
-    // called after onload()
-
-    if (_didInit) {
-      _wDS('didInit');
-      return false;
-    }
-
-    function _cleanup() {
-      _event.remove(_win, 'load', _s.beginDelayedInit);
-    }
-
-    if (_s.html5Only) {
-      if (!_didInit) {
-        // we don't need no steenking flash!
-        _cleanup();
-        _s.enabled = true;
-        _initComplete();
-      }
-      return true;
-    }
-
-    // flash path
-    _initMovie();
-
-    try {
-
-      _wDS('flashJS');
-
-      // attempt to talk to Flash
-      _flash._externalInterfaceTest(false);
-
-      // apply user-specified polling interval, OR, if "high performance" set, faster vs. default polling
-      // (determines frequency of whileloading/whileplaying callbacks, effectively driving UI framerates)
-      _setPolling(true, (_s.flashPollingInterval || (_s.useHighPerformance ? 10 : 50)));
-
-      if (!_s.debugMode) {
-        // stop the SWF from making debug output calls to JS
-        _flash._disableDebug();
-      }
-
-      _s.enabled = true;
-      _debugTS('jstoflash', true);
-
-      if (!_s.html5Only) {
-        // prevent browser from showing cached page state (or rather, restoring "suspended" page state) via back button, because flash may be dead
-        // http://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/
-        _event.add(_win, 'unload', _doNothing);
-      }
-
-    } catch(e) {
-
-      _s._wD('js/flash exception: ' + e.toString());
-      _debugTS('jstoflash', false);
-      _catchError({type:'JS_TO_FLASH_EXCEPTION', fatal:true});
-      // don't disable, for reboot()
-      _failSafely(true);
-      _initComplete();
-
-      return false;
-
-    }
-
-    _initComplete();
-
-    // disconnect events
-    _cleanup();
-
-    return true;
-
-  };
-
-  _domContentLoaded = function() {
-
-    if (_didDCLoaded) {
-      return false;
-    }
-
-    _didDCLoaded = true;
-    _initDebug();
-
-    /**
-     * Temporary feature: allow force of HTML5 via URL params: sm2-usehtml5audio=0 or 1
-     * Ditto for sm2-preferFlash, too.
-     */
-    // <d>
-    (function(){
-
-      var a = 'sm2-usehtml5audio=', l = _wl.toLowerCase(), b = null,
-      a2 = 'sm2-preferflash=', b2 = null, hasCon = (typeof console !== 'undefined' && typeof console.log !== 'undefined');
-
-      if (l.indexOf(a) !== -1) {
-        b = (l.charAt(l.indexOf(a)+a.length) === '1');
-        if (hasCon) {
-          console.log((b?'Enabling ':'Disabling ')+'useHTML5Audio via URL parameter');
-        }
-        _s.useHTML5Audio = b;
-      }
-
-      if (l.indexOf(a2) !== -1) {
-        b2 = (l.charAt(l.indexOf(a2)+a2.length) === '1');
-        if (hasCon) {
-          console.log((b2?'Enabling ':'Disabling ')+'preferFlash via URL parameter');
-        }
-        _s.preferFlash = b2;
-      }
-
-    }());
-    // </d>
-
-    if (!_hasFlash && _s.hasHTML5) {
-      _s._wD('SoundManager: No Flash detected'+(!_s.useHTML5Audio?', enabling HTML5.':'. Trying HTML5-only mode.'));
-      _s.useHTML5Audio = true;
-      // make sure we aren't preferring flash, either
-      // TODO: preferFlash should not matter if flash is not installed. Currently, stuff breaks without the below tweak.
-      _s.preferFlash = false;
-    }
-
-    _testHTML5();
-    _s.html5.usingFlash = _featureCheck();
-    _needsFlash = _s.html5.usingFlash;
-    _showSupport();
-
-    if (!_hasFlash && _needsFlash) {
-      _s._wD('SoundManager: Fatal error: Flash is needed to play some required formats, but is not available.');
-      // TODO: Fatal here vs. timeout approach, etc.
-      // hack: fail sooner.
-      _s.flashLoadTimeout = 1;
-    }
-
-    if (_doc.removeEventListener) {
-      _doc.removeEventListener('DOMContentLoaded', _domContentLoaded, false);
-    }
-
-    _initMovie();
-    return true;
-
-  };
-
-  _domContentLoadedIE = function() {
-
-    if (_doc.readyState === 'complete') {
-      _domContentLoaded();
-      _doc.detachEvent('onreadystatechange', _domContentLoadedIE);
-    }
-
-    return true;
-
-  };
-
-  _winOnLoad = function() {
-    // catch edge case of _initComplete() firing after window.load()
-    _windowLoaded = true;
-    _event.remove(_win, 'load', _winOnLoad);
-  };
-
-  // sniff up-front
-  _detectFlash();
-
-  // focus and window load, init (primarily flash-driven)
-  _event.add(_win, 'focus', _handleFocus);
-  _event.add(_win, 'load', _handleFocus);
-  _event.add(_win, 'load', _delayWaitForEI);
-  _event.add(_win, 'load', _winOnLoad);
-
-
-  if (_isSafari && _tryInitOnFocus) {
-    // massive Safari 3.1 focus detection hack
-    _event.add(_win, 'mousemove', _handleFocus);
-  }
-
-  if (_doc.addEventListener) {
-
-    _doc.addEventListener('DOMContentLoaded', _domContentLoaded, false);
-
-  } else if (_doc.attachEvent) {
-
-    _doc.attachEvent('onreadystatechange', _domContentLoadedIE);
-
-  } else {
-
-    // no add/attachevent support - safe to assume no JS -> Flash either
-    _debugTS('onload', false);
-    _catchError({type:'NO_DOM2_EVENTS', fatal:true});
-
-  }
-
-  if (_doc.readyState === 'complete') {
-    // DOMReady has already happened.
-    setTimeout(_domContentLoaded,100);
-  }
-
-} // SoundManager()
-
-// SM2_DEFER details: http://www.schillmania.com/projects/soundmanager2/doc/getstarted/#lazy-loading
-
-if (typeof SM2_DEFER === 'undefined' || !SM2_DEFER) {
-  soundManager = new SoundManager();
-}
-
-/**
- * SoundManager public interfaces
- * ------------------------------
- */
-
-window.SoundManager = SoundManager; // constructor
-window.soundManager = soundManager; // public API, flash callbacks etc.
-
-}(window));
\ No newline at end of file
diff --git a/inc/SoundManager2/swf/soundmanager2.swf b/inc/SoundManager2/swf/soundmanager2.swf
deleted file mode 100755
index 14850f2..0000000
Binary files a/inc/SoundManager2/swf/soundmanager2.swf and /dev/null differ
diff --git a/inc/SoundManager2/swf/soundmanager2_debug.swf b/inc/SoundManager2/swf/soundmanager2_debug.swf
deleted file mode 100755
index aa4750a..0000000
Binary files a/inc/SoundManager2/swf/soundmanager2_debug.swf and /dev/null differ
diff --git a/inc/SoundManager2/swf/soundmanager2_flash9.swf b/inc/SoundManager2/swf/soundmanager2_flash9.swf
deleted file mode 100755
index 2705986..0000000
Binary files a/inc/SoundManager2/swf/soundmanager2_flash9.swf and /dev/null differ
diff --git a/inc/SoundManager2/swf/soundmanager2_flash9_debug.swf b/inc/SoundManager2/swf/soundmanager2_flash9_debug.swf
deleted file mode 100755
index 243d649..0000000
Binary files a/inc/SoundManager2/swf/soundmanager2_flash9_debug.swf and /dev/null differ
diff --git a/inc/SoundManager2/swf/soundmanager2_flash_xdomain.zip b/inc/SoundManager2/swf/soundmanager2_flash_xdomain.zip
deleted file mode 100755
index 29737aa..0000000
Binary files a/inc/SoundManager2/swf/soundmanager2_flash_xdomain.zip and /dev/null differ
diff --git a/inc/jasmid/replayer.js b/inc/jasmid/replayer.js
index 347fa1d..1b25e3f 100644
--- a/inc/jasmid/replayer.js
+++ b/inc/jasmid/replayer.js
@@ -6,9 +6,11 @@ var clone = function (o) {
 	return ret;
 };
 
-function Replayer(midiFile, timeWarp, eventProcessor) {
+function Replayer(midiFile, timeWarp, eventProcessor, bpm) {
 	var trackStates = [];
-	var beatsPerMinute = 120;
+	var beatsPerMinute = bpm ? bpm : 120;
+	var bpmOverride = bpm ? true : false;
+
 	var ticksPerBeat = midiFile.header.ticksPerBeat;
 	
 	for (var i = 0; i < midiFile.tracks.length; i++) {
@@ -70,19 +72,23 @@ function Replayer(midiFile, timeWarp, eventProcessor) {
 	//
 	function processEvents() {
 		function processNext() {
-			if ( midiEvent.event.type == "meta" && midiEvent.event.subtype == "setTempo" ) {
+		    if (!bpmOverride && midiEvent.event.type == "meta" && midiEvent.event.subtype == "setTempo" ) {
 				// tempo change events can occur anywhere in the middle and affect events that follow
 				beatsPerMinute = 60000000 / midiEvent.event.microsecondsPerBeat;
-			} 
+			}
+			///
+			var beatsToGenerate = 0;
+			var secondsToGenerate = 0;
 			if (midiEvent.ticksToEvent > 0) {
-				var beatsToGenerate = midiEvent.ticksToEvent / ticksPerBeat;
-				var secondsToGenerate = beatsToGenerate / (beatsPerMinute / 60);
+				beatsToGenerate = midiEvent.ticksToEvent / ticksPerBeat;
+				secondsToGenerate = beatsToGenerate / (beatsPerMinute / 60);
 			}
+			///
 			var time = (secondsToGenerate * 1000 * timeWarp) || 0;
 			temporal.push([ midiEvent, time]);
 			midiEvent = getNextEvent();
 		};
-		//
+		///
 		if (midiEvent = getNextEvent()) {
 			while(midiEvent) processNext(true);
 		}
diff --git a/inc/polyfill/Base64.js b/inc/polyfill/Base64.js
deleted file mode 100644
index 7c1ef07..0000000
--- a/inc/polyfill/Base64.js
+++ /dev/null
@@ -1,67 +0,0 @@
-// http://ntt.cc/2008/01/19/base64-encoder-decoder-with-javascript.html
-
-// window.atob and window.btoa
-
-(function (window) {
-
-	var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
-	
-	window.btoa || (window.btoa = function encode64(input) {
-		input = escape(input);
-		var output = "";
-		var chr1, chr2, chr3 = "";
-		var enc1, enc2, enc3, enc4 = "";
-		var i = 0;
-		do {
-			chr1 = input.charCodeAt(i++);
-			chr2 = input.charCodeAt(i++);
-			chr3 = input.charCodeAt(i++);
-			enc1 = chr1 >> 2;
-			enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
-			enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
-			enc4 = chr3 & 63;
-			if (isNaN(chr2)) {
-				enc3 = enc4 = 64;
-			} else if (isNaN(chr3)) {
-				enc4 = 64;
-			}
-			output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);
-			chr1 = chr2 = chr3 = "";
-			enc1 = enc2 = enc3 = enc4 = "";
-		} while (i < input.length);
-		return output;
-	});
-	
-	window.atob || (window.atob = function(input) {
-		var output = "";
-		var chr1, chr2, chr3 = "";
-		var enc1, enc2, enc3, enc4 = "";
-		var i = 0;
-		// remove all characters that are not A-Z, a-z, 0-9, +, /, or =
-		var base64test = /[^A-Za-z0-9\+\/\=]/g;
-		if (base64test.exec(input)) {
-			alert("There were invalid base64 characters in the input text.\n" + "Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\n" + "Expect errors in decoding.");
-		}
-		input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
-		do {
-			enc1 = keyStr.indexOf(input.charAt(i++));
-			enc2 = keyStr.indexOf(input.charAt(i++));
-			enc3 = keyStr.indexOf(input.charAt(i++));
-			enc4 = keyStr.indexOf(input.charAt(i++));
-			chr1 = (enc1 << 2) | (enc2 >> 4);
-			chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
-			chr3 = ((enc3 & 3) << 6) | enc4;
-			output = output + String.fromCharCode(chr1);
-			if (enc3 != 64) {
-				output = output + String.fromCharCode(chr2);
-			}
-			if (enc4 != 64) {
-				output = output + String.fromCharCode(chr3);
-			}
-			chr1 = chr2 = chr3 = "";
-			enc1 = enc2 = enc3 = enc4 = "";
-		} while (i < input.length);
-		return unescape(output);
-	});
-
-}(this));
\ No newline at end of file
diff --git a/inc/polyfill/WAAPISim/readme.md b/inc/polyfill/WAAPISim/readme.md
deleted file mode 100644
index 11d52da..0000000
--- a/inc/polyfill/WAAPISim/readme.md
+++ /dev/null
@@ -1,88 +0,0 @@
-# WAAPISim : Web Audio API Simulator
-
-WAAPISim is a 'WebAudioAPI' polyfill fallbacking to the 'Audio Data API', or Flash.  
-In addition, even in WebAudio API ready browsers, add some latest method name for node-creation and start/stop if the browser does not support these method name. 
-
-WAAPISim automatically check the availability of APIs:  
-WebAudioAPI => AudioDataAPI => Flash
-
-* Chrome : WebAudioAPI is supported. WAAPISim do nothing.
-* Safari (include iOS) : WebAudioAPI is supported but old method name is used. WAAPISim add new method name for node-creation, start/stop and setTargetAtTime.
-* Firefox : Simulate using AudioDataAPI
-* Opera : Simulate using Flash
-* MSIE : Simulate using Flash. Float32Array is assigned to normal Array(IE9).
-
-
-For more detail:
-**<http://www.g200kg.com/docs/waapisim/>**
-
-**WebAudioSynth running on MSIE**
-[![](./waapisimvideo.png)](http://www.youtube.com/watch?v=AHR2C2C2v8E)  
-
-## Some Links of Test-pages
-
-Try these pages with Firefox/Opera or MSIE.
-
-[Node test (Oscillator/ScriptProcessor/BiquadFilter/WaveShaper/Panner/Analyser)](http://www.g200kg.com/docs/waapisim/nodetest.html)  
-[Compressor test](http://www.g200kg.com/docs/waapisim/comptest.html)  
-[AudioParam Automation test](http://www.g200kg.com/docs/waapisim/automationtest.html)  
-[ChannelSplitter/ChannelMerger test](http://www.g200kg.com/docs/waapisim/test-split.html)  
-[Oscillator custom waveform test](http://www.g200kg.com/docs/waapisim/samples/test-osccustom.html)  
-
-**Shiny Happy MIDI Drum Machine (MIDIDrums)** (by Chris Wilson + (Chris Rogers and Ken Moore)) with WAAPISim  
-**<http://g200kg.github.com/MIDIDrums/>** forked from <https://github.com/cwilso/MIDIDrums>  
-
-**WebAudioSynth** (by aike) with WAAPISim  
-**<http://g200kg.github.com/webaudiosynth/>** forked from <https://github.com/aike/webaudiosynth>  
-
-## Current Status
-
-* **Support** : OscillatorNode / ChannelSplitterNode / ChannelMergerNode / AudioBufferSourceNode / WaveShaperNode / AnalyserNode / GainNode / BiquadFilterNode / DelayNode / DynamicsCompressorNode / PannerNode / ScriptProcessorNode / ConvolverNode
-
-* **Not Support** : MediaElementAudioSourceNode / MediaStreamAudioSourceNode / MediaStreamAudioDestinationNode / OfflineAudioCOntext
-
-* ConvolverNode : By performance reason, convolution is executed for only IR's first 1000 samples. Sebsequent part will be replaced as simple delays.
-
-* PannerNode : Simplified. Listener position should stay default. Source positions are interpreted as x-z 2d coordinate.
-
-* ScriptProcessorNode : Input buffer size should be 1024 and under (No limitation if use output only)
-
-* DynamicsCompressorNode : A little different characteristics from Chrome's implements.
-
-* Number of channels in each nodes should be 1 (mono) or 2(stereo)
-
-* createBuffer from ArrayBuffer and decodeAudioData supports only wav format.
-
-* k-rate AudioParam controls are executed only per 1024 samples frequency. a-rate AudioParams are controlled by sample.
-
-
-## Usage
-
-Load the 'waapisim.js' before using the Web Audio API functions in your script.
-
-`<script type="text/javascript" src="waapisim.js"></script>`
-
-To enable fallbacking to Flash, place the 'waapisim.swf' file to same folder as 'waapisim.js'.  
-
-### Options
-
-These lines should be specified before loading the 'waapisim.js'
-
-`<script type="text/javascript">waapisimLogEnable=1;</script>`  
-Enable internal log info to console.
-
-`<script type="text/javascript">waapisimForceSim=1;</script>`  
-Enable WAAPISim even if native WebAudioAPI is available.
-
-`<script type="text/javascript">waapisimForceSimWhenNotWebkit=1;</script>`  
-Force enable WAAPISim when non-webkit browser.  
-* some versions of Firefox have WebAudioAPI interfaces but not implemented completely (e.g. custom waveforms). Some apps may work better on Firefox with this flag.
-
-`<script type="text/javascript">waapisimForceSimWhenLackOsc=0;</script>`  
-Disable WAAPISim if native WebAudioAPI is available even lacking oscillator function (means Firefox 23). This flag is default on (=1).  
-* FIrefox 23 or ealier 's WebAudioAPI (need about:config flag setting) is very tentative. In default, WAAPISim ignore this version of WebAudoAPI.
-
-## License
-Copyright (c) 2013 g200kg  
-<http://www.g200kg.com/>  
-Released under the MIT License
diff --git a/inc/polyfill/WAAPISim/waapisim.js b/inc/polyfill/WAAPISim/waapisim.js
deleted file mode 100644
index 99f5ce4..0000000
--- a/inc/polyfill/WAAPISim/waapisim.js
+++ /dev/null
@@ -1,1787 +0,0 @@
-// Web Audio API Simulator
-// Copyright (c) 2013 g200kg
-// http://www.g200kg.com/
-//         Released under the MIT-License
-//         http://opensource.org/licenses/MIT
-//
-//  Great thanks :
-//  FFT algo for AnalyserNode and Convolver is based on Takuya OOURA's explanation.
-//   http://www.kurims.kyoto-u.ac.jp/~ooura/fftman/index.html
-
-if(typeof(waapisimLogEnable)==="undefined")
-	var waapisimLogEnable=0;
-
-// Support Float32Array&Uint8Array if unavailable (for IE9)
-if(typeof(Float32Array)==="undefined") {
-	Float32Array=function(n) {
-		if(n instanceof Array)
-			return n;
-		var a=new Array(n);
-		a.subarray=function(x,y) {return this.slice(x,y);};
-		a.set=function(x,off) {for(var i=0;i<x.length;++i) a[off+i]=x[i];};
-		return a;
-	};
-}
-if(typeof(Uint8Array)==="undefined") {
-	Uint8Array=function(n) {
-		if(n instanceof Array)
-			return n;
-		var a=new Array(n);
-		a.subarray=function(x,y) {return this.slice(x,y);};
-		a.set=function(x,off) {for(var i=0;i<x.length;++i) a[off+i]=x[i];};
-		return a;
-	};
-}
-
-if(typeof(waapisimLogEnable)!=="undefined"&&waapisimLogEnable)
-	waapisimDebug=function(a) {console.log(a);};
-else
-	waapisimDebug=function(){};
-
-if(typeof(webkitAudioContext)!=="undefined") {
-	if(typeof(webkitAudioContext.prototype.createGain)==="undefined") {
-		webkitAudioContext.prototype.createScriptProcessor=webkitAudioContext.prototype.createJavaScriptNode;
-		webkitAudioContext.prototype.createGain=(function(){
-			var o=webkitAudioContext.prototype.createGainNode.call(this);
-			o._gain=o.gain; o.gain=o._gain;
-			o.gain.setTargetAtTime=o._gain.setTargetValueAtTime;
-			return o;
-		});
-		webkitAudioContext.prototype.createDelay=(function(){
-			var o=webkitAudioContext.prototype.createDelayNode.call(this);
-			o._delayTime=o.delayTime; o.delayTime=o._delayTime;
-			o.delayTime.setTargetAtTime=o._delayTime.setTargetValueAtTime;
-			return o;
-		});
-		webkitAudioContext.prototype._createOscillator=webkitAudioContext.prototype.createOscillator;
-		webkitAudioContext.prototype.createOscillator=(function() {
-			var o=webkitAudioContext.prototype._createOscillator.call(this);
-			o._frequency=o.frequency; o.frequency=o._frequency;
-			o.frequency.setTargetAtTime=o._frequency.setTargetValueAtTime;
-			o._detune=o.detune; o.detune=o._detune;
-			o.detune.setTargetAtTime=o._detune.setTargetValueAtTime;
-			o.start=o.noteOn;
-			o.stop=o.noteOff;
-			return o;
-		});
-		webkitAudioContext.prototype._createBufferSource=webkitAudioContext.prototype.createBufferSource;
-		webkitAudioContext.prototype.createBufferSource=(function() {
-			var o=webkitAudioContext.prototype._createBufferSource.call(this);
-			o._playbackRate=o.playbackRate; o.playbackRate=o._playbackRate;
-			o.playbackRate.setTargetAtTime=o._playbackRate.setTargetValueAtTime;
-			o.start=function(w,off,dur) {
-				if(off===undefined)
-					o.noteOn(w);
-				else
-					o.noteGrainOn(w,off,dur);
-			};
-			o.stop=o.noteOff;
-			return o;
-		});
-		webkitAudioContext.prototype._createBiquadFilter=webkitAudioContext.prototype.createBiquadFilter;
-		webkitAudioContext.prototype.createBiquadFilter=(function() {
-			var o=webkitAudioContext.prototype._createBiquadFilter.call(this);
-			o._frequency=o.frequency; o.frequency=o._frequency;
-			o.frequency.setTargetAtTime=o._frequency.setTargetValueAtTime;
-			o._Q=o.Q; o.Q=o._Q;
-			o.Q.setTargetAtTime=o._Q.setTargetValueAtTime;
-			o._gain=o.gain; o.gain=o._gain;
-			o.gain.setTargetAtTime=o._gain.setTargetValueAtTime;
-			return o;
-		});
-		webkitAudioContext.prototype._createDynamicsCompressor=webkitAudioContext.prototype.createDynamicsCompressor;
-		webkitAudioContext.prototype.createDynamicsCompressor=(function() {
-			var o=webkitAudioContext.prototype._createDynamicsCompressor.call(this);
-			o._threshold=o.threshold; o.threshold=o._threshold;
-			o.threshold.setTargetAtTime=o._threshold.setTargetValueAtTime;
-			o._knee=o.knee; o.knee=o._knee;
-			o.knee.setTargetAtTime=o._knee.setTargetValueAtTime;
-			o._ratio=o.ratio; o.ratio=o._ratio;
-			o.ratio.setTargetAtTime=o._ratio.setTargetValueAtTime;
-			o._attack=o.attack; o.attack=o._attack;
-			o.attack.setTargetAtTime=o._attack.setTargetValueAtTime;
-			return o;
-		});
-	}
-}
-if((typeof(waapisimForceSim)!=="undefined"&&waapisimForceSim)
-		||(typeof(AudioContext)!=="undefined"&&typeof(AudioContext.prototype.createOscillator)==="undefined"&&(typeof(waapisimForceSimWhenLackOsc)==="undefined"||(typeof(waapisimForceSimWhenLackOsc)!=="undefined"&&waapisimForceSimWhenLackOsc)))
-		||(typeof(webkitAudioContext)==="undefined" && typeof(waapisimForceSimWhenNotWebkit)!=="undefined"&&waapisimForceSimWhenNotWebkit)
-		||(typeof(webkitAudioContext)==="undefined" && typeof(AudioContext)==="undefined")) {
-	waapisimSampleRate=44100;
-	waapisimAudioIf=0;
-	waapisimBufSize=1024;
-	waapisimFlashBufSize=1024*3;
-	if(typeof(Audio)!=="undefined") {
-		waapisimAudio=new Audio();
-		if(typeof(waapisimAudio.mozSetup)!=="undefined")
-			waapisimAudioIf=1;
-	}
-	if(waapisimAudioIf===0) {
-		waapisimOutBufSize=waapisimFlashBufSize;
-		waapisimOutBuf=new Array(waapisimOutBufSize*2);
-	}
-	else {
-		waapisimOutBufSize=waapisimBufSize;
-		waapisimOutBuf=new Float32Array(waapisimOutBufSize*2);
-		waapisimAudio.mozSetup(2,waapisimSampleRate);
-	}
-	for(var l=waapisimOutBuf.length,i=0;i<l;++i)
-		waapisimOutBuf[i]=0;
-	waapisimWrittenpos=0;
-	waapisimNodeId=0;
-	waapisimContexts=[];
-	waapisimAudioBuffer=function(ch,len,rate) {
-		var i,j;
-		if(typeof(ch)=="number") {
-			len|=0;
-			this.sampleRate=rate;
-			this.length=len;
-			this.duration=len/this.sampleRate;
-			this.numberOfChannels=ch;
-			this.buf=[];
-			for(i=0;i<2;++i) {
-				this.buf[i]=new Float32Array(len);
-				for(j=0;j<len;++j)
-					this.buf[i][j]=0;
-			}
-		}
-		else {
-			var inbuf;
-			this.sampleRate=44100;
-			this.buf=[];
-			this.buf[0]=new Float32Array(0);
-			this.buf[1]=new Float32Array(0);
-			this.Get4BStr=function(b,n) {
-				return String.fromCharCode(b[n],b[n+1],b[n+2],b[n+3]);
-			};
-			this.GetDw=function(b,n) {
-				return b[n]+(b[n+1]<<8)+(b[n+2]<<16)+(b[n+3]<<24);
-			};
-			this.GetWd=function(b,n) {
-				return b[n]+(b[n+1]<<8);
-			};
-			inbuf=new Uint8Array(ch);
-			var mixtomono=len;
-			var riff=this.Get4BStr(inbuf,0);
-			this.length=0;
-			if(riff=="RIFF") {
-				var filesize=this.GetDw(inbuf,4)+8;
-				var wave=this.Get4BStr(inbuf,8);
-				var fmtid=0;
-				var wavch=1;
-				var wavbits=16;
-				if(wave=="WAVE") {
-					var idx=12;
-					while(idx<filesize) {
-						var chunk=this.Get4BStr(inbuf,idx);
-						var chunksz=this.GetDw(inbuf,idx+4);
-						if(chunk=="fmt ") {
-							fmtid=this.GetWd(inbuf,idx+8);
-							wavch=this.GetWd(inbuf,idx+10);
-							this.sampleRate=this.GetDw(inbuf,idx+12);
-							wavbits=this.GetWd(inbuf,idx+22);
-						}
-						if(chunk=="data") {
-							this.length=(chunksz/wavch/(wavbits/8))|0;
-							this.buf[0]=new Float32Array(this.length);
-							this.buf[1]=new Float32Array(this.length);
-							this.numberOfChannels=wavch;
-							this.duration=this.length/this.sampleRate;
-							var v0,v1;
-							for(i=0,j=0;i<this.length;++i) {
-								if(wavbits==24) {
-									if(wavch==2) {
-										v0=inbuf[idx+j+9]+(inbuf[idx+j+10]<<8);
-										v1=inbuf[idx+j+12]+(inbuf[idx+j+13]<<8);
-										if(v0>=32768) v0=v0-65536;
-										if(v1>=32768) v1=v1-65536;
-										if(mixtomono===true)
-											v0=v1=(v0+v1)*0.5;
-										this.buf[0][i]=v0/32768;
-										this.buf[1][i]=v1/32768;
-										j+=6;
-									}
-									else {
-										v=inbuf[idx+j+9]+(inbuf[idx+j+10]<<8);
-										if(v>=32768) v=v-65536;
-										this.buf[0][i]=this.buf[1][i]=v/32768;
-										j+=3;
-									}
-								}
-								else if(wavbits==16) {
-									if(wavch==2) {
-										v0=inbuf[idx+j+8]+(inbuf[idx+j+9]<<8);
-										v1=inbuf[idx+j+10]+(inbuf[idx+j+11]<<8);
-										if(v0>=32768) v0=v0-65536;
-										if(v1>=32768) v1=v1-65536;
-										if(mixtomono===true)
-											v0=v1=(v0+v1)*0.5;
-										this.buf[0][i]=v0/32768;
-										this.buf[1][i]=v1/32768;
-										j+=4;
-									}
-									else {
-										v=inbuf[idx+j+8]+(inbuf[idx+j+9]<<8);
-										if(v>=32768) v=v-65536;
-										this.buf[0][i]=this.buf[1][i]=v/32768;
-										j+=2;
-									}
-								}
-								else {
-									if(wavch==2) {
-										v0=inbuf[idx+j+8]/128-1;
-										v1=inbuf[idx+j+9]/128-1;
-										if(mixtomono===true)
-											v0=v1=(v0+v1)*0.5;
-										this.buf[0][i]=v0;
-										this.buf[1][i]=v1;
-										j+=2;
-									}
-									else {
-										this.buf[0][i]=this.buf[1][i]=inbuf[idx+j+8]/128-1;
-										j++;
-									}
-								}
-							}
-						}
-						idx+=(chunksz+8);
-					}
-				}
-			}
-		}
-		this.getChannelData=function(i) {
-			return this.buf[i];
-		};
-		return this;
-	};
-	waapisimDummybuf=new waapisimAudioBuffer(2,waapisimBufSize,waapisimSampleRate);
-	waapisimSetupOutBuf=function(offset) {
-		var numctx=waapisimContexts.length;
-		var l,i,j,k,n,node;
-		for(l=(offset+waapisimBufSize)*2,i=offset*2;i<l;i+=2)
-			waapisimOutBuf[i]=waapisimOutBuf[i+1]=0;
-		for(n=0;n<numctx;++n) {
-			var ctx=waapisimContexts[n];
-			for(;;) {
-				for(l=ctx._Nodes.length,i=0;i<l;++i) {
-					node=ctx._Nodes[i];
-					if(node.playbackState==3) {
-						node.disconnect();
-						ctx._UnregisterNode(node);
-						break;
-					}
-				}
-				if(i==l)
-					break;
-			}
-			for(l=ctx._Nodes.length,i=0;i<l;++i)
-				ctx._Nodes[i]._Process();
-			node=ctx.destination;
-			if(node._nodein[0].from.length>0) {
-				var buf=node._nodein[0].inbuf.buf;
-				for(i=0;i<waapisimBufSize;++i) {
-					waapisimOutBuf[(i+offset)*2]+=buf[0][i];
-					waapisimOutBuf[(i+offset)*2+1]+=buf[1][i];
-				}
-			}
-			node._nodein[0].NodeClear();
-		}
-	};
-	waapisimUpdateCurrentTime=function(t) {
-		for(var i=waapisimContexts.length;i--;)
-			waapisimContexts[i].currentTime=t;
-	};
-	waapisimInterval=function() {
-		var curpos=waapisimAudio.mozCurrentSampleOffset();
-		var buffered=waapisimWrittenpos-curpos;
-		var vl,vr;
-		waapisimUpdateCurrentTime(curpos/(waapisimSampleRate*2));
-		if(buffered<16384) {
-			waapisimSetupOutBuf(0);
-			waapisimWrittenpos+=waapisimAudio.mozWriteAudio(waapisimOutBuf);
-		}
-	};
-	waapisimGetSwfPath=function() {
-		var scr=document.getElementsByTagName("SCRIPT");
-		if(scr&&scr.length>0) {
-			for(var i in scr) {
-				if(scr[i].src && scr[i].src.match(/waapisim\.js$/)) {
-					var s=scr[i].src;
-					return s.substring(0,s.length-2)+"swf";
-				}
-			}
-		}
-		return "";
-	};
-	waapisimAddFlashObj=function() {
-		var div=document.createElement("DIV");
-		div.setAttribute("id","WAAPISIMFLASHOBJ");
-		div.setAttribute("style","background:#ff00ff;position:static;");
-		var body=document.getElementsByTagName("BODY");
-		body[0].appendChild(div);
-		document.getElementById("WAAPISIMFLASHOBJ").innerHTML="<div style='position:fixed;right:0px;bottom:0px'> <object id='waapisim_swf' CLASSID='clsid:D27CDB6E-AE6D-11cf-96B8-444553540000' CODEBASE='http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=4,0,0,0' width=150 height=20><param name=movie value='"+waapisimSwfPath+"'><PARAM NAME=bgcolor VALUE=#FFFFFF><PARAM NAME=LOOP VALUE=false><PARAM NAME=quality VALUE=high><param name='allowScriptAccess' value='always'><embed src='"+waapisimSwfPath+"' width=150 height=20 bgcolor=#FFFFFF loop=false quality=high pluginspage='http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash' type='application/x-shockwave-flash' allowScriptAccess='always'></embed></object></div>";
-		if(typeof(document.getElementById("waapisim_swf").SetReturnValue)==="undefined")
-			document.getElementById("waapisim_swf").SetReturnValue=function(v){document.getElementById("waapisim_swf").impl.SetReturnValue(v);};
-	};
-	waapisimFlashOffset=function(pos) {
-		waapisimUpdateCurrentTime(pos/1000);
-	};
-	waapisimFlashGetData=function() {
-		var s="";
-		var l;
-		for(l=waapisimOutBufSize/waapisimBufSize,i=0;i<l;++i) {
-			waapisimSetupOutBuf(waapisimBufSize*i);
-		}
-		waapisimWrittenpos+=waapisimOutBufSize*2;
-		for(l=waapisimOutBufSize*2,i=0;i<l;++i) {
-			var v=(waapisimOutBuf[i]*16384+32768)|0;
-			if(isNaN(v)) v=32768;
-			v = Math.min(49152, Math.max(16384, v));
-			s+=String.fromCharCode(v);
-		}
-		return s;
-	};
-	switch(waapisimAudioIf) {
-	case 0:
-		waapisimSwfPath=waapisimGetSwfPath();
-		window.addEventListener("load",waapisimAddFlashObj,false);
-		break;
-	case 1:
-		setInterval(waapisimInterval,10);
-		break;
-	}
-	AudioContext=webkitAudioContext=function() {
-		waapisimContexts.push(this);
-		this._Nodes=[];
-		this.destination=new waapisimAudioDestinationNode(this);
-		this.sampleRate=44100;
-		this.currentTime=0;
-		this.activeSourceCount=0;
-		this.listener=new waapisimAudioListener();
-		this.createBuffer=function(ch,len,rate) {
-			return new waapisimAudioBuffer(ch,len,rate);
-		};
-		this.createBufferSource=function() {
-			return new waapisimAudioBufferSource(this);
-		};
-		this.createScriptProcessor=this.createJavaScriptNode=function(bufsize,inch,outch) {
-			return new waapisimScriptProcessor(this,bufsize,inch,outch);
-		};
-		this.createBiquadFilter=function() {
-			return new waapisimBiquadFilter(this);
-		};
-		this.createGain=this.createGainNode=function() {
-			return new waapisimGain(this);
-		};
-		this.createDelay=this.createDelayNode=function() {
-			return new waapisimDelay(this);
-		};
-		this.createOscillator=function() {
-			return new waapisimOscillator(this);
-		};
-		this.createAnalyser=function() {
-			return new waapisimAnalyser(this);
-		};
-		this.createConvolver=function() {
-			return new waapisimConvolver(this);
-		};
-		this.createDynamicsCompressor=function() {
-			return new waapisimDynamicsCompressor(this);
-		};
-		this.createPanner=function() {
-			return new waapisimPanner(this);
-		};
-		this.createChannelSplitter=function(ch) {
-			return new waapisimChannelSplitter(this,ch);
-		};
-		this.createChannelMerger=function(ch) {
-			return new waapisimChannelMerger(this,ch);
-		};
-		this.createWaveShaper=function() {
-			return new waapisimWaveShaper(this);
-		};
-		this.decodeAudioData=function(audioData,successCallback,errorCallback) {
-			var buf=new waapisimAudioBuffer(audioData,false);
-			if(buf.length>0)
-				successCallback(buf);
-			else
-				errorCallback();
-		};
-		this.createPeriodicWave=this.createWaveTable=function(real,imag) {
-			return new waapisimPeriodicWave(real,imag);
-		};
-		this._SortNode=function() {
-			var i,j,k,n;
-			for(i=0;i<this._Nodes.length;++i) {
-				n=this._Nodes[i];
-				if(n._order>0) {
-					for(j=0;j<n._nodein.length;++j) {
-						for(k=0;k<n._nodein[j].from.length;++k) {
-							var o=n._nodein[j].from[k].node._order;
-							if(n._order<o+1)
-								n._order=o+1;
-						}
-					}
-				}
-			}
-			this._Nodes.sort(function(a,b){return b._order-a._order;});
-		}
-		this._RegisterNode=function(node) {
-			for(var i=this._Nodes.length;i--;) {
-				if(this._Nodes[i]===node) {
-					return false;
-				}
-			}
-			this._Nodes.push(node);
-			this._SortNode();
-			return true;
-		};
-		this._UnregisterNode=function(node) {
-			for(var i=this._Nodes.length;i--;) {
-				if(this._Nodes[i]==node) {
-					this._Nodes.splice(i,1);
-				}
-			}
-		};
-	};
-	waapisimAudioListener=function() {
-		this.px=0; this.py=0; this.pz=0;
-		this.ox=0; this.oy=0; this.oz=-1;
-		this.ux=0; this.uy=1; this.uz=0;
-		this.dopplerFactor=1;
-		this.speedOfSound=343.3;
-		this.setPosition=function(x,y,z) {this.px=x;this.py=y;this.pz=z;};
-		this.setOrientation=function(x,y,z,ux,uy,uz) {this.ox=x;this.oy=y;this.oz=z;this.ux=ux;this.uy=uy;this.uz=uz;};
-		this.setVelocity=function(x,y,z) {};
-	};
-	waapisimPeriodicWave=function(real,imag) {
-		var n=4096;
-		var ar=new Array(n);
-		var ai=new Array(n);
-		this.buf=new Float32Array(n);
-		var m, mh, i, j, k;
-		var wr, wi, xr, xi;
-		for(i=0;i<n;++i)
-			ar[i]=ai[i]=0;
-		i=j=0;
-		do {
-			ar[i]=real[j];
-			ai[i]=-imag[j];
-			for(var k=n>>1;k>(i^=k);k>>=1)
-				;
-		} while(++j<real.length);
-		var theta=2*Math.PI;
-		for(mh=1;(m=mh<<1)<=n;mh=m) {
-			theta *= 0.5;
-			for(i=0;i<mh;i++) {
-				wr=Math.cos(theta*i);
-				wi=Math.sin(theta*i);
-				for(j=i;j<n;j+=m) {
-					k=j+mh;
-					xr=wr*ar[k]-wi*ai[k];
-					xi=wr*ai[k]+wi*ar[k];
-					ar[k]=ar[j]-xr;
-					ai[k]=ai[j]-xi;
-					ar[j]+=xr;
-					ai[j]+=xi;
-				}
-			}
-		}
-		var max=0;
-		for(i=0;i<n;++i) {
-			var v=Math.abs(ar[i]);
-			if(v>max)
-				max=v;
-		}
-		if(max==0) {
-			for(i=0;i<n;++i)
-				this.buf[i]=0;
-		}
-		else {
-			for(i=0;i<n;++i)
-				this.buf[i]=ar[i]/max;
-		}
-	};
-	waapisimAudioNode=function(size,numin,numout) {
-		this.numberOfInputs=numin;
-		this.numberOfOutputs=numout;
-		this._nodeId=waapisimNodeId;
-		this._order=1;
-		++waapisimNodeId;
-		this._targettype=1;
-		this.context=null;
-		this._nodein=[];
-		this._nodeout=[];
-		var i;
-		for(i=0;i<numin;++i)
-			this._nodein[i]=new waapisimAudioNodeIn(this,size);
-		for(i=0;i<numout;++i)
-			this._nodeout[i]=new waapisimAudioNodeOut(this,size);
-		this.connect=function(next,output,input) {
-			if(typeof(output)==="undefined")
-				output=0;
-			if(typeof(input)==="undefined")
-				input=0;
-			if(this._nodeout[output]) {
-				if(next._targettype!==0)
-					this._nodeout[output].connect(next._nodein[input]);
-				else
-					this._nodeout[output].connect(next);
-			}
-		};
-		this.disconnect=function(output) {
-			if(typeof(this._nodeout[output])==="undefined")
-				output=0;
-			this._nodeout[output].disconnect();
-		};
-	};
-	waapisimAudioNodeIn=function(node,size) {
-		this.node=node;
-		this.from=[];
-		this.inbuf=new waapisimAudioBuffer(2,size,waapisimSampleRate);
-		this.NodeClear=function() {
-			for(var i=0;i<waapisimBufSize;++i)
-				this.inbuf.buf[0][i]=this.inbuf.buf[1][i]=0;
-		};
-	};
-	waapisimAudioNodeOut=function(node,size) {
-		this.node=node;
-		this.to=[];
-
-		this.connect=function(next) {
-			waapisimDebug("connect "+this.node._nodetype+this.node._nodeId+"=>"+next.node._nodetype+next.node._nodeId);
-			if(next===undefined)
-				return;
-			if(next.from.indexOf(this)!=-1)
-				return;
-			next.from.push(this);
-			if(this.to.indexOf(next)==-1)
-				this.to.push(next);
-			if(next.node._targettype!==0) {
-				if(this.node.context._RegisterNode(next.node)) {
-					for(var i=0;i<next.node._nodeout.length;++i) {
-						for(var ii=0;ii<next.node._nodeout[i].to.length;++ii) {
-							next.node._nodeout[i].connect(next.node._nodeout[i].to[ii]);
-						}
-					}
-				}
-			}
-		};
-		this.disconnectTemp=function() {
-			var i,j,k,l,n,ii,jj,ll,node,node2;
-			waapisimDebug("disconnect "+this.node._nodetype+this.node._nodeId);
-			var nodes=this.node.context._Nodes;
-			for(l=nodes.length,i=0;i<l;++i) {
-				for(ll=nodes[i]._nodein.length,ii=0;ii<ll;++ii) {
-					j=nodes[i]._nodein[ii].from.indexOf(this);
-					if(j>=0) {
-						waapisimDebug("  :"+this.node._nodeId+"=>"+nodes[i]._nodeId);
-						nodes[i]._nodein[ii].from.splice(j,1);
-					}
-				}
-			}
-			for(i=0;i<nodes.length;++i) {
-				node=nodes[i];
-				if(node._targettype==1) {
-					n=0;
-					for(ii=0;ii<node._nodein.length;++ii)
-						n+=node._nodein[ii].from.length;
-					if(n===0) {
-						this.node.context._UnregisterNode(node);
-						for(ii=0;ii<node._nodeout.length;++ii)
-							node._nodeout[ii].disconnectTemp();
-						break;
-					}
-				}
-			}
-		};
-		this.disconnect=function() {
-			this.disconnectTemp();
-			this.to.length=0;
-		};
-		this.NodeEmit=function(idx,v1,v2) {
-			for(var l=this.to.length,i=0;i<l;++i) {
-				var buf=this.to[i].inbuf.buf;
-				buf[0][idx]+=v1;
-				buf[1][idx]+=v2;
-			}
-		};
-		this.NodeEmitBuf=function() {
-			for(var l=this.to.length,i=0;i<l;++i) {
-				var b0=this.to[i].inbuf.buf[0];
-				var b1=this.to[i].inbuf.buf[1];
-				for(var j=0;j<waapisimBufSize;++j) {
-					b0[j]+=this.outbuf.buf[0][j];
-					b1[j]+=this.outbuf.buf[1][j];
-				}
-			}
-		};
-		this.outbuf=new waapisimAudioBuffer(2,size,waapisimSampleRate);
-	};
-	waapisimAudioProcessingEvent=function() {
-	};
-	waapisimAudioDestinationNode=function(ctx) {
-		waapisimAudioNode.call(this,waapisimBufSize,1,0);
-		this._nodetype="Destination";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		this._targettype=2;
-		this.context=ctx;
-		this.playbackState=0;
-		this.maxNumberOfChannels=2;
-		this.numberOfChannels=2;
-		this._Process=function() {};
-		ctx._Nodes.push(this);
-	};
-	
-	waapisimAudioBufferSource=webkitAudioBufferSourceNode=AudioBufferSourceNode=function(ctx) {
-		waapisimAudioNode.call(this,waapisimBufSize,0,1);
-		this._nodetype="BufSrc";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		this._targettype=3;
-		this._order=0;
-		this.context=ctx;
-		this.playbackState=0;
-		this.buffer=null;
-		this.playbackRate=new waapisimAudioParam(ctx,this,0,10,1);
-		this.gain=new waapisimAudioParam(ctx,this,0,1,1); // Undocumented
-		this.loop=false;
-		this.loopStart=0;
-		this.loopEnd=0;
-		this._bufferindex=0;
-		this._whenstart=0;
-		this._whenstop=Number.MAX_VALUE;
-		this._endindex=0;
-		this._actualLoopStart=0;
-		this._actualLoopEnd=0;
-		this.start=this.noteOn=this.noteGrainOn=function(w,off,dur) {
-			if(this.buffer===null)
-				return;
-			this.playbackState=1;
-			this._whenstart=w;
-			if(off>0)
-				this._bufferindex=off*waapisimSampleRate;
-			this._endindex=this.buffer.length;
-			if(dur>0)
-				this._endindex=Math.min(this.buffer.length,(dur+off)*waapisimSampleRate);
-			if(this.loop) {
-				if((this.loopStart||this.loopEnd)&&this.loopStart>=0&&this.loopEnd>0&&this.loopStart<this.loopEnd) {
-					this._actualLoopStart=this.loopStart;
-					this._actualLoopEnd=Math.min(this.loopEnd,this.buffer.length);
-				}
-				else {
-					this._actualLoopStart=0;
-					this._actualLoopEnd=this.buffer.length;
-				}
-			}
-			this.context._RegisterNode(this);
-		};
-		this.stop=this.noteOff=function(w) {
-			this._whenstop=w;
-		};
-		this._Process=function() {
-			this.playbackRate._Process();
-			if(this.buffer!==null && this._bufferindex>=this._endindex) {
-				if(this.playbackState==2)
-					--this.context.activeSourceCount;
-				this.playbackState=3;
-			}
-			if(this.playbackState==1 && this.context.currentTime>=this._whenstart) {
-				this.playbackState=2;
-				++this.context.activeSourceCount;
-			}
-			if(this.playbackState==2 && this.context.currentTime>=this._whenstop) {
-				this.playbackState=3;
-				--this.context.activeSourceCount;
-			}
-			if(this.playbackState!=2)
-				return;
-			var b0=this.buffer.getChannelData(0);
-			var b1=this.buffer.getChannelData(1);
-			var rate=this.buffer.sampleRate/44100;
-			if(this._nodeout[0].to.length>0) {
-				for(var i=0;i<waapisimBufSize;++i) {
-					if(this._bufferindex<this._endindex) {
-						var g=this.gain.Get(i);
-						var idx=this._bufferindex|0;
-						this._nodeout[0].outbuf.buf[0][i]=b0[idx]*g;
-						this._nodeout[0].outbuf.buf[1][i]=b1[idx]*g;
-					}
-					this._bufferindex+=rate*this.playbackRate.Get(i);
-					if(this.loop) {
-						if(this._bufferindex>=this._actualLoopEnd)
-							this._bufferindex=this._actualLoopStart;
-					}
-				}
-				this._nodeout[0].NodeEmitBuf();
-				this.playbackRate.Clear(true);
-			}
-		};
-	};
-	waapisimAudioBufferSource.UNSCHEDULED_STATE=waapisimAudioBufferSource.prototype.UNSCHEDULED_STATE=0;
-	waapisimAudioBufferSource.SCHEDULED_STATE=waapisimAudioBufferSource.prototype.SCHEDULED_STATE=1;
-	waapisimAudioBufferSource.PLAYING_STATE=waapisimAudioBufferSource.prototype.PLAYING_STATE=2;
-	waapisimAudioBufferSource.FINISHED_STATE=waapisimAudioBufferSource.prototype.FINISHED_STATE=3;
-	
-	waapisimScriptProcessor=function(ctx,bufsize,inch,outch) {
-		waapisimAudioNode.call(this,waapisimBufSize,1,1);
-		this._nodetype="ScrProc";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		this._targettype=2;
-		this.context=ctx;
-		this.playbackState=0;
-		if(typeof(bufsize)!=="number")
-			throw(new TypeError("ScriptProcessor:bufferSize"));
-		if(typeof(inch)==="undefined")
-			inch=2;
-		if(typeof(outch)==="undefined")
-			outch=2;
-		this.bufferSize=bufsize;
-		this._scrinbuf=new waapisimAudioBuffer(inch,bufsize,waapisimSampleRate);
-		this._scroutbuf=new waapisimAudioBuffer(outch,bufsize,waapisimSampleRate);
-		this._index=bufsize;
-		this.onaudioprocess=null;
-		this._Process=function() {
-			var inb=this._nodein[0].inbuf;
-			if(inb===null)
-				inb=waapisimDummybuf;
-			for(var i=0;i<waapisimBufSize;++i) {
-				if(this._index>=this.bufferSize) {
-					if(this.onaudioprocess) {
-						var ev=new waapisimAudioProcessingEvent();
-						ev.node=this;
-						ev.inputBuffer=this._scrinbuf;
-						ev.outputBuffer=this._scroutbuf;
-						this.onaudioprocess(ev);
-					}
-					this._index=0;
-				}
-				this._scrinbuf.buf[0][this._index]=inb.buf[0][i];
-				if(this._scrinbuf.numberOfChannels>=2)
-					this._scrinbuf.buf[1][this._index]=inb.buf[1][i];
-				if(this._scroutbuf.numberOfChannels>=2)
-					this._nodeout[0].NodeEmit(i,this._scroutbuf.buf[0][this._index],this._scroutbuf.buf[1][this._index]);
-				else
-					this._nodeout[0].NodeEmit(i,this._scroutbuf.buf[0][this._index],this._scroutbuf.buf[0][this._index]);
-				this._index++;
-			}
-			this._nodein[0].NodeClear();
-		};
-		ctx._RegisterNode(this);
-	};
-	waapisimBiquadFilter=webkitBiquadFilterNode=BiquadFilterNode=function(ctx) {
-		waapisimAudioNode.call(this,waapisimBufSize,1,1);
-		this._nodetype="Filter";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		this.context=ctx;
-		this.playbackState=0;
-		this.type=0;
-		this.frequency=new waapisimAudioParam(ctx,this,10,24000,350,0.5);
-		this.detune=new waapisimAudioParam(ctx,this,-4800,4800,0,0.5);
-		this.Q=new waapisimAudioParam(ctx,this,0.0001,1000,1,0.5);
-		this.gain=new waapisimAudioParam(ctx,this,-40,40,0,0.5);
-		this._a1=this._a2=0;
-		this._b0=this._b1=this._b2=0;
-		this._x1l=this._x1r=this._x2l=this._x2r=0;
-		this._y1l=this._y1r=this._y2l=this._y2r=0;
-		this._nodein[0].NodeClear();
-		this._Setup=function(fil) {
-			var f=fil.frequency.Get(0)*Math.pow(2,fil.detune.Get(0)/1200);
-			var q=Math.max(0.001,fil.Q.Get(0));
-			var alpha,ra0,g;
-			var w0=2*Math.PI*f/fil.context.sampleRate;
-			var cos=Math.cos(w0);
-			switch(fil.type) {
-			case "lowpass":
-			case 0:
-				q=Math.pow(10,q/20);
-				alpha=Math.sin(w0)/(2*q);
-				ra0=1/(1+alpha);
-				fil._a1=-2*cos*ra0;
-				fil._a2=(1-alpha)*ra0;
-				fil._b0=fil._b2=(1-cos)/2*ra0;
-				fil._b1=(1-cos)*ra0;
-				break;
-			case "highpass":
-			case 1:
-				q=Math.pow(10,q/20);
-				alpha=Math.sin(w0)/(2*q);
-				ra0=1/(1+alpha);
-				fil._a1=-2*cos*ra0;
-				fil._a2=(1-alpha)*ra0;
-				fil._b0=fil._b2=(1+cos)/2*ra0;
-				fil._b1=-(1+cos)*ra0;
-				break;
-			case "bandpass":
-			case 2:
-				alpha=Math.sin(w0)/(2*q);
-				ra0=1/(1+alpha);
-				fil._a1=-2*cos*ra0;
-				fil._a2=(1-alpha)*ra0;
-				fil._b0=alpha;
-				fil._b1=0;
-				fil._b2=-alpha;
-				break;
-			case "lowshelf":
-			case 3:
-				alpha=Math.sin(w0)/2*Math.sqrt(2);
-				g=Math.pow(10,fil.gain.Get(0)/40);
-				ra0=1/((g+1)+(g-1)*cos+2*Math.sqrt(g)*alpha);
-				fil._a1=-2*((g-1)+(g+1)*cos)*ra0;
-				fil._a2=((g+1)+(g-1)*cos-2*Math.sqrt(g)*alpha)*ra0;
-				fil._b0=g*((g+1)-(g-1)*cos+2*Math.sqrt(g)*alpha)*ra0;
-				fil._b1=2*g*((g-1)-(g+1)*cos)*ra0;
-				fil._b2=g*((g+1)-(g-1)*cos-2*Math.sqrt(g)*alpha)*ra0;
-				break;
-			case "highshelf":
-			case 4:
-				alpha=Math.sin(w0)/2*Math.sqrt(2);
-				g=Math.pow(10,fil.gain.Get(0)/40);
-				ra0=1/((g+1)-(g-1)*cos+2*Math.sqrt(g)*alpha);
-				fil._a1=2*((g-1)-(g+1)*cos)*ra0;
-				fil._a2=((g+1)-(g-1)*cos-2*Math.sqrt(g)*alpha)*ra0;
-				fil._b0=g*((g+1)+(g-1)*cos+2*Math.sqrt(g)*alpha)*ra0;
-				fil._b1=-2*g*((g-1)+(g+1)*cos)*ra0;
-				fil._b2=g*((g+1)+(g-1)*cos-2*Math.sqrt(g)*alpha)*ra0;
-				break;
-			case "peaking":
-			case 5:
-				alpha=Math.sin(w0)/(2*q);
-				g=Math.pow(10,fil.gain.Get(0)/40);
-				ra0=1/(1+alpha/g);
-				fil._a1=-2*cos*ra0;
-				fil._a2=(1-alpha/g)*ra0;
-				fil._b0=(1+alpha*g)*ra0;
-				fil._b1=-2*cos*ra0;
-				fil._b2=(1-alpha*g)*ra0;
-				break;
-			case "notch":
-			case 6:
-				alpha=Math.sin(w0)/(2*q);
-				ra0=1/(1+alpha);
-				fil._a1=-2*cos*ra0;
-				fil._a2=(1-alpha)*ra0;
-				fil._b0=fil._b2=ra0;
-				fil._b1=-2*cos*ra0;
-				break;
-			case "allpass":
-			case 7:
-				alpha=Math.sin(w0)/(2*q);
-				ra0=1/(1+alpha);
-				fil._a1=-2*cos*ra0;
-				fil._a2=(1-alpha)*ra0;
-				fil._b0=(1-alpha)*ra0;
-				fil._b1=-2*cos*ra0;
-				fil._b2=(1+alpha)*ra0;
-				break;
-			}
-		};
-		this._Process=function() {
-			var xl,xr,yl,yr;
-			this.frequency._Process();
-			this.detune._Process();
-			this.Q._Process();
-			this.gain._Process();
-			this._Setup(this);
-			var inbuf=this._nodein[0].inbuf.buf;
-			var outbuf=this._nodeout[0].outbuf.buf;
-			for(var i=0;i<waapisimBufSize;++i) {
-				xl=inbuf[0][i];
-				xr=inbuf[1][i];
-				yl=this._b0*xl+this._b1*this._x1l+this._b2*this._x2l-this._a1*this._y1l-this._a2*this._y2l;
-				yr=this._b0*xr+this._b1*this._x1r+this._b2*this._x2r-this._a1*this._y1r-this._a2*this._y2r;
-				this._x2l=this._x1l; this._x2r=this._x1r;
-				this._x1l=xl; this._x1r=xr;
-				this._y2l=this._y1l; this._y2r=this._y1r;
-				this._y1l=yl; this._y1r=yr;
-				outbuf[0][i]=yl;
-				outbuf[1][i]=yr;
-			}
-			this._nodeout[0].NodeEmitBuf();
-			this._nodein[0].NodeClear();
-			this.frequency.Clear(false);
-			this.detune.Clear(false);
-			this.Q.Clear(false);
-			this.gain.Clear(false);
-		};
-		this.getFrequencyResponse=function(f,m,p) {
-			for(var l=f.length,i=0;i<l;++i) {
-				var w=2*Math.PI*f[i]/this.context.sampleRate;
-				var cw=Math.cos(w);
-				var cw2=Math.cos(w*2);
-				var sw=Math.sin(w);
-				var sw2=Math.sin(w*2);
-				var ca=1+this._a1*cw+this._a2*cw2;
-				var sa=this._a1*sw+this._a2*sw2;
-				var cb=this._b0+this._b1*cw+this._b2*cw2;
-				var sb=this._b1*sw+this._b2*sw2;
-				m[i]=Math.sqrt((cb*cb+sb*sb)/(ca*ca+sa*sa));
-				p[i]=Math.atan2(sa,ca)-Math.atan2(sb,cb);
-			}
-		}
-	};
-	waapisimBiquadFilter.LOWPASS=waapisimBiquadFilter.prototype.LOWPASS=0;
-	waapisimBiquadFilter.HIGHPASS=waapisimBiquadFilter.prototype.HIGHPASS=1;
-	waapisimBiquadFilter.BANDPASS=waapisimBiquadFilter.prototype.BANDPASS=2;
-	waapisimBiquadFilter.LOWSHELF=waapisimBiquadFilter.prototype.LOWSHELF=3;
-	waapisimBiquadFilter.HIGHSHELF=waapisimBiquadFilter.prototype.HIGHSHELF=4;
-	waapisimBiquadFilter.PEAKING=waapisimBiquadFilter.prototype.PEAKING=5;
-	waapisimBiquadFilter.NOTCH=waapisimBiquadFilter.prototype.NOTCH=6;
-	waapisimBiquadFilter.ALLPASS=waapisimBiquadFilter.prototype.ALLPASS=7;
-
-	waapisimGain=function(ctx) {
-		waapisimAudioNode.call(this,waapisimBufSize,1,1);
-		this._nodetype="Gain";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		this.context=ctx;
-		this.playbackState=0;
-		this.gain=new waapisimAudioParam(ctx,this,0,1,1);
-		this._nodein[0].NodeClear();
-		this._curgain=1;
-		this._Process=function() {
-			var i;
-			this.gain._Process();
-			var inbuf=this._nodein[0].inbuf.buf;
-			switch(this._nodeout[0].to.length) {
-			case 0:
-				this._curgain=this.gain.Get(0);
-				break;
-			case 1:
-				var b=this._nodeout[0].to[0].inbuf.buf;
-				for(i=0;i<waapisimBufSize;++i) {
-					var g=this.gain.Get(i);
-					this._curgain+=(g-this._curgain)*0.01;
-					b[0][i]+=inbuf[0][i]*this._curgain;
-					b[1][i]+=inbuf[1][i]*this._curgain;
-				}
-				break;
-			default:
-				for(i=0;i<waapisimBufSize;++i) {
-					var g=this.gain.Get(i);
-					this._curgain+=(g-this._curgain)*0.01;
-					this._nodeout[0].NodeEmit(i,inbuf[0][i]*this._curgain,inbuf[1][i]*this._curgain);
-				}
-				break;
-			}
-			this._nodein[0].NodeClear();
-			this.gain.Clear(true);
-		};
-	};
-
-	waapisimDelay=function(ctx) {
-		waapisimAudioNode.call(this,waapisimBufSize,1,1);
-		this._nodetype="Delay";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		this.context=ctx;
-		this.playbackState=0;
-		this.delayTime=new waapisimAudioParam(ctx,this,0,1,0);
-		this._bufl=new Float32Array(waapisimSampleRate);
-		this._bufr=new Float32Array(waapisimSampleRate);
-		for(var i=0;i<waapisimSampleRate;++i)
-			this._bufl[i]=this._bufr[i]=0;
-		this._index=0;
-		this._offscur=0;
-		this._Process=function() {
-			this.delayTime._Process();
-			var inbuf=this._nodein[0].inbuf.buf;
-			var outbuf=this._nodeout[0].outbuf.buf;
-			var offs=Math.floor(this.delayTime.Get(0)*this.context.sampleRate);
-			if(offs<0)
-				offs=0;
-			if(offs>=this.context.sampleRate)
-				offs=this.context.sampleRate-1;
-			var deltaoff=(offs-this._offscur)/waapisimBufSize;
-			for(var i=0;i<waapisimBufSize;++i) {
-				var idxr=this._index-(this._offscur|0);
-				if(idxr<0)
-					idxr+=waapisimSampleRate;
-				this._bufl[this._index]=inbuf[0][i];
-				this._bufr[this._index]=inbuf[1][i];
-				outbuf[0][i]=this._bufl[idxr];
-				outbuf[1][i]=this._bufr[idxr];
-				if(++this._index>=waapisimSampleRate)
-					this._index=0;
-				this._offscur+=deltaoff;
-			}
-			this._nodeout[0].NodeEmitBuf();
-			this._nodein[0].NodeClear();
-			this.delayTime.Clear(false);
-		};
-	};
-	waapisimOscillator=webkitOscillatorNode=OscillatorNode=function(ctx) {
-		waapisimAudioNode.call(this,waapisimBufSize,0,1);
-		this._nodetype="Osc";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		this._targettype=3;
-		this._order=0;
-		this.context=ctx;
-		this.type=0;
-		this._wavtable=null;
-		this.frequency=new waapisimAudioParam(ctx,this,1,20000,440,0.9995);
-		this.detune=new waapisimAudioParam(ctx,this,-4800,4800,0,0.9995);
-		this.playbackState=0;
-		this._phase=0.5;
-		this._whenstart=0;
-		this._whenstop=Number.MAX_VALUE;
-		this._init=0;
-		this.start=this.noteOn=function(w) {
-			this._whenstart=w;
-			this.playbackState=1;
-			this.context._RegisterNode(this);
-		};
-		this.stop=this.noteOff=function(w) {
-			this._whenstop=w;
-		};
-		this.setPeriodicWave=this.setWaveTable=function(tab) {
-			this.type=4;
-			this._wavtable=tab;
-		};
-		this._Process=function() {
-			var i;
-			if(this._init==0) {
-				this.frequency.Init();
-				this.detune.Init();
-				this._init=1;
-			}
-			this.frequency._Process();
-			this.detune._Process();
-			if(this.playbackState==1 && this.context.currentTime>=this._whenstart)
-				this.playbackState=2;
-			if(this.playbackState==2 && this.context.currentTime>=this._whenstop)
-				this.playbackState=3;
-			if(this.playbackState!=2) {
-				for(i=0;i<waapisimBufSize;++i)
-					this._nodeout[0].outbuf.buf[0][i]=this._nodeout[0].outbuf.buf[1][i]=0;
-				return;
-			}
-			var t,x1,x2,y,z;
-			var obuf=this._nodeout[0].outbuf.buf;
-			var ph=this._phase;
-			var r=1/this.context.sampleRate;
-			var freq=this.frequency;
-			var detu=this.detune;
-			switch(this.type) {
-			case "sine":
-			case 0:
-				x1=0.5; x2=1.5; y=2*Math.PI; z=1/6.78;
-				break;
-			case "square":
-			case 1:
-				x1=0.5; x2=1.5; y=100000; z=0;
-				break;
-			case "sawtooth":
-			case 2:
-				x1=0; x2=2; y=2; z=0;
-				break;
-			case "triangle":
-			case 3:
-				x1=0.5; x2=1.5; y=4; z=0;
-				break;
-			case "custom":
-			case 4:
-				for(i=0;i<waapisimBufSize;++i) {
-					var f=freq.Get(i)*Math.pow(2,detu.Get(i)/1200);
-					ph+=f*r;
-					ph=ph-Math.floor(ph);
-					var out=0;
-					if(this._wavtable)
-						out=this._wavtable.buf[(4096*ph)|0];
-					obuf[0][i]=obuf[1][i]=out;
-				}
-				this._phase=ph;
-				this._nodeout[0].NodeEmitBuf();
-				this.frequency.Clear(true);
-				this.detune.Clear(true);
-				return;
-			}
-			for(i=0;i<waapisimBufSize;++i) {
-				var f=freq.Get(i)*Math.pow(2,detu.Get(i)/1200);
-				ph+=f*r;
-				ph=ph-Math.floor(ph);
-				t = ( Math.min( Math.max(ph ,x1 - ph), x2 - ph) - 0.5) * y;
-				var out=t-t*t*t*z;
-				if(out>1) out=1;
-				if(out<-1) out=-1;
-				obuf[0][i]=obuf[1][i]=out;
-			}
-			this._phase=ph;
-			this._nodeout[0].NodeEmitBuf();
-			this.frequency.Clear(true);
-			this.detune.Clear(true);
-		};
-	};
-	waapisimOscillator.SINE=waapisimOscillator.prototype.SINE=0;
-	waapisimOscillator.SQUARE=waapisimOscillator.prototype.SQUARE=1;
-	waapisimOscillator.SAWTOOTH=waapisimOscillator.prototype.SAWTOOTH=2;
-	waapisimOscillator.TRIANGLE=waapisimOscillator.prototype.TRIANGLE=3;
-	waapisimOscillator.CUSTOM=waapisimOscillator.prototype.CUSTOM=4;
-	waapisimOscillator.UNSCHEDULED_STATE=waapisimOscillator.prototype.UNSCHEDULED_STATE=0;
-	waapisimOscillator.SCHEDULED_STATE=waapisimOscillator.prototype.SCHEDULED_STATE=1;
-	waapisimOscillator.PLAYING_STATE=waapisimOscillator.prototype.PLAYING_STATE=2;
-	waapisimOscillator.FINISHED_STATE=waapisimOscillator.prototype.FINISHED_STATE=3;
-	
-	waapisimAnalyser=function(ctx) {
-		waapisimAudioNode.call(this,waapisimBufSize,1,1);
-		this._nodetype="Analyser";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		this.context=ctx;
-		this.playbackState=0;
-		this.fftSize=2048;
-		this.frequencyBinCount=1024;
-		this.minDecibels=-100;
-		this.maxDecibels=-30;
-		this.smoothingTimeConstant=0;
-		this._fftInData=new Array(2048);
-		this._fftOutData=new Array(2048);
-		this._timeData=new Array(2048);
-		this._fftIndex=0;
-		this._fftCurrentSize=0;
-		this._fftrev=new Array(256);
-		this._fft=function(n,data,mag) {
-			var nh=n>>1;
-			var t=-2*Math.PI;
-			var m,mh,mq,i,j,jr,ji,kr,ki,xr,xi;
-			for(mh=1;(m=mh<<1)<=n;mh=m) {
-				mq=mh>>1;
-				t*=0.5;
-				for(jr=0;jr<n;jr+=m) {
-					kr=jr+mh;
-					xr=data[kr];
-					data[kr]=data[jr]-xr;
-					data[jr]+=xr;
-				}
-				for(i=1;i<mq;++i) {
-					var wr=Math.cos(t*i);
-					var wi=Math.sin(t*i);
-					for(j=0;j<n;j+=m) {
-						jr=j+i;
-						ji=j+mh-i;
-						kr=j+mh+i;
-						ki=j+m-i;
-						xr=wr*data[kr]+wi*data[ki];
-						xi=wr*data[ki]-wi*data[kr];
-						data[kr]=-data[ji]+xi;
-						data[ki]=data[ji]+xi;
-						data[ji]=data[jr]-xr;
-						data[jr]=data[jr]+xr;
-					}
-				}
-			}
-			data[0]=Math.min(1e-100,Math.abs(data[0]/n));
-			var stc=Math.min(1,Math.max(0,this.smoothingTimeConstant));
-			mag[0]=mag[0]*stc+(1-stc)*data[0];
-			for(i=0;i<nh;++i) {
-				var v=Math.sqrt(data[i]*data[i]+data[n-i]*data[n-i])/n;
-				if(v<1e-100)
-					v=1e-100;
-				mag[i]=mag[i]*stc+(1-stc)*v;
-			}
-		};
-		this.getByteFrequencyData=function(array) {
-			var range=this.maxDecibels-this.minDecibels;
-			for(var l=Math.min(array.length,this.frequencyBinCount),i=0;i<l;++i) {
-				var v=20*Math.LOG10E*Math.log(this._fftOutData[i]);
-				array[i]=((Math.min(this.maxDecibels,Math.max(this.minDecibels,v))-this.minDecibels)*255/range)|0;
-			}
-		};
-		this.getFloatFrequencyData=function(array) {
-			for(var l=Math.min(array.length,this.frequencyBinCount),i=0;i<l;++i)
-				array[i]=20*Math.LOG10E*Math.log(this._fftOutData[i]);
-		};
-		this.getByteTimeDomainData=function(array) {
-			for(var l=Math.min(this.frequencyBinCount,array.length),i=0;i<l;++i) {
-				var v=Math.min(1,Math.max(-1,this._timeData[i]));
-				array[i]=v*127+128;
-			}
-		};
-		this._Process=function() {
-			var i,j,k;
-			var inbuf=this._nodein[0].inbuf.buf;
-			if(this.fftSize!=this._fftCurrentSize) {
-				var n=this.fftSize;
-				for(i=0;i<n;++i)
-					this._fftInData[i]=this._fftOutData[i]=0;
-				this._fftCurrentSize=n;
-				this.frequencyBinCount=n*0.5;
-				this._fftIndex=0;
-				this._fftrev[0]=0;
-				this._fftrev[n-1]=n-1;
-				for(i=0,j=1;j<n-1;++j) {
-					for(k=n>>1;k>(i^=k);k>>=1)
-						;
-					this._fftrev[j]=i;
-				}
-			}
-			for(i=0;i<waapisimBufSize;++i) {
-				var xl=inbuf[0][i];
-				var xr=inbuf[1][i];
-				this._nodeout[0].NodeEmit(i,xl,xr);
-				var v=this._timeData[this._fftIndex]=(xl+xr)*0.5;
-				var t=2*Math.PI*this._fftIndex/this._fftCurrentSize;
-//				this._fftInData[this._fftrev[this._fftIndex]]=v*(0.42-0.5*Math.cos(t)+0.08*Math.cos(t*2));
-				this._fftInData[this._fftrev[this._fftIndex]]=v*(0.5-0.5*Math.cos(t));
-				if(++this._fftIndex>=this._fftCurrentSize) {
-					this._fftIndex=0;
-					this._fft(this._fftCurrentSize,this._fftInData,this._fftOutData);
-				}
-			}
-			this._nodein[0].NodeClear();
-		};
-	};
-	waapisimConvolver=function(ctx) {
-		waapisimAudioNode.call(this,waapisimBufSize,1,1);
-		this._nodetype="Convolver";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		this.context=ctx;
-		this.playbackState=0;
-		this.buffer=null;
-		this.normalize=true;
-		this._scale=1;
-		this._analyzed=null;
-		this._dlybufsize=waapisimSampleRate*5;
-		this._dlybuf=new waapisimAudioBuffer(2,this._dlybufsize,44100);
-		this._dlyidx=0;
-		this._tapsize=20;
-		this._tap=[];
-		this._kernel=null;
-		this._sum=[];
-		this._sum[0]=[];
-		this._sum[1]=[];
-		this._bitrev=[];
-		this._bitrev[0]=0;
-		this._bitrev[waapisimBufSize-1]=waapisimBufSize-1;
-		var i,j,k;
-		for(i=0,j=1;j<waapisimBufSize-1;++j) {
-			for(k=waapisimBufSize>>1;k>(i^=k);k>>=1)
-				;
-			this._bitrev[j]=i;
-		}
-		for(i=0;i<2;++i)
-			for(j=0;j<2;++j)
-				this._sum[i][j]=new Float32Array(waapisimSampleRate);
-		this._Normalize=function(buffer) {
-			var GainCalibration=0.00125;
-			var GainCalibrationSampleRate=44100;
-			var MinPower=0.000125;
-			var numberOfChannels=2;
-			var length=buffer.length;
-			var power=0;
-			for(var i=0;i<numberOfChannels;++i) {
-				var sourceP=0;
-				var channelPower=0;
-				var n=length;
-				while(n--) {
-					var sample=buffer.buf[i][sourceP++];
-					channelPower+=sample*sample;
-				}
-				power+=channelPower;
-			}
-			power=Math.sqrt(power/(numberOfChannels*length));
-			if(isFinite(power)===false||isNaN(power)||power<MinPower)
-				power=MinPower;
-			var scale=1/power;
-			scale*=GainCalibration;
-			return scale;
-		};
-		this._Fft=function(n,a) {
-			var m,mh,mq,i,j,k,jr,ji,kr,ki;
-			var theta, wr, wi, xr, xi;
-			i=0;
-			for(j=1;j<n-1;j++) {
-				for(k=n>>1;k>(i^=k);k>>=1)
-					;
-				if(j<i) {
-					xr=a[j];
-					a[j]=a[i];
-					a[i]=xr;
-				}
-			}
-			theta=-2*Math.PI;
-			for(mh=1;(m=mh<<1)<=n;mh=m) {
-				mq=mh>>1;
-				theta*=0.5;
-				for(jr=0;jr<n;jr+=m) {
-					kr=jr+mh;
-					xr=a[kr];
-					a[kr]=a[jr]-xr;
-					a[jr]+=xr;
-				}
-				for(i=1;i<mq;i++) {
-					wr=Math.cos(theta*i);
-					wi=Math.sin(theta*i);
-					for(j=0;j<n;j+=m) {
-						jr=j+i;
-						ji=j+mh-i;
-						kr=j+mh+i;
-						ki=j+m-i;
-						xr=wr*a[kr]+wi*a[ki];
-						xi=wr*a[ki]-wi*a[kr];
-						a[kr]=-a[ji]+xi;
-						a[ki]=a[ji]+xi;
-						a[ji]=a[jr]-xr;
-						a[jr]=a[jr]+xr;
-					}
-				}
-			}
-		};
-		this._Fft2=function(n,ar,ai) {
-			var m, mh, i, j, k;
-			var wr, wi, xr, xi;
-			var theta=2*Math.PI;
-			i=0;
-			for(j=1;j<n-1;j++) {
-				for(k=n>>1;k>(i^=k);k>>=1)
-					;
-				if(j<i) {
-					xr=ar[j];
-					xi=ai[j];
-					ar[j]=ar[i];
-					ai[j]=ai[i];
-					ar[i]=xr;
-					ai[i]=xi;
-				}
-			}
-			for(mh=1;(m=mh<<1)<=n;mh=m) {
-				theta *= 0.5;
-				for(i=0;i<mh;i++) {
-					wr=Math.cos(theta*i);
-					wi=Math.sin(theta*i);
-					for(j=i;j<n;j+=m) {
-						k=j+mh;
-						xr=wr*ar[k]-wi*ai[k];
-						xi=wr*ai[k]+wi*ar[k];
-						ar[k]=ar[j]-xr;
-						ai[k]=ai[j]-xi;
-						ar[j]+=xr;
-						ai[j]+=xi;
-					}
-				}
-			}
-			for(i=0;i<n;++i)
-				ar[i]=ar[i]/n;
-		};
-		this._Process=function() {
-			var inbuf=this._nodein[0].inbuf.buf;
-			var nh=(waapisimBufSize*0.5)|0;
-			var i,j,k,l,px,v0,v1;
-			
-			if(this.buffer!==null) {
-				if(this.buffer!=this._analyzed) {
-					var kbuf=[];
-					for(i=0;i<4;++i)
-						kbuf[i]=new waapisimAudioBuffer(2,waapisimBufSize,44100);
-					this._scale=1;
-					if(this.normalize)
-						this._scale=this._Normalize(this.buffer);
-					var len=this.buffer.length;
-					for(i=len-1;i;--i) {
-						if(Math.abs(this.buffer.buf[0][i])>1e-3)
-							break;
-						if(Math.abs(this.buffer.buf[1][i])>1e-3)
-							break;
-					}
-					len=i+1;
-					for(i=0,px=0;i<this._tapsize;++i) {
-						var x=(i*len/this._tapsize)|0;
-						var sz=x-px;
-						v0=0;
-						v1=0;
-						if(sz>0) {
-							while(px<x) {
-								v0+=this.buffer.buf[0][px]*this.buffer.buf[0][px];
-								v1+=this.buffer.buf[1][px]*this.buffer.buf[1][px];
-								++px;
-							}
-							v0=Math.sqrt(v0)*this._scale*0.5;
-							v1=Math.sqrt(v1)*this._scale*0.5;
-						}
-						this._tap[i]=[x,v0,v1];
-					}
-					this._kernel=new waapisimAudioBuffer(2,waapisimBufSize,44100);
-					var p=0,maxp=0;
-					for(l=Math.min(this.buffer.length,waapisimBufSize*4),i=0,j=0,k=0;i<l;++i) {
-						v0=this.buffer.buf[0][i];
-						v1=this.buffer.buf[1][i];
-						kbuf[k].buf[0][j]=v0;
-						kbuf[k].buf[1][j]=v1;
-						p+=(v0*v0+v1*v1);
-						if(++j>=waapisimBufSize) {
-							if(p>maxp) {
-								this._kernel=kbuf[k];
-								maxp=p;
-							}
-							j=0;
-							p=0;
-							++k;
-						}
-					}
-					if(p>maxp||this._kernel===null)
-						this._kernel=kbuf[k];
-					this._Fft(waapisimBufSize,this._kernel.buf[0]);
-					this._Fft(waapisimBufSize,this._kernel.buf[1]);
-					this._analyzed=this.buffer;
-				}
-				this._Fft(waapisimBufSize,inbuf[0]);
-				this._Fft(waapisimBufSize,inbuf[1]);
-				this._sum[0][0][0]=this._sum[1][0][0]=this._sum[0][1][0]=this._sum[1][1][0]=0;
-				for(i=1,j=waapisimBufSize-1;i<nh;++i,--j) {
-					var real0=inbuf[0][i]*this._kernel.buf[0][i]-inbuf[0][j]*this._kernel.buf[0][j];
-					var imag0=inbuf[0][i]*this._kernel.buf[0][j]+inbuf[0][j]*this._kernel.buf[0][i];
-					this._sum[0][0][i]=real0;
-					this._sum[0][0][j]=real0;
-					this._sum[0][1][i]=-imag0;
-					this._sum[0][1][j]=imag0;
-					var real1=inbuf[1][i]*this._kernel.buf[1][i]-inbuf[1][j]*this._kernel.buf[1][j];
-					var imag1=inbuf[1][i]*this._kernel.buf[1][j]+inbuf[1][j]*this._kernel.buf[1][i];
-					this._sum[1][0][i]=real1;
-					this._sum[1][0][j]=real1;
-					this._sum[1][1][i]=-imag1;
-					this._sum[1][1][j]=imag1;
-				}
-				this._Fft2(waapisimBufSize,this._sum[0][0],this._sum[0][1]);
-				this._Fft2(waapisimBufSize,this._sum[1][0],this._sum[1][1]);
-				for(i=0;i<waapisimBufSize;++i) {
-					var v=(nh-Math.abs(i-nh))/nh;
-					this._dlybuf.buf[0][this._dlyidx]=this._sum[0][0][i]*v;
-					this._dlybuf.buf[1][this._dlyidx]=this._sum[1][0][i]*v;
-					v0=0; v1=0;
-					for(l=this._tap.length,j=0;j<l;++j) {
-						var idx=this._dlyidx-this._tap[j][0];
-						while(idx<0)
-							idx+=this._dlybufsize;
-						v0+=this._dlybuf.buf[0][idx]*this._tap[j][1];
-						v1+=this._dlybuf.buf[1][idx]*this._tap[j][2];
-					}
-					this._nodeout[0].NodeEmit(i,v0,v1);
-					if(++this._dlyidx>=this._dlybufsize)
-						this._dlyidx=0;
-				}
-			}
-			this._nodein[0].NodeClear();
-		};
-	};
-	waapisimDynamicsCompressor=function(ctx) {
-		waapisimAudioNode.call(this,waapisimBufSize,1,1);
-		this._nodetype="DynComp";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		this.context=ctx;
-		this.playbackState=0;
-		this.threshold=new waapisimAudioParam(ctx,this,-100,0,-24);
-		this.knee=new waapisimAudioParam(ctx,this,0,40,30);
-		this.ratio=new waapisimAudioParam(ctx,this,1,20,12);
-		this.reduction=new waapisimAudioParam(ctx,this,-20,0,0);//ReadOnly
-		this.attack=new waapisimAudioParam(ctx,this,0,1,0.003);
-		this.release=new waapisimAudioParam(ctx,this,0,1,0.25);
-		this._maxl=0;
-		this._maxr=0;
-		this._gain=1;
-		this._Process=function() {
-			this.threshold._Process();
-			this.knee._Process();
-			this.ratio._Process();
-			this.attack._Process();
-			this.release._Process();
-			var inbuf=this._nodein[0].inbuf.buf;
-			var relratio=this.release.Get(0)*waapisimSampleRate;
-			relratio=Math.pow(1/3.16,1/relratio);
-			var atkratio=this.attack.Get(0)*waapisimSampleRate;
-			atkratio=Math.pow(1/3.16,1/atkratio);
-			var reduc=this.reduction.value;
-			var thresh=Math.pow(10,this.threshold.Get(0)/20);
-			var knee=Math.pow(10,this.knee.Get(0)/20*0.5);
-			var makeup=1/Math.sqrt(thresh)/Math.pow(10,this.knee.Get(0)/80);
-			var maxratio=0.99105;
-			var ratio=this.ratio.Get(0);
-			if(ratio<=1)
-				ratio=1;
-			for(var i=0;i<waapisimBufSize;++i) {
-				this._maxl=maxratio*this._maxl+(1-maxratio)*inbuf[0][i]*inbuf[0][i];
-				this._maxr=maxratio*this._maxr+(1-maxratio)*inbuf[1][i]*inbuf[1][i];
-				var maxc=Math.sqrt(Math.max(this._maxl,this._maxr))*1.414;
-				if(maxc>thresh) {
-					var v=Math.pow(thresh*Math.min(knee,maxc/thresh)/maxc,1-1/ratio);
-					this._gain=v+(this._gain-v)*atkratio;
-				}
-				else
-					this._gain=1+(this._gain-1)*relratio;
-				var g=this._gain*makeup;
-				this._nodeout[0].NodeEmit(i,inbuf[0][i]*g,inbuf[1][i]*g);
-			}
-			this.reduction.value=this.reduction.computedValue=reduc;
-			this._nodein[0].NodeClear();
-			this.threshold.Clear(false);
-			this.knee.Clear(false);
-			this.ratio.Clear(false);
-			this.reduction.Clear(false);
-			this.attack.Clear(false);
-			this.release.Clear(false);
-		};
-	};
-	waapisimPanner=webkitAudioPannerNode=AudioPannerNode=function(ctx) {
-		waapisimAudioNode.call(this,waapisimBufSize,1,1);
-		this._nodetype="Panner";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		this.context=ctx;
-		this.playbackState=0;
-		this.panningModel=0;
-		this.distanceModel=1;
-		this.refDistance=1;
-		this.maxDistance=10000;
-		this.rolloffFactor=1;
-		this.coneInnerAngle=360;
-		this.coneOuterAngle=360;
-		this.coneOuterGain=0;
-		this.px=0;
-		this.py=0;
-		this.pz=0;
-		this.setPosition=function(x,y,z) {this.px=x;this.py=y;this.pz=z;};
-		this.setOrientation=function(x,y,z) {};
-		this.setVelocity=function(x,y,z) {};
-		this._Process=function() {
-			var inbuf=this._nodein[0].inbuf.buf;
-			var listener=this.context.listener;
-			var dx=this.px-listener.px;
-			var dy=this.py-listener.py;
-			var dz=this.pz-listener.pz;
-			var d=Math.max(1,Math.sqrt(dx*dx+dy*dy+dz*dz));
-			var dgain;
-			switch(this.distanceModel) {
-			case "linear":
-			case 0:
-				dgain=1-this.rolloffFactor*(d-this.refDistance)/(this.maxDistance-this.refDistance);
-				break;
-			case "inverse":
-			case 1:
-				dgain=this.refDistance/(this.refDistance+this.rolloffFactor*(d-this.refDistance));
-				break;
-			case "exponential":
-			case 2:
-				dgain=Math.pow(d/this.refDistance,-this.rolloffFactor);
-				break;
-			}
-			var rgain,lgain,tr;
-			if(Math.abs(dz)<0.001) {
-				lgain=rgain=1;
-			}
-			else {
-				tr=Math.atan(dx/dz);
-				if(dz<=0) {
-					rgain=-tr+Math.PI*0.5;
-					lgain=tr+Math.PI*0.5;
-				}
-				else {
-					switch(this.panningModel) {
-					case 0:
-					case "equalpower":
-						rgain=tr+Math.PI*0.5;
-						lgain=-tr+Math.PI*0.5;
-						break;
-					default:
-						if(dx>=0) {
-							rgain=tr+Math.PI*0.5;
-							lgain=-(-tr+Math.PI*0.5);
-						}
-						else {
-							rgain=-(tr+Math.PI*0.5);
-							lgain=-tr+Math.PI*0.5;
-						}
-					}
-				}
-			}
-			var rl=Math.sqrt(rgain*rgain+lgain*lgain);
-			rgain=rgain/rl;
-			lgain=lgain/rl;
-			var a=Math.sqrt(rgain*rgain+lgain*lgain);
-			rgain=rgain/a*2*dgain; lgain=lgain/a*2*dgain;
-			for(var i=0;i<waapisimBufSize;++i)
-				this._nodeout[0].NodeEmit(i,inbuf[0][i]*lgain,inbuf[1][i]*rgain);
-			this._nodein[0].NodeClear();
-		};
-	};
-	waapisimPanner.EQUALPOWER=waapisimPanner.prototype.EQUALPOWER=0;
-	waapisimPanner.HRTF=waapisimPanner.prototype.HRTF=1;
-	waapisimPanner.SOUNDFIELD=waapisimPanner.prototype.SOUNDFIELD=2;
-	waapisimPanner.LINEAR_DISTANCE=waapisimPanner.prototype.LINEAR_DISTANCE=0;
-	waapisimPanner.INVERSE_DISTANCE=waapisimPanner.prototype.INVERSE_DISTANCE=1;
-	waapisimPanner.EXPONENTIAL_DISTANCE=waapisimPanner.prototype.EXPONENTIAL_DISTANCE=2;
-	
-	waapisimChannelSplitter=function(ctx,ch) {
-		this._nodetype="ChSplit";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		if(typeof(ch)==="undefined")
-			ch=6;
-		waapisimAudioNode.call(this,waapisimBufSize,1,ch);
-		this.context=ctx;
-		this.playbackState=0;
-		this._Process=function() {
-			var inbuf=this._nodein[0].inbuf.buf;
-			for(var i=0;i<waapisimBufSize;++i) {
-				this._nodeout[0].NodeEmit(i,inbuf[0][i],inbuf[0][i]);
-				this._nodeout[1].NodeEmit(i,inbuf[1][i],inbuf[1][i]);
-			}
-			this._nodein[0].NodeClear();
-		};
-	};
-	waapisimChannelMerger=function(ctx,ch) {
-		this._nodetype="ChMerge";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		if(typeof(ch)==="undefined")
-			ch=6;
-		waapisimAudioNode.call(this,waapisimBufSize,ch,1);
-		this.context=ctx;
-		this.playbackState=0;
-		this._Process=function() {
-			var inbuf0=this._nodein[0].inbuf.buf;
-			var inbuf1=this._nodein[1].inbuf.buf;
-			for(var i=0;i<waapisimBufSize;++i)
-				this._nodeout[0].NodeEmit(i,(inbuf0[0][i]+inbuf0[1][i])*0.5,(inbuf1[0][i]+inbuf1[1][i])*0.5);
-			this._nodein[0].NodeClear();
-			this._nodein[1].NodeClear();
-		};
-	};
-	waapisimWaveShaper=function(ctx) {
-		waapisimAudioNode.call(this,waapisimBufSize,1,1);
-		this._nodetype="Shaper";
-		waapisimDebug("create "+this._nodetype+this._nodeId);
-		this.context=ctx;
-		this.playbackState=0;
-		this.curve=null;
-		var i;
-		this._Process=function() {
-			var inbuf=this._nodein[0].inbuf.buf;
-			var curve=this.curve;
-			if(curve!==null) {
-				var len=curve.length-1;
-				if(len>=0) {
-					for(i=0;i<waapisimBufSize;++i) {
-						var xl=Math.max(-1,Math.min(1,inbuf[0][i]));
-						var xr=Math.max(-1,Math.min(1,inbuf[1][i]));
-						xl=curve[((xl+1)*0.5*len+0.5)|0];
-						xr=curve[((xr+1)*0.5*len+0.5)|0];
-						this._nodeout[0].NodeEmit(i,xl,xr);
-					}
-					this._nodein[0].NodeClear();
-					return;
-				}
-			}
-			for(i=0;i<waapisimBufSize;++i)
-				this._nodeout[0].NodeEmit(i,inbuf[0][i],inbuf[1][i]);
-			this._nodein[0].NodeClear();
-		};
-	};
-	waapisimAudioParam=function(ctx,node,min,max,def,tcon) {
-		this.context=ctx;
-		this._targettype=0;
-		this.node=node;
-		this.value=def;
-		this.computedValue=def;
-		this.minValue=min;
-		this.maxValue=max;
-		this.defaultValue=def;
-		if(typeof(tcon)==="undefined")
-			this.timeconst=0;
-		else
-			this.timeconst=tcon;
-		this.from=[];
-		this.inbuf={};
-		this.inbuf.buf=[];
-		this.inbuf.buf[0]=new Float32Array(waapisimBufSize);
-		this.inbuf.buf[1]=new Float32Array(waapisimBufSize);
-		this.automation=[];
-		this.deltaAdd=0;
-		this.deltaMul=1;
-		this.deltaTarget=0;
-		this.currentEvent=null;
-		for(var i=0;i<waapisimBufSize;++i)
-			this.inbuf.buf[0][i]=this.inbuf.buf[1][i]=0;
-		this.AddEvent=function(ev) {
-			var t=ev[0];
-			for(var l=this.automation.length,i=0;i<l;++i) {
-				if(this.automation[i][0]>t)
-					break;
-			}
-			this.automation.splice(i,0,ev);
-		};
-		this.setValueAtTime=function(v,t) {
-			this.AddEvent([t,0,v]);
-		};
-		this.linearRampToValueAtTime=function(v,t) {
-			this.AddEvent([t,1,v]);
-		};
-		this.exponentialRampToValueAtTime=function(v,t) {
-			this.AddEvent([t,2,v]);
-		};
-		this.setTargetAtTime=this.setTargetValueAtTime=function(v,t,c) {
-			this.AddEvent([t,3,v,c]);
-		};
-		this.setValueCurveAtTime=function(values,t,d) {
-			this.AddEvent([t,4,values,d]);
-		};
-		this.cancelScheduledValues=function(t) {
-			for(var l=this.automation.length,i=0;i<l;++i) {
-				if(this.automation[i][0]>=t) {
-					this.automation.length=i;
-					return;
-				}
-			}
-		};
-		this._Process=function() {
-			this.value+=this.deltaAdd;
-			this.value=(this.value-this.deltaTarget)*this.deltaMul+this.deltaTarget;
-			if(this.currentEvent!==null) {
-				if(this.currentEvent[1]==4) {
-					var i=(this.currentEvent[2].length-1)*(this.context.currentTime-this.currentEvent[0])/this.currentEvent[3];
-					this.value=this.currentEvent[2][Math.min(this.currentEvent[2].length-1,i)|0];
-				}
-			}
-			if(this.automation.length>0) {
-				if(this.context.currentTime>=this.automation[0][0]) {
-					this.deltaAdd=0;
-					this.deltaMul=1;
-					this.deltaTarget=0;
-					this.currentEvent=this.automation.shift();
-					switch(this.currentEvent[1]) {
-					case 0:
-					case 1:
-					case 2:
-						this.value=this.currentEvent[2];
-						break;
-					case 3:
-						this.deltaMul=Math.pow(0.367879,1/(waapisimSampleRate/waapisimBufSize*this.currentEvent[3]));
-						this.deltaTarget=this.currentEvent[2];
-						break;
-					}
-					if(this.automation.length>0) {
-						var n=waapisimSampleRate/waapisimBufSize*(this.automation[0][0]-this.context.currentTime);
-						switch(this.automation[0][1]) {
-						case 1:
-							this.deltaAdd=(this.automation[0][2]-this.value)/n;
-							break;
-						case 2:
-							this.deltaMul=Math.pow(this.automation[0][2]/this.value,1/n);
-							break;
-						}
-					}
-				}
-			}
-		};
-		this.Init=function() {
-			this.computedValue=parseFloat(this.value);
-		}
-		this.Get=function(n) {
-			if(this.from.length>0)
-				this.computedValue=parseFloat(this.value)+(this.inbuf.buf[0][n]+this.inbuf.buf[1][n])*0.5;
-			else
-				this.computedValue=this.computedValue*this.timeconst+(1-this.timeconst)*parseFloat(this.value);
-			return this.computedValue;
-		};
-		this.Clear=function(arate) {
-			if(arate) {
-				for(var i=0;i<waapisimBufSize;++i)
-					this.inbuf.buf[0][i]=this.inbuf.buf[1][i]=0;
-			}
-			else
-				this.inbuf.buf[0][0]=this.inbuf.buf[1][0]=0;
-		};
-	};
-}
diff --git a/inc/polyfill/WAAPISim/waapisim.mxml b/inc/polyfill/WAAPISim/waapisim.mxml
deleted file mode 100644
index 826b09f..0000000
--- a/inc/polyfill/WAAPISim/waapisim.mxml
+++ /dev/null
@@ -1,33 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="Start()" paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
-   <mx:Script>
-   <![CDATA[
-
-import flash.external.ExternalInterface;
-import mx.controls.*;
-
-public var WAAPISimSndch:SoundChannel;
-public function Start():void {
-	setTimeout(InitializeWAAPISim,400);
-	setInterval(Interval,20);
-}
-public function InitializeWAAPISim():void {
-	var snd:Sound = new Sound(); 
-	snd.addEventListener(SampleDataEvent.SAMPLE_DATA, GetSamples); 
-	WAAPISimSndch=snd.play();
-}
-private function Interval():void {
-	ExternalInterface.call("waapisimFlashOffset",WAAPISimSndch.position);
-}
-public function GetSamples(event:SampleDataEvent):void {
-	var dat:String = ExternalInterface.call("waapisimFlashGetData");
-	var l:uint=dat.length;
-	for(var i:int=0;i<l;++i) {
-		event.data.writeFloat((dat.charCodeAt(i)-32768)/16384);
-	}
-}
-
-   ]]>
-   </mx:Script>
-   <mx:Label id="lbl1" x="0" y="0" paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" text="WAAPISim.swf is loaded."/>
-</mx:Application>
diff --git a/inc/polyfill/WAAPISim/waapisim.swf b/inc/polyfill/WAAPISim/waapisim.swf
deleted file mode 100644
index 868facb..0000000
Binary files a/inc/polyfill/WAAPISim/waapisim.swf and /dev/null differ
diff --git a/inc/polyfill/WAAPISim/waapisimvideo.png b/inc/polyfill/WAAPISim/waapisimvideo.png
deleted file mode 100644
index 0d64190..0000000
Binary files a/inc/polyfill/WAAPISim/waapisimvideo.png and /dev/null differ
diff --git a/inc/polyfill/base64binary.js b/inc/polyfill/base64binary.js
deleted file mode 100644
index 6e1e558..0000000
--- a/inc/polyfill/base64binary.js
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
-Copyright (c) 2011, Daniel Guerrero
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are met:
-    * Redistributions of source code must retain the above copyright
-      notice, this list of conditions and the following disclaimer.
-    * Redistributions in binary form must reproduce the above copyright
-      notice, this list of conditions and the following disclaimer in the
-      documentation and/or other materials provided with the distribution.
-    * Neither the name of the Daniel Guerrero nor the
-      names of its contributors may be used to endorse or promote products
-      derived from this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-DISCLAIMED. IN NO EVENT SHALL DANIEL GUERRERO BE LIABLE FOR ANY
-DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
-(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
-ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-*/
- 
-var Base64Binary = {
-	_keyStr : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
-
-	/* will return a  Uint8Array type */
-	decodeArrayBuffer: function(input) {
-		var bytes = Math.ceil( (3*input.length) / 4.0);
-		var ab = new ArrayBuffer(bytes);
-		this.decode(input, ab);
-
-		return ab;
-	},
-
-	decode: function(input, arrayBuffer) {
-		//get last chars to see if are valid
-		var lkey1 = this._keyStr.indexOf(input.charAt(input.length-1));		 
-		var lkey2 = this._keyStr.indexOf(input.charAt(input.length-1));		 
-
-		var bytes = Math.ceil( (3*input.length) / 4.0);
-		if (lkey1 == 64) bytes--; //padding chars, so skip
-		if (lkey2 == 64) bytes--; //padding chars, so skip
-
-		var uarray;
-		var chr1, chr2, chr3;
-		var enc1, enc2, enc3, enc4;
-		var i = 0;
-		var j = 0;
-
-		if (arrayBuffer)
-			uarray = new Uint8Array(arrayBuffer);
-		else
-			uarray = new Uint8Array(bytes);
-
-		input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
-
-		for (i=0; i<bytes; i+=3) {	
-			//get the 3 octects in 4 ascii chars
-			enc1 = this._keyStr.indexOf(input.charAt(j++));
-			enc2 = this._keyStr.indexOf(input.charAt(j++));
-			enc3 = this._keyStr.indexOf(input.charAt(j++));
-			enc4 = this._keyStr.indexOf(input.charAt(j++));
-
-			chr1 = (enc1 << 2) | (enc2 >> 4);
-			chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
-			chr3 = ((enc3 & 3) << 6) | enc4;
-
-			uarray[i] = chr1;			
-			if (enc3 != 64) uarray[i+1] = chr2;
-			if (enc4 != 64) uarray[i+2] = chr3;
-		}
-
-		return uarray;	
-	}
-};
\ No newline at end of file
diff --git a/inc/shim/Base64.js b/inc/shim/Base64.js
new file mode 100644
index 0000000..b5a59ce
--- /dev/null
+++ b/inc/shim/Base64.js
@@ -0,0 +1,61 @@
+//https://github.com/davidchambers/Base64.js
+
+;(function () {
+  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers
+  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
+
+  function InvalidCharacterError(message) {
+    this.message = message;
+  }
+  InvalidCharacterError.prototype = new Error;
+  InvalidCharacterError.prototype.name = 'InvalidCharacterError';
+
+  // encoder
+  // [https://gist.github.com/999166] by [https://github.com/nignag]
+  object.btoa || (
+  object.btoa = function (input) {
+    for (
+      // initialize result and counter
+      var block, charCode, idx = 0, map = chars, output = '';
+      // if the next input index does not exist:
+      //   change the mapping table to "="
+      //   check if d has no fractional digits
+      input.charAt(idx | 0) || (map = '=', idx % 1);
+      // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
+      output += map.charAt(63 & block >> 8 - idx % 1 * 8)
+    ) {
+      charCode = input.charCodeAt(idx += 3/4);
+      if (charCode > 0xFF) {
+        throw new InvalidCharacterError("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
+      }
+      block = block << 8 | charCode;
+    }
+    return output;
+  });
+
+  // decoder
+  // [https://gist.github.com/1020396] by [https://github.com/atk]
+  object.atob || (
+  object.atob = function (input) {
+    input = input.replace(/=+$/, '')
+    if (input.length % 4 == 1) {
+      throw new InvalidCharacterError("'atob' failed: The string to be decoded is not correctly encoded.");
+    }
+    for (
+      // initialize result and counters
+      var bc = 0, bs, buffer, idx = 0, output = '';
+      // get next character
+      buffer = input.charAt(idx++);
+      // character found in table? initialize bit storage and add its ascii value;
+      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,
+        // and if not first of each 4 characters,
+        // convert the first 8 bits to one ascii character
+        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0
+    ) {
+      // try to find character in table (0-63, not found => -1)
+      buffer = chars.indexOf(buffer);
+    }
+    return output;
+  });
+
+}());
\ No newline at end of file
diff --git a/inc/shim/Base64binary.js b/inc/shim/Base64binary.js
new file mode 100644
index 0000000..2c59f8f
--- /dev/null
+++ b/inc/shim/Base64binary.js
@@ -0,0 +1,81 @@
+/**
+ * @license -------------------------------------------------------------------
+ *   module: Base64Binary
+ *      src: http://blog.danguer.com/2011/10/24/base64-binary-decoding-in-javascript/
+ *  license: Simplified BSD License
+ * -------------------------------------------------------------------
+ * Copyright 2011, Daniel Guerrero. All rights reserved.
+ * 
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *     - Redistributions of source code must retain the above copyright
+ *       notice, this list of conditions and the following disclaimer.
+ *     - Redistributions in binary form must reproduce the above copyright
+ *       notice, this list of conditions and the following disclaimer in the
+ *       documentation and/or other materials provided with the distribution.
+ * 
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL DANIEL GUERRERO BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+*/
+
+var Base64Binary = {
+	_keyStr : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
+
+	/* will return a  Uint8Array type */
+	decodeArrayBuffer: function(input) {
+		var bytes = Math.ceil( (3*input.length) / 4.0);
+		var ab = new ArrayBuffer(bytes);
+		this.decode(input, ab);
+
+		return ab;
+	},
+
+	decode: function(input, arrayBuffer) {
+		//get last chars to see if are valid
+		var lkey1 = this._keyStr.indexOf(input.charAt(input.length-1));		 
+		var lkey2 = this._keyStr.indexOf(input.charAt(input.length-1));		 
+
+		var bytes = Math.ceil( (3*input.length) / 4.0);
+		if (lkey1 == 64) bytes--; //padding chars, so skip
+		if (lkey2 == 64) bytes--; //padding chars, so skip
+
+		var uarray;
+		var chr1, chr2, chr3;
+		var enc1, enc2, enc3, enc4;
+		var i = 0;
+		var j = 0;
+
+		if (arrayBuffer)
+			uarray = new Uint8Array(arrayBuffer);
+		else
+			uarray = new Uint8Array(bytes);
+
+		input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
+
+		for (i=0; i<bytes; i+=3) {	
+			//get the 3 octects in 4 ascii chars
+			enc1 = this._keyStr.indexOf(input.charAt(j++));
+			enc2 = this._keyStr.indexOf(input.charAt(j++));
+			enc3 = this._keyStr.indexOf(input.charAt(j++));
+			enc4 = this._keyStr.indexOf(input.charAt(j++));
+
+			chr1 = (enc1 << 2) | (enc2 >> 4);
+			chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
+			chr3 = ((enc3 & 3) << 6) | enc4;
+
+			uarray[i] = chr1;			
+			if (enc3 != 64) uarray[i+1] = chr2;
+			if (enc4 != 64) uarray[i+2] = chr3;
+		}
+
+		return uarray;	
+	}
+};
\ No newline at end of file
diff --git a/inc/shim/WebAudioAPI.js b/inc/shim/WebAudioAPI.js
new file mode 100644
index 0000000..17e9eb9
--- /dev/null
+++ b/inc/shim/WebAudioAPI.js
@@ -0,0 +1,111 @@
+/**
+ * @license -------------------------------------------------------------------
+ *   module: WebAudioShim - Fix naming issues for WebAudioAPI supports
+ *      src: https://github.com/Dinahmoe/webaudioshim
+ *   author: Dinahmoe AB
+ * -------------------------------------------------------------------
+ * Copyright (c) 2012 DinahMoe AB
+ * 
+ * Permission is hereby granted, free of charge, to any person
+ * obtaining a copy of this software and associated documentation
+ * files (the "Software"), to deal in the Software without
+ * restriction, including without limitation the rights to use,
+ * copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following
+ * conditions:
+ * 
+ * The above copyright notice and this permission notice shall be
+ * included in all copies or substantial portions of the Software.
+ * 
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+ * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+ * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+ * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+window.AudioContext = window.AudioContext || window.webkitAudioContext || null;
+window.OfflineAudioContext = window.OfflineAudioContext || window.webkitOfflineAudioContext || null;
+
+(function (Context) {
+	var isFunction = function (f) {
+		return Object.prototype.toString.call(f) === "[object Function]" ||
+			Object.prototype.toString.call(f) === "[object AudioContextConstructor]";
+	};
+	var contextMethods = [
+		["createGainNode", "createGain"],
+		["createDelayNode", "createDelay"],
+		["createJavaScriptNode", "createScriptProcessor"]
+	];
+	///
+	var proto;
+	var instance;
+	var sourceProto;
+	///
+	if (!isFunction(Context)) {
+		return;
+	}
+	instance = new Context();
+	if (!instance.destination || !instance.sampleRate) {
+		return;
+	}
+	proto = Context.prototype;
+	sourceProto = Object.getPrototypeOf(instance.createBufferSource());
+
+	if (!isFunction(sourceProto.start)) {
+		if (isFunction(sourceProto.noteOn)) {
+			sourceProto.start = function (when, offset, duration) {
+				switch (arguments.length) {
+					case 0:
+						throw new Error("Not enough arguments.");
+					case 1:
+						this.noteOn(when);
+						break;
+					case 2:
+						if (this.buffer) {
+							this.noteGrainOn(when, offset, this.buffer.duration - offset);
+						} else {
+							throw new Error("Missing AudioBuffer");
+						}
+						break;
+					case 3:
+						this.noteGrainOn(when, offset, duration);
+				}
+			};
+		}
+	}
+
+	if (!isFunction(sourceProto.noteOn)) {
+		sourceProto.noteOn = sourceProto.start;
+	}
+
+	if (!isFunction(sourceProto.noteGrainOn)) {
+		sourceProto.noteGrainOn = sourceProto.start;
+	}
+
+	if (!isFunction(sourceProto.stop)) {
+		sourceProto.stop = sourceProto.noteOff;
+	}
+
+	if (!isFunction(sourceProto.noteOff)) {
+		sourceProto.noteOff = sourceProto.stop;
+	}
+
+	contextMethods.forEach(function (names) {
+		var name1;
+		var name2;
+		while (names.length) {
+			name1 = names.pop();
+			if (isFunction(this[name1])) {
+				this[names.pop()] = this[name1];
+			} else {
+				name2 = names.pop();
+				this[name1] = this[name2];
+			}
+		}
+	}, proto);
+})(window.AudioContext);
\ No newline at end of file
diff --git a/inc/polyfill/WebMIDIAPI.js b/inc/shim/WebMIDIAPI.js
similarity index 97%
rename from inc/polyfill/WebMIDIAPI.js
rename to inc/shim/WebMIDIAPI.js
index 174a160..000a916 100644
--- a/inc/polyfill/WebMIDIAPI.js
+++ b/inc/shim/WebMIDIAPI.js
@@ -98,7 +98,7 @@
 
     // API Methods
 
-    function MIDIAccess() {
+    MIDIAccess = function() {
         this._jazzInstances = new Array();
         this._jazzInstances.push( new _JazzInstance() );
         this._promise = new Promise;
@@ -337,18 +337,9 @@
     };
 
     function _sendLater() {
-        delete timeouts[this.data.timeout];
         this.jazz.MidiOutLong( this.data );    // handle send as sysex
     }
 
-    var timeouts = {};
-    MIDIOutput.prototype.cancel = function() {
-        for (var key in timeouts) {
-            window.clearTimeout(key);
-            delete timeouts[key];
-        }
-    };
-
     MIDIOutput.prototype.send = function( data, timestamp ) {
         var delayBeforeSend = 0;
         if (data.length === 0)
@@ -361,8 +352,8 @@
             var sendObj = new Object();
             sendObj.jazz = this._jazzInstance;
             sendObj.data = data;
-            sendObj.timeout = window.setTimeout( _sendLater.bind(sendObj), delayBeforeSend );
-            timeouts[sendObj.timeout] = true;
+
+            window.setTimeout( _sendLater.bind(sendObj), delayBeforeSend );
         } else {
             this._jazzInstance.MidiOutLong( data );
         }
diff --git a/inc/tuna/README.md b/inc/tuna/README.md
new file mode 100644
index 0000000..e5aff93
--- /dev/null
+++ b/inc/tuna/README.md
@@ -0,0 +1,179 @@
+Latest news
+====
+New effects added: Chorus, Phaser, and Tremolo. <br /> Be sure to follow us at <a href="https://twitter.com/DinahmoeSTHLM">@DinahmoeSTHLM</a> for future updates. Feel free to create your own effects and give us a pull request!
+
+tuna
+====
+
+An audio effects library for the Web Audio API. Created by <a href="http://www.dinahmoe.com">DinahMoe</a>
+
+<img src="https://i.chzbgr.com/completestore/12/9/4/rjttPiC7WE6S4Bi22aYp1A2.jpg" alt="tuna, tuna, tuna"/>
+
+Effect list:
+====
+<ul>
+    <li>Overdrive (6 different algorithms)</li>
+    <li>Filter</li>
+    <li>Cabinet</li>
+    <li>Delay</li>
+    <li>Convolver (Reverb)</li>
+    <li>Compressor</li>
+    <li>WahWah</li>
+    <li>Tremolo</li>
+    <li>Phaser</li>
+    <li>Chorus</li>
+</ul>
+
+Usage
+====
+
+Start by creating a new Tuna object like so:
+
+<pre>
+var context = new webkitAudioContext();
+var tuna = new Tuna(context);
+</pre>
+
+You need to pass the audio context you're using in your application. Tuna will be using it to create its effects.
+
+You create a new tuna node as such:
+
+<pre>
+var chorus = new tuna.Chorus({
+                 rate: 1.5,
+                 feedback: 0.2,
+                 delay: 0.0045,
+                 bypass: 0
+             });
+</pre>
+You can then connect the tuna node to native Web Audio nodes by doing:
+<pre>
+nativeNode.connect(chorus.input);
+chorus.connect(anotherNativeNode);
+</pre>
+or to other tuna nodes by doing:
+<pre>
+tunaNode.connect(chorus.input);
+chorus.connect(anotherTunaNode.input);
+</pre>
+All tuna nodes are connected TO by using the nodes input property, but connecting FROM the tuna node works as it does with ordinary native AudioNodes.
+
+
+The nodes
+====
+
+A basic chorus effect.
+<pre>
+var chorus = new tuna.Chorus({
+                 rate: 1.5,         //0.01 to 8+
+                 feedback: 0.2,     //0 to 1+
+                 delay: 0.0045,     //0 to 1
+                 bypass: 0          //the value 1 starts the effect as bypassed, 0 or 1
+             });
+</pre>
+
+A delay effect with feedback and a highpass filter applied to the delayed signal.
+<pre>
+var delay = new tuna.Delay({
+                feedback: 0.45,    //0 to 1+
+                delayTime: 150,    //how many milliseconds should the wet signal be delayed? 
+                wetLevel: 0.25,    //0 to 1+
+                dryLevel: 1,       //0 to 1+
+                cutoff: 20,        //cutoff frequency of the built in highpass-filter. 20 to 22050
+                bypass: 0
+            });
+</pre>
+
+A basic phaser effect.
+<pre>
+var phaser = new tuna.Phaser({
+                 rate: 1.2,                     //0.01 to 8 is a decent range, but higher values are possible
+                 depth: 0.3,                    //0 to 1
+                 feedback: 0.2,                 //0 to 1+
+                 stereoPhase: 30,               //0 to 180
+                 baseModulationFrequency: 700,  //500 to 1500
+                 bypass: 0
+             });
+</pre>
+
+A basic overdrive effect.
+<pre>
+var overdrive = new tuna.Overdrive({
+                    outputGain: 0.5,         //0 to 1+
+                    drive: 0.7,              //0 to 1
+                    curveAmount: 1,          //0 to 1
+                    algorithmIndex: 0,       //0 to 5, selects one of our drive algorithms
+                    bypass: 0
+                });
+</pre>
+
+A compressor with the option to use automatic makeup gain.
+<pre>
+var compressor = new tuna.Compressor({
+                     threshold: 0.5,    //-100 to 0
+                     makeupGain: 1,     //0 and up
+                     attack: 1,         //0 to 1000
+                     release: 0,        //0 to 3000
+                     ratio: 4,          //1 to 20
+                     knee: 5,           //0 to 40
+                     automakeup: true,  //true/false
+                     bypass: 0
+                 });
+</pre>
+
+A convolver with high- and lowcut. You can find a lot of impulse resonses <a href="http://chromium.googlecode.com/svn/trunk/samples/audio/impulse-responses/">here</a>
+<pre>
+var convolver = new tuna.Convolver({
+                    highCut: 22050,                         //20 to 22050
+                    lowCut: 20,                             //20 to 22050
+                    dryLevel: 1,                            //0 to 1+
+                    wetLevel: 1,                            //0 to 1+
+                    level: 1,                               //0 to 1+, adjusts total output of both wet and dry
+                    impulse: "impulses/impulse_rev.wav",    //the path to your impulse response
+                    bypass: 0
+                });
+</pre>
+
+A basic filter.
+<pre>
+var filter = new tuna.Filter({
+                 frequency: 20,         //20 to 22050
+                 Q: 1,                  //0.001 to 100
+                 gain: 0,               //-40 to 40
+                 bypass: 1,             //0 to 1+
+                 filterType: 0,         //0 to 7, corresponds to the filter types in the native filter node: lowpass, highpass, bandpass, lowshelf, highshelf, peaking, notch, allpass in that order
+                 bypass: 0
+             });
+</pre>
+
+A cabinet/speaker emulator.
+<pre>
+var cabinet = new tuna.Cabinet({
+                  makeupGain: 1,                                 //0 to 20
+                  impulsePath: "impulses/impulse_guitar.wav",    //path to your speaker impulse
+                  bypass: 0
+              });
+</pre>
+
+A basic tremolo.
+<pre>
+var tremolo = new tuna.Tremolo({
+                  intensity: 0.3,    //0 to 1
+                  rate: 0.1,         //0.001 to 8
+                  stereoPhase: 0,    //0 to 180
+                  bypass: 0
+              });
+</pre>
+
+A wahwah with an auto wah option.
+<pre>
+var wahwah = new tuna.WahWah({
+                 automode: true,                //true/false
+                 baseFrequency: 0.5,            //0 to 1
+                 excursionOctaves: 2,           //1 to 6
+                 sweep: 0.2,                    //0 to 1
+                 resonance: 10,                 //1 to 100
+                 sensitivity: 0.5,              //-1 to 1
+                 bypass: 0
+             });
+</pre>
\ No newline at end of file
diff --git a/inc/tuna/impulses/Sweetspot1M.wav b/inc/tuna/impulses/Sweetspot1M.wav
new file mode 100644
index 0000000..2a73c58
Binary files /dev/null and b/inc/tuna/impulses/Sweetspot1M.wav differ
diff --git a/inc/tuna/impulses/impulse_guitar.wav b/inc/tuna/impulses/impulse_guitar.wav
new file mode 100644
index 0000000..4bc33ce
Binary files /dev/null and b/inc/tuna/impulses/impulse_guitar.wav differ
diff --git a/inc/tuna/impulses/impulse_rev.wav b/inc/tuna/impulses/impulse_rev.wav
new file mode 100644
index 0000000..d556cb6
Binary files /dev/null and b/inc/tuna/impulses/impulse_rev.wav differ
diff --git a/inc/tuna/impulses/ir_rev_short.wav b/inc/tuna/impulses/ir_rev_short.wav
new file mode 100644
index 0000000..6585032
Binary files /dev/null and b/inc/tuna/impulses/ir_rev_short.wav differ
diff --git a/inc/tuna/tuna.js b/inc/tuna/tuna.js
new file mode 100644
index 0000000..1cb8a5b
--- /dev/null
+++ b/inc/tuna/tuna.js
@@ -0,0 +1,2093 @@
+/*
+    Copyright (c) 2012 DinahMoe AB
+
+    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation
+    files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy,
+    modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software
+    is furnished to do so, subject to the following conditions:
+
+    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
+    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
+    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+    
+    Bitcrusher & Moog Filter by Zach Denton
+*/
+
+// https://developer.mozilla.org/en-US/docs/Web_Audio_API/Porting_webkitAudioContext_code_to_standards_based_AudioContext
+
+// Originally written by Alessandro Saccoia, Chris Coniglio and Oskar Eriksson
+
+(function (window) {
+    var userContext;
+    var userInstance;
+    var Tuna = function (context) {
+			if (!window.AudioContext) {
+				window.AudioContext = window.webkitAudioContext;
+			}
+            if (!context) {
+                console.log("tuna.js: Missing audio context! Creating a new context for you.");
+                context = window.AudioContext && (new window.AudioContext());
+            }
+            userContext = context;
+            userInstance = this;
+        },
+        version = "0.1",
+        set = "setValueAtTime",
+        linear = "linearRampToValueAtTime",
+        pipe = function (param, val) {
+            param.value = val;
+        },
+        Super = Object.create(null, {
+            activate: {
+                writable: true,
+                value: function (doActivate) {
+                    if (doActivate) {
+                        this.input.disconnect();
+                        this.input.connect(this.activateNode);
+                        if (this.activateCallback) {
+                            this.activateCallback(doActivate);
+                        }
+                    } else {
+                        this.input.disconnect();
+                        this.input.connect(this.output);
+                    }
+                }
+            },
+            bypass: {
+                get: function () {
+                    return this._bypass;
+                },
+                set: function (value) {
+                    if (this._lastBypassValue === value) {
+                        return;
+                    }
+                    this._bypass = value;
+                    this.activate(!value);
+                    this._lastBypassValue = value;
+                }
+            },
+            connect: {
+                value: function (target) {
+                    this.output.connect(target);
+                }
+            },
+            disconnect: {
+                value: function (target) {
+                    this.output.disconnect(target);
+                }
+            },
+            connectInOrder: {
+                value: function (nodeArray) {
+                    var i = nodeArray.length - 1;
+                    while(i--) {
+                        if (!nodeArray[i].connect) {
+                            return console.error("AudioNode.connectInOrder: TypeError: Not an AudioNode.", nodeArray[i]);
+                        }
+                        if (nodeArray[i + 1].input) {
+                            nodeArray[i].connect(nodeArray[i + 1].input);
+                        } else {
+                            nodeArray[i].connect(nodeArray[i + 1]);
+                        }
+                    }
+                }
+            },
+            getDefaults: {
+                value: function () {
+                    var result = {};
+                    for(var key in this.defaults) {
+                        result[key] = this.defaults[key].value;
+                    }
+                    return result;
+                }
+            },
+            getValues: {
+                value: function () {
+                    var result = {};
+                    for(var key in this.defaults) {
+                        result[key] = this[key];
+                    }
+                    return result;
+                }
+            },
+            automate: {
+                value: function (property, value, duration, startTime) {
+                    var start = startTime ? ~~ (startTime / 1000) : userContext.currentTime,
+                        dur = duration ? ~~ (duration / 1000) : 0,
+                        _is = this.defaults[property],
+                        param = this[property],
+                        method;
+
+                    if (param) {
+                        if (_is.automatable) {
+                            if (!duration) {
+                                method = set;
+                            } else {
+                                method = linear;
+                                param.cancelScheduledValues(start);
+                                param.setValueAtTime(param.value, start);
+                            }
+                            param[method](value, dur + start);
+                        } else {
+                            param = value;
+                        }
+                    } else {
+                        console.error("Invalid Property for " + this.name);
+                    }
+                }
+            }
+        }),
+        FLOAT = "float",
+        BOOLEAN = "boolean",
+        STRING = "string",
+        INT = "int";
+
+    function dbToWAVolume(db) {
+        return Math.max(0, Math.round(100 * Math.pow(2, db / 6)) / 100);
+    }
+
+    function fmod(x, y) {
+        // http://kevin.vanzonneveld.net
+        // +   original by: Onno Marsman
+        // +      input by: Brett Zamir (http://brett-zamir.me)
+        // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
+        // *     example 1: fmod(5.7, 1.3);
+        // *     returns 1: 0.5
+        var tmp, tmp2, p = 0,
+            pY = 0,
+            l = 0.0,
+            l2 = 0.0;
+
+        tmp = x.toExponential().match(/^.\.?(.*)e(.+)$/);
+        p = parseInt(tmp[2], 10) - (tmp[1] + '').length;
+        tmp = y.toExponential().match(/^.\.?(.*)e(.+)$/);
+        pY = parseInt(tmp[2], 10) - (tmp[1] + '').length;
+
+        if (pY > p) {
+            p = pY;
+        }
+
+        tmp2 = (x % y);
+
+        if (p < -100 || p > 20) {
+            // toFixed will give an out of bound error so we fix it like this:
+            l = Math.round(Math.log(tmp2) / Math.log(10));
+            l2 = Math.pow(10, l);
+
+            return(tmp2 / l2).toFixed(l - p) * l2;
+        } else {
+            return parseFloat(tmp2.toFixed(-p));
+        }
+    }
+
+    function sign(x) {
+        if (x === 0) {
+            return 1;
+        } else {
+            return Math.abs(x) / x;
+        }
+    }
+
+    function tanh(n) {
+        return(Math.exp(n) - Math.exp(-n)) / (Math.exp(n) + Math.exp(-n));
+    }
+
+    Tuna.toString = Tuna.prototype.toString = function () {
+        return "You are running Tuna version " + version + " by Dinahmoe!";
+    };
+    Tuna.prototype.Filter = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.input = userContext.createGain();
+        this.activateNode = userContext.createGain();
+        this.filter = userContext.createBiquadFilter();
+        this.output = userContext.createGain();
+
+        this.activateNode.connect(this.filter);
+        this.filter.connect(this.output);
+
+        this.frequency = properties.frequency || this.defaults.frequency.value;
+        this.Q = properties.resonance || this.defaults.Q.value;
+        this.filterType = properties.filterType || this.defaults.filterType.value;
+        this.gain = properties.gain || this.defaults.gain.value;
+        this.bypass = properties.bypass || false;
+    };
+    Tuna.prototype.Filter.prototype = Object.create(Super, {
+        name: {
+            value: "Filter"
+        },
+        defaults: {
+            writable:true,
+            value: {
+                frequency: {
+                    value: 800,
+                    min: 20,
+                    max: 22050,
+                    automatable: true
+                },
+                Q: {
+                    value: 1,
+                    min: 0.001,
+                    max: 100,
+                    automatable: true
+                },
+                gain: {
+                    value: 0,
+                    min: -40,
+                    max: 40,
+                    automatable: true
+                },
+                bypass: {
+                    value: true,
+                    automatable: false,
+                    type: BOOLEAN
+                },
+                filterType: {
+                    value: 1,
+                    min: 0,
+                    max: 7,
+                    automatable: false,
+                    type: INT
+                }
+            }
+        },
+        filterType: {
+            enumerable: true,
+            get: function () {
+                return this.filter.type;
+            },
+            set: function (value) {
+                this.filter.type = value;
+            }
+        },
+        Q: {
+            enumerable: true,
+            get: function () {
+                return this.filter.Q;
+            },
+            set: function (value) {
+                this.filter.Q.value = value;
+            }
+        },
+        gain: {
+            enumerable: true,
+            get: function () {
+                return this.filter.gain;
+            },
+            set: function (value) {
+                this.filter.gain.value = value;
+            }
+        },
+        frequency: {
+            enumerable: true,
+            get: function () {
+                return this.filter.frequency;
+            },
+            set: function (value) {
+                this.filter.frequency.value = value;
+            }
+        }
+    });
+    Tuna.prototype.Bitcrusher = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;
+
+        this.input = userContext.createGain();
+        this.activateNode = userContext.createGain();
+        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);
+        this.output = userContext.createGain();
+
+        this.activateNode.connect(this.processor);
+        this.processor.connect(this.output);
+
+        var phaser = 0, last = 0;
+        this.processor.onaudioprocess = function (e) {
+            var input = e.inputBuffer.getChannelData(0),
+                output = e.outputBuffer.getChannelData(0),
+                step = Math.pow(1/2, this.bits);
+            for(var i = 0; i < input.length; i++) {
+                phaser += this.normfreq;
+                if (phaser >= 1.0) {
+                    phaser -= 1.0;
+                    last = step * Math.floor(input[i] / step + 0.5);
+                }
+                output[i] = last;
+            }
+        };
+
+        this.bits = properties.bits || this.defaults.bits.value;
+        this.normfreq = properties.normfreq || this.defaults.normfreq.value;
+        this.bypass = properties.bypass || false;
+    };
+    Tuna.prototype.Bitcrusher.prototype = Object.create(Super, {
+        name: {
+            value: "Bitcrusher"
+        },
+        defaults: {
+            writable: true,
+            value: {
+                bits: {
+                    value: 4,
+                    min: 1,
+                    max: 16,
+                    automatable: false,
+                    type: INT
+                },
+                bufferSize: {
+                    value: 4096,
+                    min: 256,
+                    max: 16384,
+                    automatable: false,
+                    type: INT
+                },
+                bypass: {
+                    value: false,
+                    automatable: false,
+                    type: BOOLEAN
+                },
+                normfreq: {
+                    value: 0.1,
+                    min: 0.0001,
+                    max: 1.0,
+                    automatable: false,
+                }
+            }
+        },
+        bits: {
+            enumerable: true,
+            get: function () {
+                return this.processor.bits;
+            },
+            set: function (value) {
+                this.processor.bits = value;
+            }
+        },
+        normfreq: {
+            enumerable: true,
+            get: function () {
+                return this.processor.normfreq;
+            },
+            set: function (value) {
+                this.processor.normfreq = value;
+            }
+        }
+    });
+    Tuna.prototype.Cabinet = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.input = userContext.createGain();
+        this.activateNode = userContext.createGain();
+        this.convolver = this.newConvolver(properties.impulsePath || "../impulses/impulse_guitar.wav");
+        this.makeupNode = userContext.createGain();
+        this.output = userContext.createGain();
+
+        this.activateNode.connect(this.convolver.input);
+        this.convolver.output.connect(this.makeupNode);
+        this.makeupNode.connect(this.output);
+
+        this.makeupGain = properties.makeupGain || this.defaults.makeupGain;
+        this.bypass = properties.bypass || false;
+    };
+    Tuna.prototype.Cabinet.prototype = Object.create(Super, {
+        name: {
+            value: "Cabinet"
+        },
+        defaults: {
+            writable:true,
+            value: {
+                makeupGain: {
+                    value: 1,
+                    min: 0,
+                    max: 20,
+                    automatable: true
+                },
+                bypass: {
+                    value: false,
+                    automatable: false,
+                    type: BOOLEAN
+                }
+            }
+        },
+        makeupGain: {
+            enumerable: true,
+            get: function () {
+                return this.makeupNode.gain;
+            },
+            set: function (value) {
+                this.makeupNode.gain.value = value;
+            }
+        },
+        newConvolver: {
+            value: function (impulsePath) {
+                return new userInstance.Convolver({
+                    impulse: impulsePath,
+                    dryLevel: 0,
+                    wetLevel: 1
+                });
+            }
+        }
+    });
+    Tuna.prototype.Chorus = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.input = userContext.createGain();
+        this.attenuator = this.activateNode = userContext.createGain();
+        this.splitter = userContext.createChannelSplitter(2);
+        this.delayL = userContext.createDelayNode();
+        this.delayR = userContext.createDelayNode();
+        this.feedbackGainNodeLR = userContext.createGain();
+        this.feedbackGainNodeRL = userContext.createGain();
+        this.merger = userContext.createChannelMerger(2);
+        this.output = userContext.createGain();
+
+        this.lfoL = new userInstance.LFO({
+            target: this.delayL.delayTime,
+            callback: pipe
+        });
+        this.lfoR = new userInstance.LFO({
+            target: this.delayR.delayTime,
+            callback: pipe
+        });
+
+        this.input.connect(this.attenuator);
+        this.attenuator.connect(this.output);
+        this.attenuator.connect(this.splitter);
+        this.splitter.connect(this.delayL, 0);
+        this.splitter.connect(this.delayR, 1);
+        this.delayL.connect(this.feedbackGainNodeLR);
+        this.delayR.connect(this.feedbackGainNodeRL);
+        this.feedbackGainNodeLR.connect(this.delayR);
+        this.feedbackGainNodeRL.connect(this.delayL);
+        this.delayL.connect(this.merger, 0, 0);
+        this.delayR.connect(this.merger, 0, 1);
+        this.merger.connect(this.output);
+
+        this.feedback = properties.feedback || this.defaults.feedback.value;
+        this.rate = properties.rate || this.defaults.rate.value;
+        this.delay = properties.delay || this.defaults.delay.value;
+        this.depth = properties.depth || this.defaults.depth.value;
+        this.lfoR.phase = Math.PI / 2;
+        this.attenuator.gain.value = 0.6934; // 1 / (10 ^ (((20 * log10(3)) / 3) / 20))
+        this.lfoL.activate(true);
+        this.lfoR.activate(true);
+        this.bypass = properties.bypass || false;
+    };
+    Tuna.prototype.Chorus.prototype = Object.create(Super, {
+        name: {
+            value: "Chorus"
+        },
+        defaults: {
+            writable:true,
+            value: {
+                feedback: {
+                    value: 0.4,
+                    min: 0,
+                    max: 0.95,
+                    automatable: false,
+                },
+                delay: {
+                    value: 0.0045,
+                    min: 0,
+                    max: 1,
+                    automatable: false,
+                },
+                depth: {
+                    value: 0.7,
+                    min: 0,
+                    max: 1,
+                    automatable: false,
+                },
+                rate: {
+                    value: 1.5,
+                    min: 0,
+                    max: 8,
+                    automatable: false,
+                },
+                bypass: {
+                    value: true,
+                    automatable: false,
+                    type: BOOLEAN
+                }
+            }
+        },
+        delay: {
+            enumerable: true,
+            get: function () {
+                return this._delay;
+            },
+            set: function (value) {
+                this._delay = 0.0002 * (Math.pow(10, value) * 2);
+                this.lfoL.offset = this._delay;
+                this.lfoR.offset = this._delay;
+                this._depth = this._depth;
+            }
+        },
+        depth: {
+            enumerable: true,
+            get: function () {
+                return this._depth;
+            },
+            set: function (value) {
+                this._depth = value;
+                this.lfoL.oscillation = this._depth * this._delay;
+                this.lfoR.oscillation = this._depth * this._delay;
+            }
+        },
+        feedback: {
+            enumerable: true,
+            get: function () {
+                return this._feedback;
+            },
+            set: function (value) {
+                this._feedback = value;
+                this.feedbackGainNodeLR.gain.value = this._feedback;
+                this.feedbackGainNodeRL.gain.value = this._feedback;
+            }
+        },
+        rate: {
+            enumerable: true,
+            get: function () {
+                return this._rate;
+            },
+            set: function (value) {
+                this._rate = value;
+                this.lfoL.frequency = this._rate;
+                this.lfoR.frequency = this._rate;
+            }
+        }
+    });
+    Tuna.prototype.Compressor = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.input = userContext.createGain();
+        this.compNode = this.activateNode = userContext.createDynamicsCompressor();
+        this.makeupNode = userContext.createGain();
+        this.output = userContext.createGain();
+
+        this.compNode.connect(this.makeupNode);
+        this.makeupNode.connect(this.output);
+
+        this.automakeup = properties.automakeup || this.defaults.automakeup.value;
+        this.makeupGain = properties.makeupGain || this.defaults.makeupGain.value;
+        this.threshold = properties.threshold || this.defaults.threshold.value;
+        this.release = properties.release || this.defaults.release.value;
+        this.attack = properties.attack || this.defaults.attack.value;
+        this.ratio = properties.ratio || this.defaults.ratio.value;
+        this.knee = properties.knee || this.defaults.knee.value;
+        this.bypass = properties.bypass || false;
+    };
+    Tuna.prototype.Compressor.prototype = Object.create(Super, {
+        name: {
+            value: "Compressor"
+        },
+        defaults: {
+            writable:true,
+            value: {
+                threshold: {
+                    value: -20,
+                    min: -60,
+                    max: 0,
+                    automatable: true
+                },
+                release: {
+                    value: 250,
+                    min: 10,
+                    max: 2000,
+                    automatable: true
+                },
+                makeupGain: {
+                    value: 1,
+                    min: 1,
+                    max: 100,
+                    automatable: true
+                },
+                attack: {
+                    value: 1,
+                    min: 0,
+                    max: 1000,
+                    automatable: true
+                },
+                ratio: {
+                    value: 4,
+                    min: 1,
+                    max: 50,
+                    automatable: true
+                },
+                knee: {
+                    value: 5,
+                    min: 0,
+                    max: 40,
+                    automatable: true
+                },
+                automakeup: {
+                    value: false,
+                    automatable: false,
+                    type: BOOLEAN
+                },
+                bypass: {
+                    value: true,
+                    automatable: false,
+                    type: BOOLEAN
+                }
+            }
+        },
+        computeMakeup: {
+            value: function () {
+                var magicCoefficient = 4,
+                    // raise me if the output is too hot
+                    c = this.compNode;
+                return -(c.threshold.value - c.threshold.value / c.ratio.value) / magicCoefficient;
+            }
+        },
+        automakeup: {
+            enumerable: true,
+            get: function () {
+                return this._automakeup;
+            },
+            set: function (value) {
+                this._automakeup = value;
+                if (this._automakeup) this.makeupGain = this.computeMakeup();
+            }
+        },
+        threshold: {
+            enumerable: true,
+            get: function () {
+                return this.compNode.threshold;
+            },
+            set: function (value) {
+                this.compNode.threshold.value = value;
+                if (this._automakeup) this.makeupGain = this.computeMakeup();
+            }
+        },
+        ratio: {
+            enumerable: true,
+            get: function () {
+                return this.compNode.ratio;
+            },
+            set: function (value) {
+                this.compNode.ratio.value = value;
+                if (this._automakeup) this.makeupGain = this.computeMakeup();
+            }
+        },
+        knee: {
+            enumerable: true,
+            get: function () {
+                return this.compNode.knee;
+            },
+            set: function (value) {
+                this.compNode.knee.value = value;
+                if (this._automakeup) this.makeupGain = this.computeMakeup();
+            }
+        },
+        attack: {
+            enumerable: true,
+            get: function () {
+                return this.compNode.attack;
+            },
+            set: function (value) {
+                this.compNode.attack.value = value / 1000;
+            }
+        },
+        release: {
+            enumerable: true,
+            get: function () {
+                return this.compNode.release;
+            },
+            set: function (value) {
+                this.compNode.release = value / 1000;
+            }
+        },
+        makeupGain: {
+            enumerable: true,
+            get: function () {
+                return this.makeupNode.gain;
+            },
+            set: function (value) {
+                this.makeupNode.gain.value = dbToWAVolume(value);
+            }
+        }
+    });
+    Tuna.prototype.Convolver = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.input = userContext.createGain();
+        this.activateNode = userContext.createGain();
+        this.convolver = userContext.createConvolver();
+        this.dry = userContext.createGain();
+        this.filterLow = userContext.createBiquadFilter();
+        this.filterHigh = userContext.createBiquadFilter();
+        this.wet = userContext.createGain();
+        this.output = userContext.createGain();
+
+        this.activateNode.connect(this.filterLow);
+        this.activateNode.connect(this.dry);
+        this.filterLow.connect(this.filterHigh);
+        this.filterHigh.connect(this.convolver);
+        this.convolver.connect(this.wet);
+        this.wet.connect(this.output);
+        this.dry.connect(this.output);
+
+        this.dryLevel = properties.dryLevel || this.defaults.dryLevel.value;
+        this.wetLevel = properties.wetLevel || this.defaults.wetLevel.value;
+        this.highCut = properties.highCut || this.defaults.highCut.value;
+        this.buffer = properties.impulse || "../impulses/ir_rev_short.wav";
+        this.lowCut = properties.lowCut || this.defaults.lowCut.value;
+        this.level = properties.level || this.defaults.level.value;
+        this.filterHigh.type = this.filterHigh.LOWPASS;
+        this.filterLow.type = this.filterHigh.HIGHPASS;
+        this.bypass = properties.bypass || false;
+    };
+    Tuna.prototype.Convolver.prototype = Object.create(Super, {
+        name: {
+            value: "Convolver"
+        },
+        defaults: {
+            writable:true,
+            value: {
+                highCut: {
+                    value: 22050,
+                    min: 20,
+                    max: 22050,
+                    automatable: true
+                },
+                lowCut: {
+                    value: 20,
+                    min: 20,
+                    max: 22050,
+                    automatable: true
+                },
+                dryLevel: {
+                    value: 1,
+                    min: 0,
+                    max: 1,
+                    automatable: true
+                },
+                wetLevel: {
+                    value: 1,
+                    min: 0,
+                    max: 1,
+                    automatable: true
+                },
+                level: {
+                    value: 1,
+                    min: 0,
+                    max: 1,
+                    automatable: true
+                }
+            }
+        },
+        lowCut: {
+            get: function () {
+                return this.filterLow.frequency;
+            },
+            set: function (value) {
+                this.filterLow.frequency.value = value;
+            }
+        },
+        highCut: {
+            get: function () {
+                return this.filterHigh.frequency;
+            },
+            set: function (value) {
+                this.filterHigh.frequency.value = value;
+            }
+        },
+        level: {
+            get: function () {
+                return this.output.gain;
+            },
+            set: function (value) {
+                this.output.gain.value = value;
+            }
+        },
+        dryLevel: {
+            get: function () {
+                return this.dry.gain
+            },
+            set: function (value) {
+                this.dry.gain.value = value;
+            }
+        },
+        wetLevel: {
+            get: function () {
+                return this.wet.gain;
+            },
+            set: function (value) {
+                this.wet.gain.value = value;
+            }
+        },
+        buffer: {
+            enumerable: false,
+            get: function () {
+                return this.convolver.buffer;
+            },
+            set: function (impulse) {
+                var convolver = this.convolver,
+                    xhr = new XMLHttpRequest();
+                if (!impulse) {
+                    console.log("Tuna.Convolver.setBuffer: Missing impulse path!");
+                    return;
+                }
+                xhr.open("GET", impulse, true);
+                xhr.responseType = "arraybuffer";
+                xhr.onreadystatechange = function () {
+                    if (xhr.readyState === 4) {
+                        if (xhr.status < 300 && xhr.status > 199 || xhr.status === 302) {
+                            userContext.decodeAudioData(xhr.response, function (buffer) {
+                                convolver.buffer = buffer;
+                            }, function (e) {
+                                if (e) console.log("Tuna.Convolver.setBuffer: Error decoding data" + e);
+                            });
+                        }
+                    }
+                };
+                xhr.send(null);
+            }
+        }
+    });
+    Tuna.prototype.Delay = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.input = userContext.createGain();
+        this.activateNode = userContext.createGain();
+        this.dry = userContext.createGain();
+        this.wet = userContext.createGain();
+        this.filter = userContext.createBiquadFilter();
+        this.delay = userContext.createDelayNode();
+        this.feedbackNode = userContext.createGain();
+        this.output = userContext.createGain();
+
+        this.activateNode.connect(this.delay);
+        this.activateNode.connect(this.dry);
+        this.delay.connect(this.filter);
+        this.filter.connect(this.feedbackNode);
+        this.feedbackNode.connect(this.delay);
+        this.feedbackNode.connect(this.wet);
+        this.wet.connect(this.output);
+        this.dry.connect(this.output);
+
+        this.delayTime = properties.delayTime || this.defaults.delayTime.value;
+        this.feedback = properties.feedback || this.defaults.feedback.value;
+        this.wetLevel = properties.wetLevel || this.defaults.wetLevel.value;
+        this.dryLevel = properties.dryLevel || this.defaults.dryLevel.value;
+        this.cutoff = properties.cutoff || this.defaults.cutoff.value;
+        this.filter.type = this.filter.LOWPASS;
+        this.bypass = properties.bypass || false;
+    };
+    
+    Tuna.prototype.Delay.prototype = Object.create(Super, {
+        name: {
+            value: "Delay"
+        },
+        defaults: {
+            writable:true,
+            value: {
+                delayTime: {
+                    value: 100,
+                    min: 20,
+                    max: 1000,
+                    automatable: false,
+                },
+                feedback: {
+                    value: 0.45,
+                    min: 0,
+                    max: 0.9,
+                    automatable: true
+                },
+                cutoff: {
+                    value: 20000,
+                    min: 20,
+                    max: 20000,
+                    automatable: true
+                },
+                wetLevel: {
+                    value: 0.5,
+                    min: 0,
+                    max: 1,
+                    automatable: true
+                },
+                dryLevel: {
+                    value: 1,
+                    min: 0,
+                    max: 1,
+                    automatable: true
+                }
+            }
+        },
+        delayTime: {
+            enumerable: true,
+            get: function () {
+                return this.delay.delayTime;
+            },
+            set: function (value) {
+                this.delay.delayTime.value = value / 1000;
+            }
+        },
+        wetLevel: {
+            enumerable: true,
+            get: function () {
+                return this.wet.gain;
+            },
+            set: function (value) {
+                this.wet.gain.value = value;
+            }
+        },
+        dryLevel: {
+            enumerable: true,
+            get: function () {
+                return this.dry.gain;
+            },
+            set: function (value) {
+                this.dry.gain.value = value;
+            }
+        },
+        feedback: {
+            enumerable: true,
+            get: function () {
+                return this.feedbackNode.gain;
+            },
+            set: function (value) {
+                this.feedbackNode.gain.value = value;
+            }
+        },
+        cutoff: {
+            enumerable: true,
+            get: function () {
+                return this.filter.frequency;
+            },
+            set: function (value) {
+                this.filter.frequency.value = value;
+            }
+        }
+    });
+    Tuna.prototype.MoogFilter = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;
+
+        this.input = userContext.createGain();
+        this.activateNode = userContext.createGain();
+        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);
+        this.output = userContext.createGain();
+
+        this.activateNode.connect(this.processor);
+        this.processor.connect(this.output);
+
+        var in1, in2, in3, in4, out1, out2, out3, out4;
+        in1 = in2 = in3 = in4 = out1 = out2 = out3 = out4 = 0.0;
+        this.processor.onaudioprocess = function (e) {
+            var input = e.inputBuffer.getChannelData(0),
+                output = e.outputBuffer.getChannelData(0),
+                f = this.cutoff * 1.16,
+                fb = this.resonance * (1.0 - 0.15 * f * f);
+            for(var i = 0; i < input.length; i++) {
+                input[i] -= out4 * fb;
+                input[i] *= 0.35013 * (f*f)*(f*f);
+                out1 = input[i] + 0.3 * in1 + (1 - f) * out1; // Pole 1
+                in1 = input[i];
+                out2 = out1 + 0.3 * in2 + (1 - f) * out2; // Pole 2
+                in2 = out1;
+                out3 = out2 + 0.3 * in3 + (1 - f) * out3; // Pole 3
+                in3 = out2;
+                out4 = out3 + 0.3 * in4 + (1 - f) * out4; // Pole 4
+                in4 = out3;
+                output[i] = out4;
+            }
+        };
+
+        this.cutoff = properties.cutoff || this.defaults.cutoff.value;
+        this.resonance = properties.resonance || this.defaults.resonance.value;
+        this.bypass = properties.bypass || false;
+    };
+    Tuna.prototype.MoogFilter.prototype = Object.create(Super, {
+        name: {
+            value: "MoogFilter"
+        },
+        defaults: {
+            writable: true,
+            value: {
+                bufferSize: {
+                    value: 4096,
+                    min: 256,
+                    max: 16384,
+                    automatable: false,
+                    type: INT
+                },
+                bypass: {
+                    value: false,
+                    automatable: false,
+                    type: BOOLEAN
+                },
+                cutoff: {
+                    value: 0.065,
+                    min: 0.0001,
+                    max: 1.0,
+                    automatable: false,
+                },
+                resonance: {
+                    value: 3.5,
+                    min: 0.0,
+                    max: 4.0,
+                    automatable: false,
+                }
+            }
+        },
+        cutoff: {
+            enumerable: true,
+            get: function () {
+                return this.processor.cutoff;
+            },
+            set: function (value) {
+                this.processor.cutoff = value;
+            }
+        },
+        resonance: {
+            enumerable: true,
+            get: function () {
+                return this.processor.resonance;
+            },
+            set: function (value) {
+                this.processor.resonance = value;
+            }
+        }
+    });
+    Tuna.prototype.Overdrive = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.input = userContext.createGain();
+        this.activateNode = userContext.createGain();
+        this.inputDrive = userContext.createGain();
+        this.waveshaper = userContext.createWaveShaper();
+        this.outputDrive = userContext.createGain();
+        this.output = userContext.createGain();
+
+        this.activateNode.connect(this.inputDrive);
+        this.inputDrive.connect(this.waveshaper);
+        this.waveshaper.connect(this.outputDrive);
+        this.outputDrive.connect(this.output);
+
+        this.ws_table = new Float32Array(this.k_nSamples);
+        this.drive = properties.drive || this.defaults.drive.value;
+        this.outputGain = properties.outputGain || this.defaults.outputGain.value;
+        this.curveAmount = properties.curveAmount || this.defaults.curveAmount.value;
+        this.algorithmIndex = properties.algorithmIndex || this.defaults.algorithmIndex.value;
+        this.bypass = properties.bypass || false;
+    };
+    Tuna.prototype.Overdrive.prototype = Object.create(Super, {
+        name: {
+            value: "Overdrive"
+        },
+        defaults: {
+            writable:true,
+            value: {
+                drive: {
+                    value: 1,
+                    min: 0,
+                    max: 1,
+                    automatable: true,
+                    type: FLOAT,
+                    scaled: true
+                },
+                outputGain: {
+                    value: 1,
+                    min: 0,
+                    max: 1,
+                    automatable: true,
+                    type: FLOAT,
+                    scaled: true
+                },
+                curveAmount: {
+                    value: 0.725,
+                    min: 0,
+                    max: 1,
+                    automatable: false,
+                },
+                algorithmIndex: {
+                    value: 0,
+                    min: 0,
+                    max: 5,
+                    automatable: false,
+                    type: INT
+                }
+            }
+        },
+        k_nSamples: {
+            value: 8192
+        },
+        drive: {
+            get: function () {
+                return this.inputDrive.gain;
+            },
+            set: function (value) {
+                this._drive = value;
+            }
+        },
+        curveAmount: {
+            get: function () {
+                return this._curveAmount;
+            },
+            set: function (value) {
+                this._curveAmount = value;
+                if (this._algorithmIndex === undefined) {
+                    this._algorithmIndex = 0;
+                }
+                this.waveshaperAlgorithms[this._algorithmIndex](this._curveAmount, this.k_nSamples, this.ws_table);
+                this.waveshaper.curve = this.ws_table;
+            }
+        },
+        outputGain: {
+            get: function () {
+                return this.outputDrive.gain;
+            },
+            set: function (value) {
+                this._outputGain = dbToWAVolume(value);
+            }
+        },
+        algorithmIndex: {
+            get: function () {
+                return this._algorithmIndex;
+            },
+            set: function (value) {
+                this._algorithmIndex = value>>0;
+                this.curveAmount = this._curveAmount;
+            }
+        },
+        waveshaperAlgorithms: {
+            value: [
+
+            function (amount, n_samples, ws_table) {
+                amount = Math.min(amount, 0.9999);
+                var k = 2 * amount / (1 - amount),
+                    i, x;
+                for(i = 0; i < n_samples; i++) {
+                    x = i * 2 / n_samples - 1;
+                    ws_table[i] = (1 + k) * x / (1 + k * Math.abs(x));
+                }
+            }, function (amount, n_samples, ws_table) {
+                var i, x, y;
+                for(i = 0; i < n_samples; i++) {
+                    x = i * 2 / n_samples - 1;
+                    y = ((0.5 * Math.pow((x + 1.4), 2)) - 1) * y >= 0 ? 5.8 : 1.2;
+                    ws_table[i] = tanh(y);
+                }
+            }, function (amount, n_samples, ws_table) {
+                var i, x, y, a = 1 - amount;
+                for(i = 0; i < n_samples; i++) {
+                    x = i * 2 / n_samples - 1;
+                    y = x < 0 ? -Math.pow(Math.abs(x), a + 0.04) : Math.pow(x, a);
+                    ws_table[i] = tanh(y * 2);
+                }
+            }, function (amount, n_samples, ws_table) {
+                var i, x, y, abx, a = 1 - amount > 0.99 ? 0.99 : 1 - amount;
+                for(i = 0; i < n_samples; i++) {
+                    x = i * 2 / n_samples - 1;
+                    abx = Math.abs(x);
+                    if (abx < a) y = abx;
+                    else if (abx > a) y = a + (abx - a) / (1 + Math.pow((abx - a) / (1 - a), 2));
+                    else if (abx > 1) y = abx;
+                    ws_table[i] = sign(x) * y * (1 / ((a + 1) / 2));
+                }
+            }, function (amount, n_samples, ws_table) { // fixed curve, amount doesn't do anything, the distortion is just from the drive
+                var i, x;
+                for(i = 0; i < n_samples; i++) {
+                    x = i * 2 / n_samples - 1;
+                    if (x < -0.08905) {
+                        ws_table[i] = (-3 / 4) * (1 - (Math.pow((1 - (Math.abs(x) - 0.032857)), 12)) + (1 / 3) * (Math.abs(x) - 0.032847)) + 0.01;
+                    } else if (x >= -0.08905 && x < 0.320018) {
+                        ws_table[i] = (-6.153 * (x * x)) + 3.9375 * x;
+                    } else {
+                        ws_table[i] = 0.630035;
+                    }
+                }
+            }, function (amount, n_samples, ws_table) {
+                var a = 2 + Math.round(amount * 14),
+                    // we go from 2 to 16 bits, keep in mind for the UI
+                    bits = Math.round(Math.pow(2, a - 1)),
+                    // real number of quantization steps divided by 2
+                    i, x;
+                for(i = 0; i < n_samples; i++) {
+                    x = i * 2 / n_samples - 1;
+                    ws_table[i] = Math.round(x * bits) / bits;
+                }
+            }]
+        }
+    });
+    Tuna.prototype.Phaser = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.input = userContext.createGain();
+        this.splitter = this.activateNode = userContext.createChannelSplitter(2);
+        this.filtersL = [];
+        this.filtersR = [];
+        this.feedbackGainNodeL = userContext.createGain();
+        this.feedbackGainNodeR = userContext.createGain();
+        this.merger = userContext.createChannelMerger(2);
+        this.filteredSignal = userContext.createGain();
+        this.output = userContext.createGain();
+        this.lfoL = new userInstance.LFO({
+            target: this.filtersL,
+            callback: this.callback
+        });
+        this.lfoR = new userInstance.LFO({
+            target: this.filtersR,
+            callback: this.callback
+        });
+
+        var i = this.stage;
+        while(i--) {
+            this.filtersL[i] = userContext.createBiquadFilter();
+            this.filtersR[i] = userContext.createBiquadFilter();
+            this.filtersL[i].type = this.filtersL[i].ALLPASS;
+            this.filtersR[i].type = this.filtersR[i].ALLPASS;
+        }
+        this.input.connect(this.splitter);
+        this.input.connect(this.output);
+        this.splitter.connect(this.filtersL[0], 0, 0);
+        this.splitter.connect(this.filtersR[0], 1, 0);
+        this.connectInOrder(this.filtersL);
+        this.connectInOrder(this.filtersR);
+        this.filtersL[this.stage - 1].connect(this.feedbackGainNodeL);
+        this.filtersL[this.stage - 1].connect(this.merger, 0, 0);
+        this.filtersR[this.stage - 1].connect(this.feedbackGainNodeR);
+        this.filtersR[this.stage - 1].connect(this.merger, 0, 1);
+        this.feedbackGainNodeL.connect(this.filtersL[0]);
+        this.feedbackGainNodeR.connect(this.filtersR[0]);
+        this.merger.connect(this.output);
+
+        this.rate = properties.rate || this.defaults.rate.value;
+        this.baseModulationFrequency = properties.baseModulationFrequency || this.defaults.baseModulationFrequency.value;
+        this.depth = properties.depth || this.defaults.depth.value;
+        this.feedback = properties.feedback || this.defaults.feedback.value;
+        this.stereoPhase = properties.stereoPhase || this.defaults.stereoPhase.value;
+
+        this.lfoL.activate(true);
+        this.lfoR.activate(true);
+        this.bypass = properties.bypass || false;
+    };
+    Tuna.prototype.Phaser.prototype = Object.create(Super, {
+        name: {
+            value: "Phaser"
+        },
+        stage: {
+            value: 4
+        },
+        defaults: {
+            writable:true,
+            value: {
+                rate: {
+                    value: 0.1,
+                    min: 0,
+                    max: 8,
+                    automatable: false,
+                },
+                depth: {
+                    value: 0.6,
+                    min: 0,
+                    max: 1,
+                    automatable: false,
+                },
+                feedback: {
+                    value: 0.7,
+                    min: 0,
+                    max: 1,
+                    automatable: false,
+                },
+                stereoPhase: {
+                    value: 40,
+                    min: 0,
+                    max: 180,
+                    automatable: false,
+                },
+                baseModulationFrequency: {
+                    value: 700,
+                    min: 500,
+                    max: 1500,
+                    automatable: false,
+                }
+            }
+        },
+        callback: {
+            value: function (filters, value) {
+                for(var stage = 0; stage < 4; stage++) {
+                    filters[stage].frequency.value = value;
+                }
+            }
+        },
+        depth: {
+            get: function () {
+                return this._depth;
+            },
+            set: function (value) {
+                this._depth = value;
+                this.lfoL.oscillation = this._baseModulationFrequency * this._depth;
+                this.lfoR.oscillation = this._baseModulationFrequency * this._depth;
+            }
+        },
+        rate: {
+            get: function () {
+                return this._rate;
+            },
+            set: function (value) {
+                this._rate = value;
+                this.lfoL.frequency = this._rate;
+                this.lfoR.frequency = this._rate;
+            }
+        },
+        baseModulationFrequency: {
+            enumerable: true,
+            get: function () {
+                return this._baseModulationFrequency;
+            },
+            set: function (value) {
+                this._baseModulationFrequency = value;
+                this.lfoL.offset = this._baseModulationFrequency;
+                this.lfoR.offset = this._baseModulationFrequency;
+                this._depth = this._depth;
+            }
+        },
+        feedback: {
+            get: function () {
+                return this._feedback;
+            },
+            set: function (value) {
+                this._feedback = value;
+                this.feedbackGainNodeL.gain.value = this._feedback;
+                this.feedbackGainNodeR.gain.value = this._feedback;
+            }
+        },
+        stereoPhase: {
+            get: function () {
+                return this._stereoPhase;
+            },
+            set: function (value) {
+                this._stereoPhase = value;
+                var newPhase = this.lfoL._phase + this._stereoPhase * Math.PI / 180;
+                newPhase = fmod(newPhase, 2 * Math.PI);
+                this.lfoR._phase = newPhase;
+            }
+        }
+    });
+    Tuna.prototype.Tremolo = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.input = userContext.createGain();
+        this.splitter = this.activateNode = userContext.createChannelSplitter(2), this.amplitudeL = userContext.createGain(), this.amplitudeR = userContext.createGain(), this.merger = userContext.createChannelMerger(2), this.output = userContext.createGain();
+        this.lfoL = new userInstance.LFO({
+            target: this.amplitudeL.gain,
+            callback: pipe
+        });
+        this.lfoR = new userInstance.LFO({
+            target: this.amplitudeR.gain,
+            callback: pipe
+        });
+
+        this.input.connect(this.splitter);
+        this.splitter.connect(this.amplitudeL, 0);
+        this.splitter.connect(this.amplitudeR, 1);
+        this.amplitudeL.connect(this.merger, 0, 0);
+        this.amplitudeR.connect(this.merger, 0, 1);
+        this.merger.connect(this.output);
+
+        this.rate = properties.rate || this.defaults.rate.value;
+        this.intensity = properties.intensity || this.defaults.intensity.value;
+        this.stereoPhase = properties.stereoPhase || this.defaults.stereoPhase.value;
+
+        this.lfoL.offset = 1 - (this.intensity / 2);
+        this.lfoR.offset = 1 - (this.intensity / 2);
+        this.lfoL.phase = this.stereoPhase * Math.PI / 180;
+
+        this.lfoL.activate(true);
+        this.lfoR.activate(true);
+        this.bypass = properties.bypass || false;
+    };
+    Tuna.prototype.Tremolo.prototype = Object.create(Super, {
+        name: {
+            value: "Tremolo"
+        },
+        defaults: {
+            writable:true,
+            value: {
+                intensity: {
+                    value: 0.3,
+                    min: 0,
+                    max: 1,
+                    automatable: false,
+                },
+                stereoPhase: {
+                    value: 0,
+                    min: 0,
+                    max: 180,
+                    automatable: false,
+                },
+                rate: {
+                    value: 5,
+                    min: 0.1,
+                    max: 11,
+                    automatable: false,
+                }
+            }
+        },
+        intensity: {
+            enumerable: true,
+            get: function () {
+                return this._intensity;
+            },
+            set: function (value) {
+                this._intensity = value;
+                this.lfoL.offset = 1 - this._intensity / 2;
+                this.lfoR.offset = 1 - this._intensity / 2;
+                this.lfoL.oscillation = this._intensity;
+                this.lfoR.oscillation = this._intensity;
+            }
+        },
+        rate: {
+            enumerable: true,
+            get: function () {
+                return this._rate;
+            },
+            set: function (value) {
+                this._rate = value;
+                this.lfoL.frequency = this._rate;
+                this.lfoR.frequency = this._rate;
+            }
+        },
+        stereoPhase: {
+            enumerable: true,
+            get: function () {
+                return this._rate;
+            },
+            set: function (value) {
+                this._stereoPhase = value;
+                var newPhase = this.lfoL._phase + this._stereoPhase * Math.PI / 180;
+                newPhase = fmod(newPhase, 2 * Math.PI);
+                this.lfoR.phase = newPhase;
+            }
+        }
+    });
+    Tuna.prototype.WahWah = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.input = userContext.createGain();
+        this.activateNode = userContext.createGain();
+        this.envelopeFollower = new userInstance.EnvelopeFollower({
+            target: this,
+            callback: function (context, value) {
+                context.sweep = value;
+            }
+        });
+        this.filterBp = userContext.createBiquadFilter();
+        this.filterPeaking = userContext.createBiquadFilter();
+        this.output = userContext.createGain();
+
+        //Connect AudioNodes
+        this.activateNode.connect(this.filterBp);
+        this.filterBp.connect(this.filterPeaking);
+        this.filterPeaking.connect(this.output);
+
+        //Set Properties
+        this.init();
+        this.automode = properties.enableAutoMode || this.defaults.automode.value;
+        this.resonance = properties.resonance || this.defaults.resonance.value;
+        this.sensitivity = properties.sensitivity || this.defaults.sensitivity.value;
+        this.baseFrequency = properties.baseFrequency || this.defaults.baseFrequency.value;
+        this.excursionOctaves = properties.excursionOctaves || this.defaults.excursionOctaves.value;
+        this.sweep = properties.sweep || this.defaults.sweep.value;
+
+        this.activateNode.gain.value = 2;
+        this.envelopeFollower.activate(true);
+        this.bypass = properties.bypass || false;
+    };
+    Tuna.prototype.WahWah.prototype = Object.create(Super, {
+        name: {
+            value: "WahWah"
+        },
+        defaults: {
+            writable:true,
+            value: {
+                automode: {
+                    value: true,
+                    automatable: false,
+                    type: BOOLEAN
+                },
+                baseFrequency: {
+                    value: 0.5,
+                    min: 0,
+                    max: 1,
+                    automatable: false,
+                },
+                excursionOctaves: {
+                    value: 2,
+                    min: 1,
+                    max: 6,
+                    automatable: false,
+                },
+                sweep: {
+                    value: 0.2,
+                    min: 0,
+                    max: 1,
+                    automatable: false,
+                },
+                resonance: {
+                    value: 10,
+                    min: 1,
+                    max: 100,
+                    automatable: false,
+                },
+                sensitivity: {
+                    value: 0.5,
+                    min: -1,
+                    max: 1,
+                    automatable: false,
+                }
+            }
+        },
+        activateCallback: {
+            value: function (value) {
+                this.automode = value;
+            }
+        },
+        automode: {
+            get: function () {
+                return this._automode;
+            },
+            set: function (value) {
+                this._automode = value;
+                if (value) {
+                    this.activateNode.connect(this.envelopeFollower.input);
+                    this.envelopeFollower.activate(true);
+                } else {
+                    this.envelopeFollower.activate(false);
+                    this.activateNode.disconnect();
+                    this.activateNode.connect(this.filterBp);
+                }
+            }
+        },
+        sweep: {
+            enumerable: true,
+            get: function () {
+                return this._sweep.value;
+            },
+            set: function (value) {
+                this._sweep = Math.pow(value > 1 ? 1 : value < 0 ? 0 : value, this._sensitivity);
+                this.filterBp.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;
+                this.filterPeaking.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;
+            }
+        },
+        baseFrequency: {
+            enumerable: true,
+            get: function () {
+                return this._baseFrequency;
+            },
+            set: function (value) {
+                this._baseFrequency = 50 * Math.pow(10, value * 2);
+                this._excursionFrequency = Math.min(this.sampleRate / 2, this.baseFrequency * Math.pow(2, this._excursionOctaves));
+                this.filterBp.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;
+                this.filterPeaking.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;
+            }
+        },
+        excursionOctaves: {
+            enumerable: true,
+            get: function () {
+                return this._excursionOctaves;
+            },
+            set: function (value) {
+                this._excursionOctaves = value;
+                this._excursionFrequency = Math.min(this.sampleRate / 2, this.baseFrequency * Math.pow(2, this._excursionOctaves));
+                this.filterBp.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;
+                this.filterPeaking.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;
+            }
+        },
+        sensitivity: {
+            enumerable: true,
+            get: function () {
+                return this._sensitivity;
+            },
+            set: function (value) {
+                this._sensitivity = Math.pow(10, value);
+            }
+        },
+        resonance: {
+            enumerable: true,
+            get: function () {
+                return this._resonance;
+            },
+            set: function (value) {
+                this._resonance = value;
+                this.filterPeaking.Q = this._resonance;
+            }
+        },
+        init: {
+            value: function () {
+                this.output.gain.value = 1;
+                this.filterPeaking.type = 5;
+                this.filterBp.type = 2;
+                this.filterPeaking.frequency.value = 100;
+                this.filterPeaking.gain.value = 20;
+                this.filterPeaking.Q.value = 5;
+                this.filterBp.frequency.value = 100;
+                this.filterBp.Q.value = 1;
+                this.sampleRate = userContext.sampleRate;
+            }
+        }
+    });
+    Tuna.prototype.EnvelopeFollower = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.input = userContext.createGain();
+        this.jsNode = this.output = userContext.createScriptProcessor(this.buffersize, 1, 1);
+
+        this.input.connect(this.output);
+
+        this.attackTime = properties.attackTime || this.defaults.attackTime.value;
+        this.releaseTime = properties.releaseTime || this.defaults.releaseTime.value;
+        this._envelope = 0;
+        this.target = properties.target || {};
+        this.callback = properties.callback || function () {};
+    };
+    Tuna.prototype.EnvelopeFollower.prototype = Object.create(Super, {
+        name: {
+            value: "EnvelopeFollower"
+        },
+        defaults: {
+            value: {
+                attackTime: {
+                    value: 0.003,
+                    min: 0,
+                    max: 0.5,
+                    automatable: false,
+                },
+                releaseTime: {
+                    value: 0.5,
+                    min: 0,
+                    max: 0.5,
+                    automatable: false,
+                }
+            }
+        },
+        buffersize: {
+            value: 256
+        },
+        envelope: {
+            value: 0
+        },
+        sampleRate: {
+            value: 44100
+        },
+        attackTime: {
+            enumerable: true,
+            get: function () {
+                return this._attackTime;
+            },
+            set: function (value) {
+                this._attackTime = value;
+                this._attackC = Math.exp(-1 / this._attackTime * this.sampleRate / this.buffersize);
+            }
+        },
+        releaseTime: {
+            enumerable: true,
+            get: function () {
+                return this._releaseTime;
+            },
+            set: function (value) {
+                this._releaseTime = value;
+                this._releaseC = Math.exp(-1 / this._releaseTime * this.sampleRate / this.buffersize);
+            }
+        },
+        callback: {
+            get: function () {
+                return this._callback;
+            },
+            set: function (value) {
+                if (typeof value === "function") {
+                    this._callback = value;
+                } else {
+                    console.error("tuna.js: " + this.name + ": Callback must be a function!");
+                }
+            }
+        },
+        target: {
+            get: function () {
+                return this._target;
+            },
+            set: function (value) {
+                this._target = value;
+            }
+        },
+        activate: {
+            value: function (doActivate) {
+                this.activated = doActivate;
+                if (doActivate) {
+                    this.jsNode.connect(userContext.destination);
+                    this.jsNode.onaudioprocess = this.returnCompute(this);
+                } else {
+                    this.jsNode.disconnect();
+                    this.jsNode.onaudioprocess = null;
+                }
+            }
+        },
+        returnCompute: {
+            value: function (instance) {
+                return function (event) {
+                    instance.compute(event);
+                };
+            }
+        },
+        compute: {
+            value: function (event) {
+                var count = event.inputBuffer.getChannelData(0).length,
+                    channels = event.inputBuffer.numberOfChannels,
+                    current, chan, rms, i;
+                chan = rms = i = 0;
+                if (channels > 1) { //need to mixdown
+                    for(i = 0; i < count; ++i) {
+                        for(; chan < channels; ++chan) {
+                            current = event.inputBuffer.getChannelData(chan)[i];
+                            rms += (current * current) / channels;
+                        }
+                    }
+                } else {
+                    for(i = 0; i < count; ++i) {
+                        current = event.inputBuffer.getChannelData(0)[i];
+                        rms += (current * current);
+                    }
+                }
+                rms = Math.sqrt(rms);
+
+                if (this._envelope < rms) {
+                    this._envelope *= this._attackC;
+                    this._envelope += (1 - this._attackC) * rms;
+                } else {
+                    this._envelope *= this._releaseC;
+                    this._envelope += (1 - this._releaseC) * rms;
+                }
+                this._callback(this._target, this._envelope);
+            }
+        }
+    });
+    
+    // Low-frequency oscillation
+    Tuna.prototype.LFO = function (properties) {
+        //Instantiate AudioNode
+        this.output = userContext.createScriptProcessor(256, 1, 1);
+        this.activateNode = userContext.destination;
+
+        //Set Properties
+        this.frequency = properties.frequency || this.defaults.frequency.value;
+        this.offset = properties.offset || this.defaults.offset.value;
+        this.oscillation = properties.oscillation || this.defaults.oscillation.value;
+        this.phase = properties.phase || this.defaults.phase.value;
+        this.target = properties.target || {};
+        this.output.onaudioprocess = this.callback(properties.callback || function () {});
+        this.bypass = properties.bypass || false;
+    };
+    Tuna.prototype.LFO.prototype = Object.create(Super, {
+        name: {
+            value: "LFO"
+        },
+        bufferSize: {
+            value: 256
+        },
+        sampleRate: {
+            value: 44100
+        },
+        defaults: {
+            value: {
+                frequency: {
+                    value: 1,
+                    min: 0,
+                    max: 20,
+                    automatable: false,
+                },
+                offset: {
+                    value: 0.85,
+                    min: 0,
+                    max: 22049,
+                    automatable: false,
+                },
+                oscillation: {
+                    value: 0.3,
+                    min: -22050,
+                    max: 22050,
+                    automatable: false,
+                },
+                phase: {
+                    value: 0,
+                    min: 0,
+                    max: 2 * Math.PI,
+                    automatable: false,
+                }
+            }
+        },
+        frequency: {
+            get: function () {
+                return this._frequency;
+            },
+            set: function (value) {
+                this._frequency = value;
+                this._phaseInc = 2 * Math.PI * this._frequency * this.bufferSize / this.sampleRate;
+            }
+        },
+        offset: {
+            get: function () {
+                return this._offset;
+            },
+            set: function (value) {
+                this._offset = value;
+            }
+        },
+        oscillation: {
+            get: function () {
+                return this._oscillation;
+            },
+            set: function (value) {
+                this._oscillation = value;
+            }
+        },
+        phase: {
+            get: function () {
+                return this._phase;
+            },
+            set: function (value) {
+                this._phase = value;
+            }
+        },
+        target: {
+            get: function () {
+                return this._target;
+            },
+            set: function (value) {
+                this._target = value;
+            }
+        },
+        activate: {
+            value: function (doActivate) {
+                if (!doActivate) {
+                    this.output.disconnect(userContext.destination);
+                } else {
+                    this.output.connect(userContext.destination);
+                }
+            }
+        },
+        callback: {
+            value: function (callback) {
+                var that = this;
+                return function () {
+                    that._phase += that._phaseInc;
+                    if (that._phase > 2 * Math.PI) {
+                        that._phase = 0;
+                    }
+                    callback(that._target, that._offset + that._oscillation * Math.sin(that._phase));
+                };
+            }
+        }
+    });
+
+	/* Panner 
+	------------------------------------------------*/
+    Tuna.prototype.Panner = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+        this.input = userContext.createGain();
+        this.activateNode = userContext.createGain();
+        this.output = userContext.createGain();
+		this.panner = userContext.createPanner();
+
+        this.activateNode.connect(this.panner);
+		this.panner.connect(this.output);
+
+        this.bypass = properties.bypass || false;
+        this.x = properties.x || 0;
+        this.y = properties.y || 1;
+        this.z = properties.z || 1;
+        this.panningModel = properties.panningModel || 0;
+        this.distanceModel = properties.distanceModel || 0;
+    };
+
+	var PannerPosition = function(type) {
+		return {
+            enumerable: true,
+            get: function () {
+                return this["_" + type];
+            },
+            set: function (value) {
+                this["_" + type] = value;
+				this.panner.setPosition(this._x || 0, this._y || 0, this._z || 0);
+            }
+        }
+	};
+	
+	var PannerModel = function(type) {
+		return {
+            enumerable: true,
+            get: function () {
+                return this["_" + type];
+            },
+            set: function (value) {
+                this["_" + type] = value;
+				this.panner[type] = value;
+            }
+        }
+	};
+	
+	var Clamp = function(value, min, max, automatable) {
+		return {
+			value: value,
+			min: min,
+			max: max,
+			automatable: automatable
+		};
+	};
+	
+    Tuna.prototype.Panner.prototype = Object.create(Super, {
+        name: {
+            value: "Panner"
+        },
+        defaults: {
+            writable:true,
+            value: {
+                x: Clamp(0, -20, 20, false),
+                y: Clamp(0, -20, 20, false),
+                z: Clamp(0, -20, 20, false),
+                distanceModel: Clamp(0, 0, 2, false),
+                panningModel: Clamp(0, 0, 2, false)
+            }
+        },
+        x: PannerPosition("x"),
+        y: PannerPosition("y"),
+        z: PannerPosition("z"),
+        panningModel: PannerModel("panningModel"),
+        distanceModel: PannerModel("distanceModel")
+    });
+
+	/* Volume 
+	------------------------------------------------*/
+    Tuna.prototype.Volume = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+
+        this.input = userContext.createGain();
+        this.activateNode = userContext.createGain();
+        this.output = userContext.createGain();
+
+        this.activateNode.connect(this.output);
+
+        this.bypass = properties.bypass || false;
+        this.amount = properties.amount || this.defaults.amount.value;
+    };
+
+    Tuna.prototype.Volume.prototype = Object.create(Super, {
+        name: {
+            value: "Volume"
+        },
+        defaults: {
+            writable:true,
+            value: {
+                amount: Clamp(0, 0, 2, false)
+            }
+        },
+        amount: {
+            enumerable: true,
+            get: function () {
+                return this._volume;
+            },
+            set: function (value) {
+                this._volume = value;
+                this.activateNode.gain.value = value;
+            }
+        }
+    });
+
+	/* Frequency 
+	------------------------------------------------*/
+    Tuna.prototype.Frequency = function (properties) {
+        if (!properties) {
+            properties = this.getDefaults();
+        }
+
+		this.trebleFilter = userContext.createBiquadFilter();
+		this.trebleFilter.type = this.trebleFilter.HIGHSHELF;
+		this.trebleFilter.frequency.value = 8000; // 1k+
+		this.trebleFilter.Q.value = 0;
+		this.midtoneFilter = userContext.createBiquadFilter();
+		this.midtoneFilter.type = this.midtoneFilter.PEAKING;
+		this.midtoneFilter.frequency.value = 1000; // 200-1k
+		this.midtoneFilter.Q.value = 0;
+		this.bassFilter = userContext.createBiquadFilter();
+		this.bassFilter.type = this.bassFilter.LOWSHELF;
+		this.bassFilter.frequency.value = 200; // 60-200k
+		this.bassFilter.Q.value = 0;
+		
+        this.input = userContext.createGain();
+        this.activateNode = userContext.createGain();
+        this.output = userContext.createGain();
+
+		this.activateNode.connect(this.bassFilter);
+		this.bassFilter.connect(this.midtoneFilter);
+		this.midtoneFilter.connect(this.trebleFilter);
+        this.trebleFilter.connect(this.output);
+
+        this.bypass = properties.bypass || false;
+        this.volume = properties.volume || false;
+        this.treble = properties.treble || false;
+        this.midtone = properties.midtone || false;
+        this.bass = properties.bass || false;
+    };
+
+    var GainValue = function(type, nodeId) {
+    	return {
+            enumerable: true,
+            get: function () {
+                return this["_" + type];
+            },
+            set: function (value) {
+                this["_" + type] = value;
+                this[nodeId || type + "Filter"].gain.value = value;
+            }
+        };
+    };
+
+    Tuna.prototype.Frequency.prototype = Object.create(Super, {
+        name: {
+            value: "Frequency"
+        },
+        defaults: {
+            writable:true,
+            value: {
+            	volume: Clamp(1, 0, 2, false),
+                treble: Clamp(0, -20, 20, false),
+                midtone: Clamp(0, -20, 20, false),
+                bass: Clamp(0, -20, 20, false)
+            }
+        },
+        volume: GainValue("volume", "activateNode"),
+        treble: GainValue("treble"),
+        midtone: GainValue("midtone"),
+        bass: GainValue("bass")
+    });
+
+    if (typeof define === "function") {
+        define("Tuna", [], function () {
+            return Tuna;
+        });
+    } else {
+        window.Tuna = Tuna;
+    }
+})(this);
\ No newline at end of file
diff --git a/js/color/spaceW3.js b/js/color/spaceW3.js
index 46da7f2..409becc 100644
--- a/js/color/spaceW3.js
+++ b/js/color/spaceW3.js
@@ -1,23 +1,23 @@
 /* 
-	----------------------------------------------------
+	----------------------------------------------------------
 	Color Space : 1.2 : 2012.11.06
-	----------------------------------------------------
+	----------------------------------------------------------
 	https://github.com/mudcube/Color.Space.js
-	----------------------------------------------------
+	----------------------------------------------------------
 	RGBA <-> HSLA  <-> W3
 	RGBA <-> HSVA
 	RGBA <-> CMY   <-> CMYK
 	RGBA <-> HEX24 <-> W3
 	RGBA <-> HEX32
 	RGBA <-> W3
-	----------------------------------------------------
+	----------------------------------------------------------
 	Examples
-	----------------------------------------------------
+	----------------------------------------------------------
 	Color.Space(0x99ff0000, "HEX32>RGBA>HSLA>W3"); // outputs "hsla(60,100%,17%,0.6)"
 	Color.Space(0xFF0000, "HEX24>RGB>HSL"); // convert hex24 to HSL object.
-	----------------------------------------------------
+	----------------------------------------------------------
 	W3 values
-	----------------------------------------------------
+	----------------------------------------------------------
 	rgb(255,0,0)
 	rgba(255,0,0,1)
 	rgb(100%,0%,0%)
@@ -25,6 +25,7 @@
 	hsl(120, 100%, 50%)
 	hsla(120, 100%, 50%, 1)
 	#000000
+	----------------------------------------------------------
 */
 
 if (typeof(Color) === "undefined") var Color = {};
diff --git a/js/midi/audioDetect.js b/js/midi/audioDetect.js
index a5dd465..6cc4b17 100644
--- a/js/midi/audioDetect.js
+++ b/js/midi/audioDetect.js
@@ -1,69 +1,98 @@
 /*
-	-------------------------------------
-	MIDI.audioDetect : 0.3
-	-------------------------------------
+	----------------------------------------------------------
+	MIDI.audioDetect : 0.3.2 : 2015-01-15
+	----------------------------------------------------------
 	https://github.com/mudcube/MIDI.js
-	-------------------------------------
+	----------------------------------------------------------
 	Probably, Maybe, No... Absolutely!
-	-------------------------------------
 	Test to see what types of <audio> MIME types are playable by the browser.
-	-------------------------------------
+	----------------------------------------------------------
 */
 
-if (typeof(MIDI) === "undefined") var MIDI = {};
+if (typeof MIDI === 'undefined') MIDI = {};
 
-(function() { "use strict";
+(function(root) { 'use strict';
 
-var supports = {};	
-var pending = 0;
-var canPlayThrough = function (src) {
-	pending ++;
-	var audio = new Audio();
-	var mime = src.split(";")[0];
-	audio.id = "audio";
-	audio.setAttribute("preload", "auto");
-	audio.setAttribute("audiobuffer", true);
-	audio.addEventListener("error", function() {
-		supports[mime] = false;
-		pending --;
-	}, false);
-	audio.addEventListener("canplaythrough", function() {
-		supports[mime] = true;
-		pending --;
-	}, false);
-	audio.src = "data:" + src;
-	document.body.appendChild(audio);
-};
+	var supports = {}; // object of supported file types
+	var pending = 0; // pending file types to process
+	var canPlayThrough = function (src) { // check whether format plays through
+		pending ++;
+		var audio = new Audio();
+		var mime = src.split(';')[0];
+		audio.id = 'audio';
+		audio.setAttribute('preload', 'auto');
+		audio.setAttribute('audiobuffer', true);
+		audio.addEventListener('error', function() {
+			supports[mime] = false;
+			pending --;
+		}, false);
+		audio.addEventListener('canplaythrough', function() {
+			supports[mime] = true;
+			pending --;
+		}, false);
+		audio.src = 'data:' + src;
+		document.body.appendChild(audio);
+	};
 
-MIDI.audioDetect = function(callback) {
-	// check whether <audio> tag is supported
-	if (typeof(Audio) === "undefined") return callback({});
-	// check whether canPlayType is supported
-	var audio = new Audio();
-	if (typeof(audio.canPlayType) === "undefined") return callback(supports);
-	// see what we can learn from the browser
-	var vorbis = audio.canPlayType('audio/ogg; codecs="vorbis"');
-	vorbis = (vorbis === "probably" || vorbis === "maybe");
-	var mpeg = audio.canPlayType('audio/mpeg');
-	mpeg = (mpeg === "probably" || mpeg === "maybe");
-	// maybe nothing is supported
-	if (!vorbis && !mpeg) {
-		callback(supports);
-		return;
-	}
-	// or maybe something is supported
-	if (vorbis) canPlayThrough("audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA=");
-	if (mpeg) canPlayThrough("audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq");
-	// lets find out!
-	var time = (new Date()).getTime(); 
-	var interval = window.setInterval(function() {
-		var now = (new Date()).getTime();
-		var maxExecution = now - time > 5000;
-		if (!pending || maxExecution) {
-			window.clearInterval(interval);
+	root.audioDetect = function(callback) {
+		/// detect jazz-midi plugin
+		if (navigator.requestMIDIAccess) {
+			var isNative = Function.prototype.toString.call(navigator.requestMIDIAccess).indexOf('[native code]');
+			if (isNative) { // has native midiapi support
+				supports['webmidi'] = true;
+			} else { // check for jazz plugin midiapi support
+				for (var n = 0; navigator.plugins.length > n; n ++) {
+					var plugin = navigator.plugins[n];
+					if (plugin.name.indexOf('Jazz-Plugin') >= 0) {
+						supports['webmidi'] = true;
+					}
+				}
+			}
+		}
+
+		/// check whether <audio> tag is supported
+		if (typeof(Audio) === 'undefined') {
+			return callback({});
+		} else {
+			supports['audiotag'] = true;
+		}
+
+		/// check for webaudio api support
+		if (window.AudioContext || window.webkitAudioContext) {
+			supports['webaudio'] = true;
+		}
+
+		/// check whether canPlayType is supported
+		var audio = new Audio();
+		if (typeof(audio.canPlayType) === 'undefined') {
+			return callback(supports);
+		}
+
+		/// see what we can learn from the browser
+		var vorbis = audio.canPlayType('audio/ogg; codecs="vorbis"');
+		vorbis = (vorbis === 'probably' || vorbis === 'maybe');
+		var mpeg = audio.canPlayType('audio/mpeg');
+		mpeg = (mpeg === 'probably' || mpeg === 'maybe');
+		// maybe nothing is supported
+		if (!vorbis && !mpeg) {
 			callback(supports);
+			return;
 		}
-	}, 1);
-};
 
-})();
\ No newline at end of file
+		/// or maybe something is supported
+		if (vorbis) canPlayThrough('audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA=');
+		if (mpeg) canPlayThrough('audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq');
+
+		/// lets find out!
+		var time = (new Date()).getTime(); 
+		var interval = window.setInterval(function() {
+			var now = (new Date()).getTime();
+			var maxExecution = now - time > 5000;
+			if (!pending || maxExecution) {
+				window.clearInterval(interval);
+				callback(supports);
+			}
+		}, 1);
+	};
+
+})(MIDI);
\ No newline at end of file
diff --git a/js/midi/gm.js b/js/midi/gm.js
new file mode 100644
index 0000000..2e1278c
--- /dev/null
+++ b/js/midi/gm.js
@@ -0,0 +1,161 @@
+/*
+	----------------------------------------------------------
+	GeneralMIDI
+	----------------------------------------------------------
+*/
+
+(function(root) { 'use strict';
+
+	root.GM = (function(arr) {
+		var clean = function(name) {
+			return name.replace(/[^a-z0-9 ]/gi, '').replace(/[ ]/g, '_').toLowerCase();
+		};
+		var res = {
+			byName: { },
+			byId: { },
+			byCategory: { }
+		};
+		for (var key in arr) {
+			var list = arr[key];
+			for (var n = 0, length = list.length; n < length; n++) {
+				var instrument = list[n];
+				if (!instrument) continue;
+				var num = parseInt(instrument.substr(0, instrument.indexOf(' ')), 10);
+				instrument = instrument.replace(num + ' ', '');
+				res.byId[--num] = 
+				res.byName[clean(instrument)] = 
+				res.byCategory[clean(key)] = {
+					id: clean(instrument),
+					instrument: instrument,
+					number: num,
+					category: key
+				};
+			}
+		}
+		return res;
+	})({
+		'Piano': ['1 Acoustic Grand Piano', '2 Bright Acoustic Piano', '3 Electric Grand Piano', '4 Honky-tonk Piano', '5 Electric Piano 1', '6 Electric Piano 2', '7 Harpsichord', '8 Clavinet'],
+		'Chromatic Percussion': ['9 Celesta', '10 Glockenspiel', '11 Music Box', '12 Vibraphone', '13 Marimba', '14 Xylophone', '15 Tubular Bells', '16 Dulcimer'],
+		'Organ': ['17 Drawbar Organ', '18 Percussive Organ', '19 Rock Organ', '20 Church Organ', '21 Reed Organ', '22 Accordion', '23 Harmonica', '24 Tango Accordion'],
+		'Guitar': ['25 Acoustic Guitar (nylon)', '26 Acoustic Guitar (steel)', '27 Electric Guitar (jazz)', '28 Electric Guitar (clean)', '29 Electric Guitar (muted)', '30 Overdriven Guitar', '31 Distortion Guitar', '32 Guitar Harmonics'],
+		'Bass': ['33 Acoustic Bass', '34 Electric Bass (finger)', '35 Electric Bass (pick)', '36 Fretless Bass', '37 Slap Bass 1', '38 Slap Bass 2', '39 Synth Bass 1', '40 Synth Bass 2'],
+		'Strings': ['41 Violin', '42 Viola', '43 Cello', '44 Contrabass', '45 Tremolo Strings', '46 Pizzicato Strings', '47 Orchestral Harp', '48 Timpani'],
+		'Ensemble': ['49 String Ensemble 1', '50 String Ensemble 2', '51 Synth Strings 1', '52 Synth Strings 2', '53 Choir Aahs', '54 Voice Oohs', '55 Synth Choir', '56 Orchestra Hit'],
+		'Brass': ['57 Trumpet', '58 Trombone', '59 Tuba', '60 Muted Trumpet', '61 French Horn', '62 Brass Section', '63 Synth Brass 1', '64 Synth Brass 2'],
+		'Reed': ['65 Soprano Sax', '66 Alto Sax', '67 Tenor Sax', '68 Baritone Sax', '69 Oboe', '70 English Horn', '71 Bassoon', '72 Clarinet'],
+		'Pipe': ['73 Piccolo', '74 Flute', '75 Recorder', '76 Pan Flute', '77 Blown Bottle', '78 Shakuhachi', '79 Whistle', '80 Ocarina'],
+		'Synth Lead': ['81 Lead 1 (square)', '82 Lead 2 (sawtooth)', '83 Lead 3 (calliope)', '84 Lead 4 (chiff)', '85 Lead 5 (charang)', '86 Lead 6 (voice)', '87 Lead 7 (fifths)', '88 Lead 8 (bass + lead)'],
+		'Synth Pad': ['89 Pad 1 (new age)', '90 Pad 2 (warm)', '91 Pad 3 (polysynth)', '92 Pad 4 (choir)', '93 Pad 5 (bowed)', '94 Pad 6 (metallic)', '95 Pad 7 (halo)', '96 Pad 8 (sweep)'],
+		'Synth Effects': ['97 FX 1 (rain)', '98 FX 2 (soundtrack)', '99 FX 3 (crystal)', '100 FX 4 (atmosphere)', '101 FX 5 (brightness)', '102 FX 6 (goblins)', '103 FX 7 (echoes)', '104 FX 8 (sci-fi)'],
+		'Ethnic': ['105 Sitar', '106 Banjo', '107 Shamisen', '108 Koto', '109 Kalimba', '110 Bagpipe', '111 Fiddle', '112 Shanai'],
+		'Percussive': ['113 Tinkle Bell', '114 Agogo', '115 Steel Drums', '116 Woodblock', '117 Taiko Drum', '118 Melodic Tom', '119 Synth Drum'],
+		'Sound effects': ['120 Reverse Cymbal', '121 Guitar Fret Noise', '122 Breath Noise', '123 Seashore', '124 Bird Tweet', '125 Telephone Ring', '126 Helicopter', '127 Applause', '128 Gunshot']
+	});
+
+	/* get/setInstrument
+	--------------------------------------------------- */
+	root.getInstrument = function(channelId) {
+		var channel = root.channels[channelId];
+		return channel && channel.instrument;
+	};
+
+	root.setInstrument = function(channelId, program, delay) {
+		var channel = root.channels[channelId];
+		if (delay) {
+			return setTimeout(function() {
+				channel.instrument = program;
+			}, delay);
+		} else {
+			channel.instrument = program;
+		}
+	};
+
+	/* get/setMono
+	--------------------------------------------------- */
+	root.getMono = function(channelId) {
+		var channel = root.channels[channelId];
+		return channel && channel.mono;
+	};
+
+	root.setMono = function(channelId, truthy, delay) {
+		var channel = root.channels[channelId];
+		if (delay) {
+			return setTimeout(function() {
+				channel.mono = truthy;
+			}, delay);
+		} else {
+			channel.mono = truthy;
+		}
+	};
+
+	/* get/setOmni
+	--------------------------------------------------- */
+	root.getOmni = function(channelId) {
+		var channel = root.channels[channelId];
+		return channel && channel.omni;
+	};
+
+	root.setOmni = function(channelId, truthy) {
+		var channel = root.channels[channelId];
+		if (delay) {
+			return setTimeout(function() {
+				channel.omni = truthy;	
+			}, delay);
+		} else {
+			channel.omni = truthy;
+		}
+	};
+
+	/* get/setSolo
+	--------------------------------------------------- */
+	root.getSolo = function(channelId) {
+		var channel = root.channels[channelId];
+		return channel && channel.solo;
+	};
+
+	root.setSolo = function(channelId, truthy) {
+		var channel = root.channels[channelId];
+		if (delay) {
+			return setTimeout(function() {
+				channel.solo = truthy;	
+			}, delay);
+		} else {
+			channel.solo = truthy;
+		}
+	};
+
+	/* channels
+	--------------------------------------------------- */
+	root.channels = (function() { // 0 - 15 channels
+		var channels = {};
+		for (var i = 0; i < 16; i++) {
+			channels[i] = { // default values
+				instrument: i,
+				pitchBend: 0,
+				mute: false,
+				mono: false,
+				omni: false,
+				solo: false
+			};
+		}
+		return channels;
+	})();
+
+	/* note conversions
+	--------------------------------------------------- */
+	root.keyToNote = {}; // C8  == 108
+	root.noteToKey = {}; // 108 ==  C8
+
+	(function() {
+		var A0 = 0x15; // first note
+		var C8 = 0x6C; // last note
+		var number2key = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];
+		for (var n = A0; n <= C8; n++) {
+			var octave = (n - 12) / 12 >> 0;
+			var name = number2key[n % 12] + octave;
+			root.keyToNote[name] = n;
+			root.noteToKey[n] = name;
+		}
+	})();
+
+})(MIDI);
\ No newline at end of file
diff --git a/js/midi/loadPlugin.js b/js/midi/loadPlugin.js
deleted file mode 100644
index dad5cbd..0000000
--- a/js/midi/loadPlugin.js
+++ /dev/null
@@ -1,179 +0,0 @@
-/*
-	-----------------------------------------------------------
-	MIDI.loadPlugin : 0.1.2 : 01/22/2014
-	-----------------------------------------------------------
-	https://github.com/mudcube/MIDI.js
-	-----------------------------------------------------------
-	MIDI.loadPlugin({
-		targetFormat: "mp3", // optionally can force to use MP3 (for instance on mobile networks)
-		instrument: "acoustic_grand_piano", // or 1 (default)
-		instruments: [ "acoustic_grand_piano", "acoustic_guitar_nylon" ], // or multiple instruments
-		callback: function() { }
-	});
-*/
-
-if (typeof (MIDI) === "undefined") var MIDI = {};
-if (typeof (MIDI.Soundfont) === "undefined") MIDI.Soundfont = {};
-
-(function() { "use strict";
-
-var USE_JAZZMIDI = false; // Turn on to support JazzMIDI Plugin
-
-MIDI.loadPlugin = function(conf) {
-	if (typeof(conf) === "function") conf = {
-		callback: conf
-	};
-	/// Get the instrument name.
-	var instruments = conf.instruments || conf.instrument || "acoustic_grand_piano";
-	if (typeof(instruments) !== "object") instruments = [ instruments ];
-	///
-	for (var n = 0; n < instruments.length; n ++) {
-		var instrument = instruments[n];
-		if (typeof(instrument) === "number") {
-			instruments[n] = MIDI.GeneralMIDI.byId[instrument];
-		}
-	};
-	///
-	MIDI.soundfontUrl = conf.soundfontUrl || MIDI.soundfontUrl || "./soundfont/";
-	/// Detect the best type of audio to use.
-	MIDI.audioDetect(function(types) {
-		var api = "";
-		// use the most appropriate plugin if not specified
-		if (apis[conf.api]) {
-			api = conf.api;
-		} else if (apis[window.location.hash.substr(1)]) {
-			api = window.location.hash.substr(1);
-		} else if (USE_JAZZMIDI && navigator.requestMIDIAccess) {
-			api = "webmidi";
-		} else if (window.webkitAudioContext || window.AudioContext) { // Chrome
-			api = "webaudio";
-		} else if (window.Audio) { // Firefox
-			api = "audiotag";
-		} else { // Internet Explorer
-			api = "flash";
-		}
-		///
-		if (!connect[api]) return;
-		// use audio/ogg when supported
-		if (conf.targetFormat) {
-			var filetype = conf.targetFormat;
-		} else { // use best quality
-			var filetype = types["audio/ogg"] ? "ogg" : "mp3";
-		}
-		// load the specified plugin
-		MIDI.lang = api;
-		MIDI.supports = types;
-		connect[api](filetype, instruments, conf);
-	});
-};
-
-///
-
-var connect = {};
-
-connect.webmidi = function(filetype, instruments, conf) {
-	if (MIDI.loader) MIDI.loader.message("Web MIDI API...");
-	MIDI.WebMIDI.connect(conf);
-};
-
-connect.flash = function(filetype, instruments, conf) {
-	// fairly quick, but requires loading of individual MP3s (more http requests).
-	if (MIDI.loader) MIDI.loader.message("Flash API...");
-	DOMLoader.script.add({
-		src: conf.soundManagerUrl || "./inc/SoundManager2/script/soundmanager2.js",
-		verify: "SoundManager",
-		callback: function () {
-			MIDI.Flash.connect(instruments, conf);
-		}
-	});
-};
-
-connect.audiotag = function(filetype, instruments, conf) {
-	if (MIDI.loader) MIDI.loader.message("HTML5 Audio API...");
-	// works ok, kinda like a drunken tuna fish, across the board.
-	var queue = createQueue({
-		items: instruments,
-		getNext: function(instrumentId) {
-			DOMLoader.sendRequest({
-				url: MIDI.soundfontUrl + instrumentId + "-" + filetype + ".js",
-				onprogress: getPercent,
-				onload: function (response) {
-					addSoundfont(response.responseText);
-					if (MIDI.loader) MIDI.loader.update(null, "Downloading", 100);
-					queue.getNext();
-				}
-			});
-		},
-		onComplete: function() {
-			MIDI.AudioTag.connect(conf);
-		}
-	});
-};
-
-connect.webaudio = function(filetype, instruments, conf) {
-	if (MIDI.loader) MIDI.loader.message("Web Audio API...");
-	// works awesome! safari, chrome and firefox support.
-	var queue = createQueue({
-		items: instruments,
-		getNext: function(instrumentId) {
-			DOMLoader.sendRequest({
-				url: MIDI.soundfontUrl + instrumentId + "-" + filetype + ".js",
-				onprogress: getPercent,
-				onload: function(response) {
-					addSoundfont(response.responseText);
-					if (MIDI.loader) MIDI.loader.update(null, "Downloading...", 100);
-					queue.getNext();
-				}
-			});
-		},
-		onComplete: function() {
-			MIDI.WebAudio.connect(conf);
-		}
-	});
-};
-
-/// Helpers
-
-var apis = {
-	"webmidi": true, 
-	"webaudio": true, 
-	"audiotag": true, 
-	"flash": true 
-};
-
-var addSoundfont = function(text) {
-	var script = document.createElement("script");
-	script.language = "javascript";
-	script.type = "text/javascript";
-	script.text = text;
-	document.body.appendChild(script);
-};
-
-var getPercent = function(event) {
-	if (!this.totalSize) {
-		if (this.getResponseHeader("Content-Length-Raw")) {
-			this.totalSize = parseInt(this.getResponseHeader("Content-Length-Raw"));
-		} else {
-			this.totalSize = event.total;
-		}
-	}
-	///
-	var percent = this.totalSize ? Math.round(event.loaded / this.totalSize * 100) : "";
-	if (MIDI.loader) MIDI.loader.update(null, "Downloading...", percent);
-};
-
-var createQueue = function(conf) {
-	var self = {};
-	self.queue = [];
-	for (var key in conf.items) {
-		self.queue.push(conf.items[key]);
-	}
-	self.getNext = function() {
-		if (!self.queue.length) return conf.onComplete();
-		conf.getNext(self.queue.shift());
-	};
-	setTimeout(self.getNext, 1);
-	return self;
-};
-
-})();
\ No newline at end of file
diff --git a/js/midi/loader.js b/js/midi/loader.js
new file mode 100644
index 0000000..2fea068
--- /dev/null
+++ b/js/midi/loader.js
@@ -0,0 +1,210 @@
+/*
+	----------------------------------------------------------
+	MIDI.Plugin : 0.3.4 : 2015-01-15
+	----------------------------------------------------------
+	https://github.com/mudcube/MIDI.js
+	----------------------------------------------------------
+	Inspired by javax.sound.midi (albeit a super simple version): 
+		http://docs.oracle.com/javase/6/docs/api/javax/sound/midi/package-summary.html
+	----------------------------------------------------------
+	Technologies
+	----------------------------------------------------------
+		Web MIDI API - no native support yet (jazzplugin)
+		Web Audio API - firefox 25+, chrome 10+, safari 6+, opera 15+
+		HTML5 Audio Tag - ie 9+, firefox 3.5+, chrome 4+, safari 4+, opera 9.5+, ios 4+, android 2.3+
+	----------------------------------------------------------
+*/
+
+if (typeof MIDI === 'undefined') MIDI = {};
+
+MIDI.Soundfont = MIDI.Soundfont || {};
+MIDI.Player = MIDI.Player || {};
+
+(function(root) { 'use strict';
+
+	root.DEBUG = true;
+	root.USE_XHR = true;
+	root.soundfontUrl = './soundfont/';
+
+	/*
+		MIDI.loadPlugin({
+			callback: function() { },
+			onprogress: function(state, percent) { },
+			targetFormat: 'mp3', // optionally can force to use MP3 (for instance on mobile networks)
+			instrument: 'acoustic_grand_piano', // or 1 (default)
+			instruments: [ 'acoustic_grand_piano', 'acoustic_guitar_nylon' ] // or multiple instruments
+		});
+	*/
+
+	root.loadPlugin = function(opts) {
+		if (typeof opts === 'function') {
+			opts = {callback: opts};
+		}
+
+		root.soundfontUrl = opts.soundfontUrl || root.soundfontUrl;
+
+		/// Detect the best type of audio to use
+		root.audioDetect(function(supports) {
+			var hash = window.location.hash;
+			var api = '';
+
+			/// use the most appropriate plugin if not specified
+			if (supports[opts.api]) {
+				api = opts.api;
+			} else if (supports[hash.substr(1)]) {
+				api = hash.substr(1);
+			} else if (supports.webmidi) {
+				api = 'webmidi';
+			} else if (window.AudioContext) { // Chrome
+				api = 'webaudio';
+			} else if (window.Audio) { // Firefox
+				api = 'audiotag';
+			}
+
+			if (connect[api]) {
+				/// use audio/ogg when supported
+				if (opts.targetFormat) {
+					var audioFormat = opts.targetFormat;
+				} else { // use best quality
+					var audioFormat = supports['audio/ogg'] ? 'ogg' : 'mp3';
+				}
+
+				/// load the specified plugin
+				root.__api = api;
+				root.__audioFormat = audioFormat;
+				root.supports = supports;
+				root.loadResource(opts);
+			}
+		});
+	};
+
+	/*
+		root.loadResource({
+			callback: function() { },
+			onprogress: function(state, percent) { },
+			instrument: 'banjo'
+		})
+	*/
+
+	root.loadResource = function(opts) {
+		var instruments = opts.instruments || opts.instrument || 'acoustic_grand_piano';
+		///
+		if (typeof instruments !== 'object') {
+			if (instruments || instruments === 0) {
+				instruments = [instruments];
+			} else {
+				instruments = [];
+			}
+		}
+		/// convert numeric ids into strings
+		for (var i = 0; i < instruments.length; i ++) {
+			var instrument = instruments[i];
+			if (instrument === +instrument) { // is numeric
+				if (root.GM.byId[instrument]) {
+					instruments[i] = root.GM.byId[instrument].id;
+				}
+			}
+		}
+		///
+		opts.format = root.__audioFormat;
+		opts.instruments = instruments;
+		///
+		connect[root.__api](opts);
+	};
+
+	var connect = {
+		webmidi: function(opts) {
+			// cant wait for this to be standardized!
+			root.WebMIDI.connect(opts);
+		},
+		audiotag: function(opts) {
+			// works ok, kinda like a drunken tuna fish, across the board
+			// http://caniuse.com/audio
+			requestQueue(opts, 'AudioTag');
+		},
+		webaudio: function(opts) {
+			// works awesome! safari, chrome and firefox support
+			// http://caniuse.com/web-audio
+			requestQueue(opts, 'WebAudio');
+		}
+	};
+
+	var requestQueue = function(opts, context) {
+		var audioFormat = opts.format;
+		var instruments = opts.instruments;
+		var onprogress = opts.onprogress;
+		var onerror = opts.onerror;
+		var onload = opts.callback;
+		///
+		var length = instruments.length;
+		var pending = length;
+		var waitForEnd = function() {
+			if (!--pending) {
+				onprogress && onprogress('load', 1.0);
+				root[context].connect(opts);
+			}
+		};
+		///
+		for (var i = 0; i < length; i ++) {
+			var instrumentId = instruments[i];
+			if (MIDI.Soundfont[instrumentId]) { // already loaded
+				waitForEnd();
+			} else { // needs to be requested
+				sendRequest(instruments[i], audioFormat, function(fpoint) {
+					onprogress && onprogress('load', fpoint + (pending - 1) / length, instrumentId);
+				}, function() {
+					waitForEnd();
+				}, onerror);
+			}
+		};
+	};
+
+	var sendRequest = function(instrumentId, audioFormat, onprogress, onload, onerror) {
+		var soundfontPath = root.soundfontUrl + instrumentId + '-' + audioFormat + '.js';
+		if (root.USE_XHR) {
+			root.util.request({
+				url: soundfontPath,
+				onerror: onerror,
+				onprogress: function(event) {
+					if (!this.totalBytes) { // requires server to send Content-Length-Raw - actual bytes non-gzipped
+						var rawLength = this.getResponseHeader('Content-Length-Raw');
+						if (rawLength) {
+							this.totalBytes = parseInt(rawLength);
+						} else {
+							this.totalBytes = event.total;
+						}
+					}
+					///
+					if (this.totalBytes) {
+						onprogress(event.loaded / this.totalBytes);
+					}
+				},
+				onload: function(response) {
+					var script = document.createElement('script');
+					script.language = 'javascript';
+					script.type = 'text/javascript';
+					script.text = response.responseText;
+					document.body.appendChild(script);
+					///
+					onload();
+				}
+			});
+		} else {
+			dom.loadScript.add({
+				url: soundfontPath,
+				verify: 'MIDI.Soundfont["' + instrumentId + '"]',
+				onerror: onerror,
+				callback: function() {
+					onload();
+				}
+			});
+		}
+	};
+
+	root.setDefaultPlugin = function(midi) {
+		for (var key in midi) {
+			root[key] = midi[key];
+		}
+	};
+
+})(MIDI);
\ No newline at end of file
diff --git a/js/midi/player.js b/js/midi/player.js
index bfa4e3b..c7a32b3 100644
--- a/js/midi/player.js
+++ b/js/midi/player.js
@@ -1,84 +1,83 @@
 /*
-	-------------------------------------
-	MIDI.Player : 0.3
-	-------------------------------------
+	----------------------------------------------------------
+	MIDI.Player : 0.3.1 : 2015-01-15
+	----------------------------------------------------------
 	https://github.com/mudcube/MIDI.js
-	-------------------------------------
-	#jasmid
-	-------------------------------------
+	----------------------------------------------------------
 */
 
-if (typeof (MIDI) === "undefined") var MIDI = {};
-if (typeof (MIDI.Player) === "undefined") MIDI.Player = {};
+if (typeof MIDI === 'undefined') MIDI = {};
+if (typeof MIDI.Player === 'undefined') MIDI.Player = {};
 
-(function() { "use strict";
+(function() { 'use strict';
 
-var root = MIDI.Player;
-root.callback = undefined; // your custom callback goes here!
-root.currentTime = 0;
-root.endTime = 0; 
-root.restart = 0; 
-root.playing = false;
-root.timeWarp = 1;
+var midi = MIDI.Player;
+midi.callback = undefined; // your custom callback goes here!
+midi.currentTime = 0;
+midi.endTime = 0; 
+midi.restart = 0; 
+midi.playing = false;
+midi.timeWarp = 1;
+midi.startDelay = 0;
+midi.BPM = 120;
 
-//
-root.start =
-root.resume = function () {
-	if (root.currentTime < -1) root.currentTime = -1;
-	startAudio(root.currentTime);
+midi.start =
+midi.resume = function (callback) {
+    if (midi.currentTime < -1) midi.currentTime = -1;
+    startAudio(midi.currentTime, null, callback);
 };
 
-root.pause = function () {
-	var tmp = root.restart;
+midi.pause = function () {
+	var tmp = midi.restart;
 	stopAudio();
-	root.restart = tmp;
+	midi.restart = tmp;
 };
 
-root.stop = function () {
+midi.stop = function () {
 	stopAudio();
-	root.restart = 0;
-	root.currentTime = 0;
+	midi.restart = 0;
+	midi.currentTime = 0;
 };
 
-root.addListener = function(callback) {
+midi.addListener = function(callback) {
 	onMidiEvent = callback;
 };
 
-root.removeListener = function() {
+midi.removeListener = function() {
 	onMidiEvent = undefined;
 };
 
-root.clearAnimation = function() {
-	if (root.interval)  {
-		window.clearInterval(root.interval);
+midi.clearAnimation = function() {
+	if (midi.interval)  {
+		window.clearInterval(midi.interval);
 	}
 };
 
-root.setAnimation = function(config) {
-	var callback = (typeof(config) === "function") ? config : config.callback;
+midi.setAnimation = function(config) {
+	var callback = (typeof(config) === 'function') ? config : config.callback;
 	var interval = config.interval || 30;
 	var currentTime = 0;
 	var tOurTime = 0;
 	var tTheirTime = 0;
 	//
-	root.clearAnimation();
-	root.interval = window.setInterval(function () {
-		if (root.endTime === 0) return;
-		if (root.playing) {
-			currentTime = (tTheirTime === root.currentTime) ? tOurTime - (new Date).getTime() : 0;
-			if (root.currentTime === 0) {
+	midi.clearAnimation();
+	midi.interval = setInterval(function () {
+		if (midi.endTime === 0) return;
+		if (midi.playing) {
+			currentTime = (tTheirTime === midi.currentTime) ? tOurTime - (new Date).getTime() : 0;
+			if (midi.currentTime === 0) {
 				currentTime = 0;
 			} else {
-				currentTime = root.currentTime - currentTime;
+				currentTime = midi.currentTime - currentTime;
 			}
-			if (tTheirTime !== root.currentTime) {
+			if (tTheirTime !== midi.currentTime) {
 				tOurTime = (new Date).getTime();
-				tTheirTime = root.currentTime;
+				tTheirTime = midi.currentTime;
 			}
 		} else { // paused
-			currentTime = root.currentTime;
+			currentTime = midi.currentTime;
 		}
-		var endTime = root.endTime;
+		var endTime = midi.endTime;
 		var percent = currentTime / endTime;
 		var total = currentTime / 1000;
 		var minutes = total / 60;
@@ -96,43 +95,84 @@ root.setAnimation = function(config) {
 
 // helpers
 
-root.loadMidiFile = function() { // reads midi into javascript array of events
-	root.replayer = new Replayer(MidiFile(root.currentData), root.timeWarp);
-	root.data = root.replayer.getData();
-	root.endTime = getLength();
+midi.loadMidiFile = function(onsuccess, onprogress, onerror) { // reads midi into javascript array of events
+	try {
+		midi.replayer = new Replayer(MidiFile(midi.currentData), midi.timeWarp, null, midi.BPM);
+		midi.data = midi.replayer.getData();
+		midi.endTime = getLength();
+		///
+		MIDI.loadPlugin({
+	//		instruments: midi.getFileInstruments(),
+			callback: onsuccess,
+			onprogress: onprogress,
+			onerror: onerror
+		});
+	} catch(err) {
+		onerror && onerror(err);
+	}
 };
 
-root.loadFile = function (file, callback) {
-	root.stop();
-	if (file.indexOf("base64,") !== -1) {
-		var data = window.atob(file.split(",")[1]);
-		root.currentData = data;
-		root.loadMidiFile();
-		if (callback) callback(data);
+midi.loadFile = function (file, onsuccess, onprogress, onerror) {
+	midi.stop();
+	if (file.indexOf('base64,') !== -1) {
+		var data = window.atob(file.split(',')[1]);
+		midi.currentData = data;
+		midi.loadMidiFile(onsuccess, onprogress, onerror);
 		return;
 	}
 	///
 	var fetch = new XMLHttpRequest();
 	fetch.open('GET', file);
-	fetch.overrideMimeType("text/plain; charset=x-user-defined");
+	fetch.overrideMimeType('text/plain; charset=x-user-defined');
 	fetch.onreadystatechange = function () {
-		if (this.readyState === 4 && this.status === 200) {
-			var t = this.responseText || "";
-			var ff = [];
-			var mx = t.length;
-			var scc = String.fromCharCode;
-			for (var z = 0; z < mx; z++) {
-				ff[z] = scc(t.charCodeAt(z) & 255);
+		if (this.readyState === 4) {
+			if (this.status === 200) {
+				var t = this.responseText || '';
+				var ff = [];
+				var mx = t.length;
+				var scc = String.fromCharCode;
+				for (var z = 0; z < mx; z++) {
+					ff[z] = scc(t.charCodeAt(z) & 255);
+				}
+				var data = ff.join('');
+				midi.currentData = data;
+				midi.loadMidiFile(onsuccess, onprogress, onerror);
+			} else {
+				onerror && onerror('Unable to load MIDI file');
 			}
-			var data = ff.join("");
-			root.currentData = data;
-			root.loadMidiFile();
-			if (callback) callback(data);
 		}
 	};
 	fetch.send();
 };
 
+midi.getFileInstruments = function() {
+	var instruments = {};
+	var programs = {};
+	for (var n = 0; n < midi.data.length; n ++) {
+		var event = midi.data[n][0].event;
+		if (event.type !== 'channel') continue;
+		var channel = event.channel;
+		switch(event.subtype) {
+			case 'controller':
+//				console.log(event.channel, MIDI.defineControl[event.controllerType], event.value);
+				break;
+			case 'programChange':
+				programs[channel] = event.programNumber;
+				break;
+			case 'noteOn':
+				var program = programs[channel];
+				var gm = MIDI.GM.byId[isFinite(program) ? program : channel];
+				instruments[gm.id] = true;
+				break;
+		}
+	}
+	var ret = [];
+	for (var key in instruments) {
+		ret.push(key);
+	}
+	return ret;
+};
+
 // Playing the audio
 
 var eventQueue = []; // hold events to be triggered
@@ -140,13 +180,13 @@ var queuedTime; //
 var startTime = 0; // to measure time elapse
 var noteRegistrar = {}; // get event for requested note
 var onMidiEvent = undefined; // listener callback
-var scheduleTracking = function (channel, note, currentTime, offset, message, velocity) {
-	var interval = window.setTimeout(function () {
+var scheduleTracking = function (channel, note, currentTime, offset, message, velocity, time) {
+	return setTimeout(function () {
 		var data = {
 			channel: channel,
 			note: note,
 			now: currentTime,
-			end: root.endTime,
+			end: midi.endTime,
 			message: message,
 			velocity: velocity
 		};
@@ -159,25 +199,29 @@ var scheduleTracking = function (channel, note, currentTime, offset, message, ve
 		if (onMidiEvent) {
 			onMidiEvent(data);
 		}
-		root.currentTime = currentTime;
-		if (root.currentTime === queuedTime && queuedTime < root.endTime) { // grab next sequence
+		midi.currentTime = currentTime;
+		///
+		eventQueue.shift();
+		///
+		if (eventQueue.length < 1000) {
+			startAudio(queuedTime, true);
+		} else if (midi.currentTime === queuedTime && queuedTime < midi.endTime) { // grab next sequence
 			startAudio(queuedTime, true);
 		}
 	}, currentTime - offset);
-	return interval;
 };
 
 var getContext = function() {
-	if (MIDI.lang === 'WebAudioAPI') {
-		return MIDI.Player.ctx;
-	} else if (!root.ctx) {
-		root.ctx = { currentTime: 0 };
+	if (MIDI.api === 'webaudio') {
+		return MIDI.WebAudio.getContext();
+	} else {
+		midi.ctx = {currentTime: 0};
 	}
-	return root.ctx;
+	return midi.ctx;
 };
 
 var getLength = function() {
-	var data =  root.data;
+	var data =  midi.data;
 	var length = data.length;
 	var totalTime = 0.5;
 	for (var n = 0; n < length; n++) {
@@ -186,71 +230,120 @@ var getLength = function() {
 	return totalTime;
 };
 
-var startAudio = function (currentTime, fromCache) {
-	if (!root.replayer) return;
+var __now;
+var getNow = function() {
+    if (window.performance && window.performance.now) {
+        return window.performance.now();
+    } else {
+		return Date.now();
+	}
+};
+
+var startAudio = function (currentTime, fromCache, callback) {
+	if (!midi.replayer) {
+		return;
+	}
 	if (!fromCache) {
-		if (typeof (currentTime) === "undefined") currentTime = root.restart;
-		if (root.playing) stopAudio();
-		root.playing = true;
-		root.data = root.replayer.getData();
-		root.endTime = getLength();
+		if (typeof currentTime === 'undefined') {
+			currentTime = midi.restart;
+		}
+		///
+		midi.playing && stopAudio();
+		midi.playing = true;
+		midi.data = midi.replayer.getData();
+		midi.endTime = getLength();
 	}
+	///
 	var note;
 	var offset = 0;
 	var messages = 0;
-	var data = root.data;	
+	var data = midi.data;
 	var ctx = getContext();
 	var length = data.length;
 	//
 	queuedTime = 0.5;
+	///
+	var interval = eventQueue[0] && eventQueue[0].interval || 0;
+	var foffset = currentTime - midi.currentTime;
+	///
+	if (MIDI.api !== 'webaudio') { // set currentTime on ctx
+		var now = getNow();
+		__now = __now || now;
+		ctx.currentTime = (now - __now) / 1000;
+	}
+	///
 	startTime = ctx.currentTime;
-	//
+	///
 	for (var n = 0; n < length && messages < 100; n++) {
-		queuedTime += data[n][1];
-		if (queuedTime < currentTime) {
+		var obj = data[n];
+		if ((queuedTime += obj[1]) <= currentTime) {
 			offset = queuedTime;
 			continue;
 		}
+		///
 		currentTime = queuedTime - offset;
-		var event = data[n][0].event;
-		if (event.type !== "channel") continue;
-		var channel = event.channel;
+		///
+		var event = obj[0].event;
+		if (event.type !== 'channel') {
+			continue;
+		}
+		///
+		var channelId = event.channel;
+		var channel = MIDI.channels[channelId];
+		var delay = ctx.currentTime + ((currentTime + foffset + midi.startDelay) / 1000);
+		var queueTime = queuedTime - offset + midi.startDelay;
 		switch (event.subtype) {
+			case 'controller':
+				MIDI.setController(channelId, event.controllerType, event.value, delay);
+				break;
+			case 'programChange':
+				MIDI.programChange(channelId, event.programNumber, delay);
+				break;
+			case 'pitchBend':
+				MIDI.pitchBend(channelId, event.value, delay);
+				break;
 			case 'noteOn':
-				if (MIDI.channels[channel].mute) break;
-				note = event.noteNumber - (root.MIDIOffset || 0);
-				eventQueue.push({
-					event: event,
-					source: MIDI.noteOn(channel, event.noteNumber, event.velocity, currentTime / 1000 + ctx.currentTime),
-					interval: scheduleTracking(channel, note, queuedTime, offset, 144, event.velocity)
-				});
-				messages ++;
+				if (channel.mute) break;
+				note = event.noteNumber - (midi.MIDIOffset || 0);
+				var obj = {
+				    event: event,
+				    time: queueTime,
+				    source: MIDI.noteOn(channelId, event.noteNumber, event.velocity, delay),
+				    interval: scheduleTracking(channelId, note, queuedTime + midi.startDelay, offset - foffset, 144, event.velocity)
+				};
+				eventQueue.push(obj);
+				messages++;
 				break;
 			case 'noteOff':
-				if (MIDI.channels[channel].mute) break;
-				note = event.noteNumber - (root.MIDIOffset || 0);
-				eventQueue.push({
-					event: event,
-					source: MIDI.noteOff(channel, event.noteNumber, currentTime / 1000 + ctx.currentTime),
-					interval: scheduleTracking(channel, note, queuedTime, offset, 128)
-				});
+				if (channel.mute) break;
+				note = event.noteNumber - (midi.MIDIOffset || 0);
+				var obj = {
+				    event: event,
+				    time: queueTime,
+				    source: MIDI.noteOff(channelId, event.noteNumber, delay),
+				    interval: scheduleTracking(channelId, note, queuedTime, offset - foffset, 128, 0)
+				};
+				eventQueue.push(obj);
 				break;
 			default:
 				break;
 		}
 	}
+	if (callback) {
+	    callback(eventQueue);
+	}
 };
 
 var stopAudio = function () {
 	var ctx = getContext();
-	root.playing = false;
-	root.restart += (ctx.currentTime - startTime) * 1000;
+	midi.playing = false;
+	midi.restart += (ctx.currentTime - startTime) * 1000;
 	// stop the audio, and intervals
 	while (eventQueue.length) {
 		var o = eventQueue.pop();
 		window.clearInterval(o.interval);
 		if (!o.source) continue; // is not webaudio
-		if (typeof(o.source) === "number") {
+		if (typeof(o.source) === 'number') {
 			window.clearTimeout(o.source);
 		} else { // webaudio
 			o.source.disconnect(0);
diff --git a/js/midi/plugin.audiotag.js b/js/midi/plugin.audiotag.js
new file mode 100644
index 0000000..d49b798
--- /dev/null
+++ b/js/midi/plugin.audiotag.js
@@ -0,0 +1,150 @@
+/*
+	----------------------------------------------------------------------
+	AudioTag <audio> - OGG or MPEG Soundbank
+	----------------------------------------------------------------------
+	http://dev.w3.org/html5/spec/Overview.html#the-audio-element
+	----------------------------------------------------------------------
+*/
+
+(function(root) { 'use strict';
+
+	window.Audio && (function() {
+		var midi = root.AudioTag = { api: 'audiotag' };
+		var noteToKey = {};
+		var volume = 127; // floating point 
+		var buffer_nid = -1; // current channel
+		var audioBuffers = []; // the audio channels
+		var notesOn = []; // instrumentId + noteId that is currently playing in each 'channel', for routing noteOff/chordOff calls
+		var notes = {}; // the piano keys
+		for (var nid = 0; nid < 12; nid ++) {
+			audioBuffers[nid] = new Audio();
+		}
+
+		var playChannel = function(channel, note) {
+			if (!root.channels[channel]) return;
+			var instrument = root.channels[channel].instrument;
+			var instrumentId = root.GM.byId[instrument].id;
+			var note = notes[note];
+			if (note) {
+				var instrumentNoteId = instrumentId + '' + note.id;
+				var nid = (buffer_nid + 1) % audioBuffers.length;
+				var audio = audioBuffers[nid];
+				notesOn[ nid ] = instrumentNoteId;
+				if (!root.Soundfont[instrumentId]) {
+					if (root.DEBUG) {
+						console.log('404', instrumentId);
+					}
+					return;
+				}
+				audio.src = root.Soundfont[instrumentId][note.id];
+				audio.volume = volume / 127;
+				audio.play();
+				buffer_nid = nid;
+			}
+		};
+
+		var stopChannel = function(channel, note) {
+			if (!root.channels[channel]) return;
+			var instrument = root.channels[channel].instrument;
+			var instrumentId = root.GM.byId[instrument].id;
+			var note = notes[note];
+			if (note) {
+				var instrumentNoteId = instrumentId + '' + note.id;
+				for (var i = 0, len = audioBuffers.length; i < len; i++) {
+				    var nid = (i + buffer_nid + 1) % len;
+				    var cId = notesOn[nid];
+				    if (cId && cId == instrumentNoteId) {
+				        audioBuffers[nid].pause();
+				        notesOn[nid] = null;
+				        return;
+				    }
+				}
+			}
+		};
+	
+		midi.audioBuffers = audioBuffers;
+		midi.send = function(data, delay) { };
+		midi.setController = function(channel, type, value, delay) { };
+		midi.setVolume = function(channel, n) {
+			volume = n; //- should be channel specific volume
+		};
+
+		midi.programChange = function(channel, program) {
+			root.channels[channel].instrument = program;
+		};
+
+		midi.pitchBend = function(channel, program, delay) { };
+
+		midi.noteOn = function(channel, note, velocity, delay) {
+			var id = noteToKey[note];
+			if (!notes[id]) return;
+			if (delay) {
+				return setTimeout(function() {
+					playChannel(channel, id);
+				}, delay * 1000);
+			} else {
+				playChannel(channel, id);
+			}
+		};
+	
+		midi.noteOff = function(channel, note, delay) {
+// 			var id = noteToKey[note];
+// 			if (!notes[id]) return;
+// 			if (delay) {
+// 				return setTimeout(function() {
+// 					stopChannel(channel, id);
+// 				}, delay * 1000)
+// 			} else {
+// 				stopChannel(channel, id);
+// 			}
+		};
+	
+		midi.chordOn = function(channel, chord, velocity, delay) {
+			for (var idx = 0; idx < chord.length; idx ++) {
+				var n = chord[idx];
+				var id = noteToKey[n];
+				if (!notes[id]) continue;
+				if (delay) {
+					return setTimeout(function() {
+						playChannel(channel, id);
+					}, delay * 1000);
+				} else {
+					playChannel(channel, id);
+				}
+			}
+		};
+	
+		midi.chordOff = function(channel, chord, delay) {
+			for (var idx = 0; idx < chord.length; idx ++) {
+				var n = chord[idx];
+				var id = noteToKey[n];
+				if (!notes[id]) continue;
+				if (delay) {
+					return setTimeout(function() {
+						stopChannel(channel, id);
+					}, delay * 1000);
+				} else {
+					stopChannel(channel, id);
+				}
+			}
+		};
+	
+		midi.stopAllNotes = function() {
+			for (var nid = 0, length = audioBuffers.length; nid < length; nid++) {
+				audioBuffers[nid].pause();
+			}
+		};
+	
+		midi.connect = function(opts) {
+			root.setDefaultPlugin(midi);
+			///
+			for (var key in root.keyToNote) {
+				noteToKey[root.keyToNote[key]] = key;
+				notes[key] = {id: key};
+			}
+			///
+			opts.callback && opts.callback();
+		};
+	})();
+
+})(MIDI);
\ No newline at end of file
diff --git a/js/midi/plugin.js b/js/midi/plugin.js
deleted file mode 100644
index 192f8fc..0000000
--- a/js/midi/plugin.js
+++ /dev/null
@@ -1,712 +0,0 @@
-/*
-	--------------------------------------------
-	MIDI.Plugin : 0.3.2 : 2013/01/26
-	--------------------------------------------
-	https://github.com/mudcube/MIDI.js
-	--------------------------------------------
-	Inspired by javax.sound.midi (albeit a super simple version): 
-		http://docs.oracle.com/javase/6/docs/api/javax/sound/midi/package-summary.html
-	--------------------------------------------
-	Technologies:
-		MIDI.WebMIDI
-		MIDI.WebAudio
-		MIDI.Flash
-		MIDI.AudioTag
-	--------------------------------------------
-	Helpers:
-		MIDI.GeneralMIDI
-		MIDI.channels
-		MIDI.keyToNote
-		MIDI.noteToKey
-*/
-
-if (typeof (MIDI) === "undefined") var MIDI = {};
-
-(function() { "use strict";
-
-var setPlugin = function(root) {
-	MIDI.api = root.api;
-	MIDI.setVolume = root.setVolume;
-	MIDI.programChange = root.programChange;
-	MIDI.noteOn = root.noteOn;
-	MIDI.noteOff = root.noteOff;
-	MIDI.chordOn = root.chordOn;
-	MIDI.chordOff = root.chordOff;
-	MIDI.stopAllNotes = root.stopAllNotes;
-	MIDI.getInput = root.getInput;
-	MIDI.getOutputs = root.getOutputs;
-};
-
-/*
-	--------------------------------------------
-	Web MIDI API - Native Soundbank
-	--------------------------------------------
-	https://dvcs.w3.org/hg/audio/raw-file/tip/midi/specification.html
-	--------------------------------------------
-*/
-
-(function () {
-	var plugin = null;
-	var output = null;
-	var channels = [];
-	var root = MIDI.WebMIDI = {
-		api: "webmidi"
-	};
-	root.setVolume = function (channel, volume) { // set channel volume
-		output.send([0xB0 + channel, 0x07, volume]);
-	};
-
-	root.programChange = function (channel, program) { // change channel instrument
-		output.send([0xC0 + channel, program]);
-	};
-
-	root.noteOn = function (channel, note, velocity, delay) {
-		output.send([0x90 + channel, note, velocity], delay * 1000);
-	};
-
-	root.noteOff = function (channel, note, delay) {
-		output.send([0x80 + channel, note, 0], delay * 1000);
-	};
-
-	root.chordOn = function (channel, chord, velocity, delay) {
-		for (var n = 0; n < chord.length; n ++) {
-			var note = chord[n];
-			output.send([0x90 + channel, note, velocity], delay * 1000);
-		}
-	};
-	
-	root.chordOff = function (channel, chord, delay) {
-		for (var n = 0; n < chord.length; n ++) {
-			var note = chord[n];
-			output.send([0x80 + channel, note, 0], delay * 1000);
-		}
-	};
-	
-	root.stopAllNotes = function () {
-		for (var channel = 0; channel < 16; channel ++) {
-			output.send([0xB0 + channel, 0x7B, 0]);
-		}
-	};
-
-	root.getInput = function () {
-		return plugin.getInputs();
-	};
-	
-	root.getOutputs = function () {
-		return plugin.getOutputs();
-	};
-
-	root.connect = function (conf) {
-		setPlugin(root);
-        navigator.requestMIDIAccess().then(function (access) {
-			plugin = access;
-			output = plugin.outputs()[0];
-			if (conf.callback) conf.callback();
-		}, function (err) { // well at least we tried!
-			if (window.AudioContext || window.webkitAudioContext) { // Chrome
-				conf.api = "webaudio";
-			} else if (window.Audio) { // Firefox
-				conf.api = "audiotag";
-			} else { // Internet Explorer
-				conf.api = "flash";
-			}
-			MIDI.loadPlugin(conf);
-		});
-	};
-})();
-
-/*
-	--------------------------------------------
-	Web Audio API - OGG or MPEG Soundbank
-	--------------------------------------------
-	https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html
-	--------------------------------------------
-*/
-
-if (window.AudioContext || window.webkitAudioContext) (function () {
-
-	var createAudioContext = function () {
-		if (window.AudioContext) return new AudioContext();
-		if (window.webkitAudioContext) return new webkitAudioContext();
-		return false;
-	};
-
-	var loadAudioFile = function (url, onload, onerror) {
-		if (streaming) { // Streaming buffer.
-			var audio = new Audio();
-			audio.src = url;
-			audio.controls = false;
-			audio.autoplay = false;
-			audio.preload = false;
-			audio.addEventListener("canplay", function() {
-				callback(audio);
-			});
-			audio.addEventListener("error", function(err) {
-				console.log(err)
-			});
-			document.body.appendChild(audio)
-		} else if (url.indexOf("data:audio") === 0) { // Base64 string.
-			var base64 = url.split(",")[1];
-			var buffer = Base64Binary.decodeArrayBuffer(base64);
-			var ctx = MIDI.Player.ctx;
-			ctx.decodeAudioData(buffer, onload, onerror);
-		} else { // XMLHTTP buffer.
-			var request = new XMLHttpRequest();
-			request.open('GET', url, true);
-			request.responseType = 'arraybuffer';
-			request.onload = function () {
-				var ctx = MIDI.Player.ctx;
-				ctx.decodeAudioData(request.response, onload, onerror);
-			};
-			request.send();
-		}
-	};
-
-	var AudioContext = createAudioContext();
-	var streaming = false; //!!AudioContext.createMediaElementSource;
-	var root = MIDI.WebAudio = {
-		api: "webaudio"
-	};
-	var ctx;
-	var sources = {};
-	var masterVolume = 127;
-	var audioBuffers = {};
-	var audioLoader = function (ctx, instrument, urlList, index, bufferList, callback) {
-		var synth = MIDI.GeneralMIDI.byName[instrument];
-		var instrumentId = synth.number;
-		var url = urlList[index];
-		var audioSrc = MIDI.Soundfont[instrument][url];
-		if (!audioSrc) { // missing soundfont
-			return callback(instrument);
-		}
-		var onAudioError = function(err) {
-			console.log(err);
-		};
-		var onAudioLoad = function (buffer) {
-			var msg = url;
-			while (msg.length < 3) msg += "&nbsp;";
-			if (typeof (MIDI.loader) !== "undefined") {
-				MIDI.loader.update(null, synth.instrument + "<br>Processing: " + (index / 87 * 100 >> 0) + "%<br>" + msg);
-			}
-			buffer.id = url;
-			bufferList[index] = buffer;
-			//
-			if (bufferList.length === urlList.length) {
-				while (bufferList.length) {
-					buffer = bufferList.pop();
-					if (!buffer) continue;
-					var nodeId = MIDI.keyToNote[buffer.id];
-					audioBuffers[instrumentId + "" + nodeId] = buffer;
-				}
-				callback(instrument);
-			}
-		};
-		///
-		loadAudioFile(MIDI.Soundfont[instrument][url], onAudioLoad, onAudioError);
-	};
-
-	root.setVolume = function (channel, volume) {
-		masterVolume = volume;
-	};
-
-	root.programChange = function (channel, program) {
-		MIDI.channels[channel].instrument = program;
-	};
-
-	root.noteOn = function (channelId, noteId, velocity, delay) {
-		/// check whether the note exists
-		var channel = MIDI.getChannel(channelId);
-		if (!channel) return;
-		var instrument = channel.instrument;
-		var bufferId = instrument + "" + noteId;
-		var buffer = audioBuffers[bufferId];
-		if (!buffer) return;
-
-		/// convert relative delay to absolute delay
-		if (delay < ctx.currentTime) delay += ctx.currentTime;
-		
-		/// crate audio buffer
-		if (streaming) { // Streaming buffer
-			var source = ctx.createMediaElementSource(buffer);
-		} else { // XMLHTTP buffer
-			var source = ctx.createBufferSource();
-			source.buffer = buffer;
-		}
-		sources[channelId + "" + noteId] = source;
-		source.connect(ctx.destination);
-		///
-		if (ctx.createGain) { // firefox
-			source.gainNode = ctx.createGain();
-		} else { // chrome
-			source.gainNode = ctx.createGainNode();
-		}
-		var value = (velocity / 127) * (masterVolume / 127) * 2 - 1;
-		source.gainNode.connect(ctx.destination);
-		source.gainNode.gain.value = Math.max(-1, value);
-		source.connect(source.gainNode);
-		///
-		if (streaming) {
-			setTimeout(function() {
-				buffer.currentTime = 0;
-				buffer.play()
-			}, (delay || 0) * 1000);
-		} else if (source.noteOn) { // old api
-			source.noteOn(delay || 0);
-		} else { // new api
-			source.start(delay || 0);
-		}
-		return source;
-	};
-
-	root.noteOff = function (channelId, noteId, delay) {
-		var channel = MIDI.getChannel(channelId);
-		if (!channel) return;
-		var instrument = channel.instrument;
-		var bufferId = instrument + "" + noteId;
-		var buffer = audioBuffers[bufferId];
-		if (!buffer) return;
-		///
-		delay = delay || 0;
-		if (delay < ctx.currentTime) delay += ctx.currentTime;
-		///
-		var source = sources[channelId + "" + noteId];
-		if (!source) return;
-		if (source.gainNode) {
-			// @Miranet: "the values of 0.2 and 0.3 could ofcourse be used as 
-			// a 'release' parameter for ADSR like time settings."
-			// add { "metadata": { release: 0.3 } } to soundfont files
-			var gain = source.gainNode.gain;
-			gain.linearRampToValueAtTime(gain.value, delay);
-			gain.linearRampToValueAtTime(-1, delay + 0.2);
-		}
-		///
-		if (streaming) {
-			setTimeout(function() {
-				buffer.pause();
-			}, delay * 1000);
-		} else if (source.noteOff) { // old api
-			source.noteOff(delay + 0.3);
-		} else {
-			source.stop(delay + 0.3);
-		}
-		///
-		delete sources[channelId + "" + noteId];
-	};
-
-	root.chordOn = function (channel, chord, velocity, delay) {
-		var ret = {}, note;
-		for (var n = 0, length = chord.length; n < length; n++) {
-			ret[note = chord[n]] = root.noteOn(channel, note, velocity, delay);
-		}
-		return ret;
-	};
-
-	root.chordOff = function (channel, chord, delay) {
-		var ret = {}, note;
-		for (var n = 0, length = chord.length; n < length; n++) {
-			ret[note = chord[n]] = root.noteOff(channel, note, delay);
-		}
-		return ret;
-	};
-
-    root.stopAllNotes = function () {
-        for (var source in sources) {
-            var delay = 0;
-            if (delay < ctx.currentTime) delay += ctx.currentTime;
-            // @Miranet: "the values of 0.2 and 0.3 could ofcourse be used as
-            // a 'release' parameter for ADSR like time settings."
-            // add { "metadata": { release: 0.3 } } to soundfont files
-            sources[source].gain.linearRampToValueAtTime(1, delay);
-            sources[source].gain.linearRampToValueAtTime(0, delay + 0.2);
-            sources[source].noteOff(delay + 0.3);
-            delete sources[source];
-        }
-    };
-
-	root.connect = function (conf) {
-		setPlugin(root);
-		//
-		MIDI.Player.ctx = ctx = createAudioContext();
-		///
-		var urlList = [];
-		var keyToNote = MIDI.keyToNote;
-		for (var key in keyToNote) urlList.push(key);
-		var bufferList = [];
-		var pending = {};
-		var oncomplete = function(instrument) {
-			delete pending[instrument];
-			for (var key in pending) break;
-			if (!key) conf.callback();
-		};
-		for (var instrument in MIDI.Soundfont) {
-			pending[instrument] = true;
-			for (var i = 0; i < urlList.length; i++) {
-				audioLoader(ctx, instrument, urlList, i, bufferList, oncomplete);
-			}
-		}
-	};
-})();
-
-/*
-	--------------------------------------------
-	AudioTag <audio> - OGG or MPEG Soundbank
-	--------------------------------------------
-	http://dev.w3.org/html5/spec/Overview.html#the-audio-element
-	--------------------------------------------
-*/
-
-if (window.Audio) (function () {
-
-	var root = MIDI.AudioTag = {
-		api: "audiotag"
-	};
-	var note2id = {};
-	var volume = 127; // floating point 
-	var channel_nid = -1; // current channel
-	var channels = []; // the audio channels
-	var channelInstrumentNoteIds = []; // instrumentId + noteId that is currently playing in each 'channel', for routing noteOff/chordOff calls
-	var notes = {}; // the piano keys
-	for (var nid = 0; nid < 12; nid++) {
-		channels[nid] = new Audio();
-	}
-
-	var playChannel = function (channel, note) {
-		if (!MIDI.channels[channel]) return;
-		var instrument = MIDI.channels[channel].instrument;
-		var instrumentId = MIDI.GeneralMIDI.byId[instrument].id;
-		var note = notes[note];
-		if (!note) return;
-		var instrumentNoteId = instrumentId + "" + note.id;
-		var nid = (channel_nid + 1) % channels.length;
-		var audio = channels[nid];
-		channelInstrumentNoteIds[ nid ] = instrumentNoteId;
-		audio.src = MIDI.Soundfont[instrumentId][note.id];
-		audio.volume = volume / 127;
-		audio.play();
-		channel_nid = nid;
-	};
-
-	var stopChannel = function (channel, note) {
-		if (!MIDI.channels[channel]) return;
-		var instrument = MIDI.channels[channel].instrument;
-		var instrumentId = MIDI.GeneralMIDI.byId[instrument].id;
-		var note = notes[note];
-		if (!note) return;
-		var instrumentNoteId = instrumentId + "" + note.id;
-
-		for(var i=0;i<channels.length;i++){
-			var nid = (i + channel_nid + 1) % channels.length;
-			var cId = channelInstrumentNoteIds[nid];
-
-			if(cId && cId == instrumentNoteId){
-				channels[nid].pause();
-				channelInstrumentNoteIds[nid] = null;
-				return;
-			}
-		}
-	};
-
-	root.programChange = function (channel, program) {
-		MIDI.channels[channel].instrument = program;
-	};
-
-	root.setVolume = function (channel, n) {
-		volume = n; //- should be channel specific volume
-	};
-
-	root.noteOn = function (channel, note, velocity, delay) {
-		var id = note2id[note];
-		if (!notes[id]) return;
-		if (delay) {
-			return window.setTimeout(function () {
-				playChannel(channel, id);
-			}, delay * 1000);
-		} else {
-			playChannel(channel, id);
-		}
-	};
-	
-	root.noteOff = function (channel, note, delay) {
-		var id = note2id[note];
-		if (!notes[id]) return;
-		if (delay) {
-			return setTimeout(function() {
-				stopChannel(channel, id);
-			}, delay * 1000)
-		} else {
-			stopChannel(channel, id);
-		}
-	};
-	
-	root.chordOn = function (channel, chord, velocity, delay) {
-		for (var idx = 0; idx < chord.length; idx ++) {
-			var n = chord[idx];
-			var id = note2id[n];
-			if (!notes[id]) continue;
-			if (delay) {
-				return window.setTimeout(function () {
-					playChannel(channel, id);
-				}, delay * 1000);
-			} else {
-				playChannel(channel, id);
-			}
-		}
-	};
-	
-	root.chordOff = function (channel, chord, delay) {
-		for (var idx = 0; idx < chord.length; idx ++) {
-			var n = chord[idx];
-			var id = note2id[n];
-			if (!notes[id]) continue;
-			if (delay) {
-				return window.setTimeout(function () {
-					stopChannel(channel, id);
-				}, delay * 1000);
-			} else {
-				stopChannel(channel, id);
-			}
-		}
-	};
-	
-	root.stopAllNotes = function () {
-		for (var nid = 0, length = channels.length; nid < length; nid++) {
-			channels[nid].pause();
-		}
-	};
-	
-	root.connect = function (conf) {
-		for (var key in MIDI.keyToNote) {
-			note2id[MIDI.keyToNote[key]] = key;
-			notes[key] = {
-				id: key
-			};
-		}
-		setPlugin(root);
-		///
-		if (conf.callback) conf.callback();
-	};
-})();
-
-/*
-	--------------------------------------------
-	Flash - MP3 Soundbank
-	--------------------------------------------
-	http://www.schillmania.com/projects/soundmanager2/
-	--------------------------------------------
-*/
-	
-(function () {
-
-	var root = MIDI.Flash = {
-		api: "flash"
-	};
-	var noteReverse = {};
-	var notes = {};
-
-	root.programChange = function (channel, program) {
-		MIDI.channels[channel].instrument = program;
-	};
-
-	root.setVolume = function (channel, note) {
-
-	};
-
-	root.noteOn = function (channel, note, velocity, delay) {
-		if (!MIDI.channels[channel]) return;
-		var instrument = MIDI.channels[channel].instrument;
-		var id = MIDI.GeneralMIDI.byId[instrument].number;
-		note = id + "" + noteReverse[note];
-		if (!notes[note]) return;
-		if (delay) {
-			return window.setTimeout(function() { 
-				notes[note].play({ volume: velocity * 2 });
-			}, delay * 1000);
-		} else {
-			notes[note].play({ volume: velocity * 2 });
-		}
-	};
-
-	root.noteOff = function (channel, note, delay) {
-
-	};
-
-	root.chordOn = function (channel, chord, velocity, delay) {
-		if (!MIDI.channels[channel]) return;
-		var instrument = MIDI.channels[channel].instrument;
-		var id = MIDI.GeneralMIDI.byId[instrument].number;
-		for (var key in chord) {
-			var n = chord[key];
-			var note = id + "" + noteReverse[n];
-			if (notes[note]) {
-				notes[note].play({ volume: velocity * 2 });
-			}
-		}
-	};
-
-	root.chordOff = function (channel, chord, delay) {
-
-	};
-
-	root.stopAllNotes = function () {
-
-	};
-
-	root.connect = function (instruments, conf) {
-		soundManager.flashVersion = 9;
-		soundManager.useHTML5Audio = true;
-		soundManager.url = conf.soundManagerSwfUrl || '../inc/SoundManager2/swf/';
-		soundManager.useHighPerformance = true;
-		soundManager.wmode = 'transparent';
-		soundManager.flashPollingInterval = 1;
-		soundManager.debugMode = false;
-		soundManager.onload = function () {
-			var createBuffer = function(instrument, id, onload) {
-				var synth = MIDI.GeneralMIDI.byName[instrument];
-				var instrumentId = synth.number;
-				notes[instrumentId+""+id] = soundManager.createSound({
-					id: id,
-					url: MIDI.soundfontUrl + instrument + "-mp3/" + id + ".mp3",
-					multiShot: true,
-					autoLoad: true,
-					onload: onload
-				});			
-			};
-			var loaded = [];
-			var samplesPerInstrument = 88;
-			var samplesToLoad = instruments.length * samplesPerInstrument;
-				
-			for (var i = 0; i < instruments.length; i++) {
-				var instrument = instruments[i];
-				var onload = function () {
-					loaded.push(this.sID);
-					if (typeof (MIDI.loader) === "undefined") return;
-					MIDI.loader.update(null, "Processing: " + this.sID);
-				};
-				for (var j = 0; j < samplesPerInstrument; j++) {
-					var id = noteReverse[j + 21];
-					createBuffer(instrument, id, onload);
-				}
-			}
-			///
-			setPlugin(root);
-			//
-			var interval = window.setInterval(function () {
-				if (loaded.length < samplesToLoad) return;
-				window.clearInterval(interval);
-				if (conf.callback) conf.callback();
-			}, 25);
-		};
-		soundManager.onerror = function () {
-
-		};
-		for (var key in MIDI.keyToNote) {
-			noteReverse[MIDI.keyToNote[key]] = key;
-		}
-	};
-})();
-
-/*
-	helper functions
-*/
-
-// instrument-tracker
-MIDI.GeneralMIDI = (function (arr) {
-	var clean = function(v) {
-		return v.replace(/[^a-z0-9 ]/gi, "").replace(/[ ]/g, "_").toLowerCase();
-	};
-	var ret = {
-		byName: {},
-		byId: {},
-		byCategory: {}
-	};
-	for (var key in arr) {
-		var list = arr[key];
-		for (var n = 0, length = list.length; n < length; n++) {
-			var instrument = list[n];
-			if (!instrument) continue;
-			var num = parseInt(instrument.substr(0, instrument.indexOf(" ")), 10);
-			instrument = instrument.replace(num + " ", "");
-			ret.byId[--num] = 
-			ret.byName[clean(instrument)] = 
-			ret.byCategory[clean(key)] = {
-				id: clean(instrument),
-				instrument: instrument,
-				number: num,
-				category: key
-			};
-		}
-	}
-	return ret;
-})({
-	'Piano': ['1 Acoustic Grand Piano', '2 Bright Acoustic Piano', '3 Electric Grand Piano', '4 Honky-tonk Piano', '5 Electric Piano 1', '6 Electric Piano 2', '7 Harpsichord', '8 Clavinet'],
-	'Chromatic Percussion': ['9 Celesta', '10 Glockenspiel', '11 Music Box', '12 Vibraphone', '13 Marimba', '14 Xylophone', '15 Tubular Bells', '16 Dulcimer'],
-	'Organ': ['17 Drawbar Organ', '18 Percussive Organ', '19 Rock Organ', '20 Church Organ', '21 Reed Organ', '22 Accordion', '23 Harmonica', '24 Tango Accordion'],
-	'Guitar': ['25 Acoustic Guitar (nylon)', '26 Acoustic Guitar (steel)', '27 Electric Guitar (jazz)', '28 Electric Guitar (clean)', '29 Electric Guitar (muted)', '30 Overdriven Guitar', '31 Distortion Guitar', '32 Guitar Harmonics'],
-	'Bass': ['33 Acoustic Bass', '34 Electric Bass (finger)', '35 Electric Bass (pick)', '36 Fretless Bass', '37 Slap Bass 1', '38 Slap Bass 2', '39 Synth Bass 1', '40 Synth Bass 2'],
-	'Strings': ['41 Violin', '42 Viola', '43 Cello', '44 Contrabass', '45 Tremolo Strings', '46 Pizzicato Strings', '47 Orchestral Harp', '48 Timpani'],
-	'Ensemble': ['49 String Ensemble 1', '50 String Ensemble 2', '51 Synth Strings 1', '52 Synth Strings 2', '53 Choir Aahs', '54 Voice Oohs', '55 Synth Choir', '56 Orchestra Hit'],
-	'Brass': ['57 Trumpet', '58 Trombone', '59 Tuba', '60 Muted Trumpet', '61 French Horn', '62 Brass Section', '63 Synth Brass 1', '64 Synth Brass 2'],
-	'Reed': ['65 Soprano Sax', '66 Alto Sax', '67 Tenor Sax', '68 Baritone Sax', '69 Oboe', '70 English Horn', '71 Bassoon', '72 Clarinet'],
-	'Pipe': ['73 Piccolo', '74 Flute', '75 Recorder', '76 Pan Flute', '77 Blown Bottle', '78 Shakuhachi', '79 Whistle', '80 Ocarina'],
-	'Synth Lead': ['81 Lead 1 (square)', '82 Lead 2 (sawtooth)', '83 Lead 3 (calliope)', '84 Lead 4 (chiff)', '85 Lead 5 (charang)', '86 Lead 6 (voice)', '87 Lead 7 (fifths)', '88 Lead 8 (bass + lead)'],
-	'Synth Pad': ['89 Pad 1 (new age)', '90 Pad 2 (warm)', '91 Pad 3 (polysynth)', '92 Pad 4 (choir)', '93 Pad 5 (bowed)', '94 Pad 6 (metallic)', '95 Pad 7 (halo)', '96 Pad 8 (sweep)'],
-	'Synth Effects': ['97 FX 1 (rain)', '98 FX 2 (soundtrack)', '99 FX 3 (crystal)', '100 FX 4 (atmosphere)', '101 FX 5 (brightness)', '102 FX 6 (goblins)', '103 FX 7 (echoes)', '104 FX 8 (sci-fi)'],
-	'Ethnic': ['105 Sitar', '106 Banjo', '107 Shamisen', '108 Koto', '109 Kalimba', '110 Bagpipe', '111 Fiddle', '112 Shanai'],
-	'Percussive': ['113 Tinkle Bell', '114 Agogo', '115 Steel Drums', '116 Woodblock', '117 Taiko Drum', '118 Melodic Tom', '119 Synth Drum'],
-	'Sound effects': ['120 Reverse Cymbal', '121 Guitar Fret Noise', '122 Breath Noise', '123 Seashore', '124 Bird Tweet', '125 Telephone Ring', '126 Helicopter', '127 Applause', '128 Gunshot']
-});
-
-// channel-tracker
-MIDI.getChannel = function(ch) {
-	return MIDI.channels[ch];
-};
-MIDI.getInstrument = function(ch) {
-	var channel = MIDI.getChannel(ch);
-	return channel && channel.instrument;
-};
-MIDI.getMono = function(channel) {
-	var channel = MIDI.getChannel(ch);
-	return channel && channel.mono;
-};
-MIDI.getOmni = function(channel) {
-	var channel = MIDI.getChannel(ch);
-	return channel && channel.omni;
-};
-MIDI.getSolo = function(channel) {
-	var channel = MIDI.getChannel(ch);
-	return channel && channel.solo;
-};
-
-MIDI.channels = (function () { // 0 - 15 channels
-	var channels = {};
-	for (var n = 0; n < 16; n++) {
-		channels[n] = { // default values
-			instrument: 0,
-			mute: false,
-			mono: false,
-			omni: false,
-			solo: false
-		};
-	}
-	return channels;
-})();
-
-//
-MIDI.pianoKeyOffset = 21;
-
-// note conversions
-MIDI.keyToNote = {}; // C8  == 108
-MIDI.noteToKey = {}; // 108 ==  C8
-(function () {
-	var A0 = 0x15; // first note
-	var C8 = 0x6C; // last note
-	var number2key = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "B"];
-	for (var n = A0; n <= C8; n++) {
-		var octave = (n - 12) / 12 >> 0;
-		var name = number2key[n % 12] + octave;
-		MIDI.keyToNote[name] = n;
-		MIDI.noteToKey[n] = name;
-	}
-})();
-
-})();
\ No newline at end of file
diff --git a/js/midi/plugin.webaudio.js b/js/midi/plugin.webaudio.js
new file mode 100644
index 0000000..b4e3a70
--- /dev/null
+++ b/js/midi/plugin.webaudio.js
@@ -0,0 +1,322 @@
+/*
+	----------------------------------------------------------
+	Web Audio API - OGG or MPEG Soundbank
+	----------------------------------------------------------
+	http://webaudio.github.io/web-audio-api/
+	----------------------------------------------------------
+*/
+
+(function(root) { 'use strict';
+
+	window.AudioContext && (function() {
+		var audioContext = null; // new AudioContext();
+		var useStreamingBuffer = false; // !!audioContext.createMediaElementSource;
+		var midi = root.WebAudio = {api: 'webaudio'};
+		var ctx; // audio context
+		var sources = {};
+		var effects = {};
+		var masterVolume = 127;
+		var audioBuffers = {};
+		///
+		midi.audioBuffers = audioBuffers;
+		midi.send = function(data, delay) { };
+		midi.setController = function(channelId, type, value, delay) { };
+
+		midi.setVolume = function(channelId, volume, delay) {
+			if (delay) {
+				setTimeout(function() {
+					masterVolume = volume;
+				}, delay * 1000);
+			} else {
+				masterVolume = volume;
+			}
+		};
+
+		midi.programChange = function(channelId, program, delay) {
+// 			if (delay) {
+// 				return setTimeout(function() {
+// 					var channel = root.channels[channelId];
+// 					channel.instrument = program;
+// 				}, delay);
+// 			} else {
+				var channel = root.channels[channelId];
+				channel.instrument = program;
+// 			}
+		};
+
+		midi.pitchBend = function(channelId, program, delay) {
+// 			if (delay) {
+// 				setTimeout(function() {
+// 					var channel = root.channels[channelId];
+// 					channel.pitchBend = program;
+// 				}, delay);
+// 			} else {
+				var channel = root.channels[channelId];
+				channel.pitchBend = program;
+// 			}
+		};
+
+		midi.noteOn = function(channelId, noteId, velocity, delay) {
+			delay = delay || 0;
+
+			/// check whether the note exists
+			var channel = root.channels[channelId];
+			var instrument = channel.instrument;
+			var bufferId = instrument + '' + noteId;
+			var buffer = audioBuffers[bufferId];
+			if (!buffer) {
+// 				console.log(MIDI.GM.byId[instrument].id, instrument, channelId);
+				return;
+			}
+
+			/// convert relative delay to absolute delay
+			if (delay < ctx.currentTime) {
+				delay += ctx.currentTime;
+			}
+		
+			/// create audio buffer
+			if (useStreamingBuffer) {
+				var source = ctx.createMediaElementSource(buffer);
+			} else { // XMLHTTP buffer
+				var source = ctx.createBufferSource();
+				source.buffer = buffer;
+			}
+
+			/// add effects to buffer
+			if (effects) {
+				var chain = source;
+				for (var key in effects) {
+					chain.connect(effects[key].input);
+					chain = effects[key];
+				}
+			}
+
+			/// add gain + pitchShift
+			var gain = (velocity / 127) * (masterVolume / 127) * 2 - 1;
+			source.connect(ctx.destination);
+			source.playbackRate.value = 1; // pitch shift 
+			source.gainNode = ctx.createGain(); // gain
+			source.gainNode.connect(ctx.destination);
+			source.gainNode.gain.value = Math.min(1.0, Math.max(-1.0, gain));
+			source.connect(source.gainNode);
+			///
+			if (useStreamingBuffer) {
+				if (delay) {
+					return setTimeout(function() {
+						buffer.currentTime = 0;
+						buffer.play()
+					}, delay * 1000);
+				} else {
+					buffer.currentTime = 0;
+					buffer.play()
+				}
+			} else {
+				source.start(delay || 0);
+			}
+			///
+			sources[channelId + '' + noteId] = source;
+			///
+			return source;
+		};
+
+		midi.noteOff = function(channelId, noteId, delay) {
+			delay = delay || 0;
+
+			/// check whether the note exists
+			var channel = root.channels[channelId];
+			var instrument = channel.instrument;
+			var bufferId = instrument + '' + noteId;
+			var buffer = audioBuffers[bufferId];
+			if (buffer) {
+				if (delay < ctx.currentTime) {
+					delay += ctx.currentTime;
+				}
+				///
+				var source = sources[channelId + '' + noteId];
+				if (source) {
+					if (source.gainNode) {
+						// @Miranet: 'the values of 0.2 and 0.3 could of course be used as 
+						// a 'release' parameter for ADSR like time settings.'
+						// add { 'metadata': { release: 0.3 } } to soundfont files
+						var gain = source.gainNode.gain;
+						gain.linearRampToValueAtTime(gain.value, delay);
+						gain.linearRampToValueAtTime(-1.0, delay + 0.3);
+					}
+					///
+					if (useStreamingBuffer) {
+						if (delay) {
+							setTimeout(function() {
+								buffer.pause();
+							}, delay * 1000);
+						} else {
+							buffer.pause();
+						}
+					} else {
+						if (source.noteOff) {
+							source.noteOff(delay + 0.5);
+						} else {
+							source.stop(delay + 0.5);
+						}
+					}
+					///
+					delete sources[channelId + '' + noteId];
+					///
+					return source;
+				}
+			}
+		};
+
+		midi.chordOn = function(channel, chord, velocity, delay) {
+			var res = {};
+			for (var n = 0, note, len = chord.length; n < len; n++) {
+				res[note = chord[n]] = midi.noteOn(channel, note, velocity, delay);
+			}
+			return res;
+		};
+
+		midi.chordOff = function(channel, chord, delay) {
+			var res = {};
+			for (var n = 0, note, len = chord.length; n < len; n++) {
+				res[note = chord[n]] = midi.noteOff(channel, note, delay);
+			}
+			return res;
+		};
+
+		midi.stopAllNotes = function() {
+			for (var sid in sources) {
+				var delay = 0;
+				if (delay < ctx.currentTime) {
+					delay += ctx.currentTime;
+				}
+				var source = sources[sid];
+				source.gain.linearRampToValueAtTime(1, delay);
+				source.gain.linearRampToValueAtTime(0, delay + 0.3);
+				if (source.noteOff) { // old api
+					source.noteOff(delay + 0.3);
+				} else { // new api
+					source.stop(delay + 0.3);
+				}
+				delete sources[sid];
+			}
+		};
+
+		midi.setEffects = function(list) {
+			if (ctx.tunajs) {
+				for (var n = 0; n < list.length; n ++) {
+					var data = list[n];
+					var effect = new ctx.tunajs[data.type](data);
+					effect.connect(ctx.destination);
+					effects[data.type] = effect;
+				}
+			} else {
+				return console.log('Effects module not installed.');
+			}
+		};
+
+		midi.connect = function(opts) {
+			root.setDefaultPlugin(midi);
+			midi.setContext(ctx || new AudioContext(), opts.callback);
+		};
+	
+		midi.getContext = function() {
+			return ctx;
+		};
+	
+		midi.setContext = function(newCtx, onload, onprogress, onerror) {
+			ctx = newCtx;
+
+			/// tuna.js effects module - https://github.com/Dinahmoe/tuna
+			if (typeof Tuna !== 'undefined' && !ctx.tunajs) {
+				ctx.tunajs = new Tuna(ctx);
+			}
+		
+			/// loading audio files
+			var urls = [];
+			var notes = root.keyToNote;
+			for (var key in notes) urls.push(key);
+			///
+			var waitForEnd = function(instrument) {
+				for (var key in bufferPending) { // has pending items
+					if (bufferPending[key]) return;
+				}
+				///
+				if (onload) { // run onload once
+					onload();
+					onload = null;
+				}
+			};
+			///
+			var requestAudio = function(soundfont, instrumentId, index, key) {
+				var url = soundfont[key];
+				if (url) {
+					bufferPending[instrumentId] ++;
+					loadAudio(url, function(buffer) {
+						buffer.id = key;
+						var noteId = root.keyToNote[key];
+						audioBuffers[instrumentId + '' + noteId] = buffer;
+						///
+						if (-- bufferPending[instrumentId] === 0) {
+							var percent = index / 87;
+							console.log(MIDI.GM.byId[instrumentId], 'processing: ', percent);
+							soundfont.isLoaded = true;
+							waitForEnd(instrument);
+						}
+					}, function(err) {
+		// 				console.log(err);
+					});
+				}
+			};
+			///
+			var bufferPending = {};
+			for (var instrument in root.Soundfont) {
+				var soundfont = root.Soundfont[instrument];
+				if (soundfont.isLoaded) {
+					continue;
+				}
+				///
+				var synth = root.GM.byName[instrument];
+				var instrumentId = synth.number;
+				///
+				bufferPending[instrumentId] = 0;
+				///
+				for (var index = 0; index < urls.length; index++) {
+					var key = urls[index];
+					requestAudio(soundfont, instrumentId, index, key);
+				}
+			}
+			///
+			setTimeout(waitForEnd, 1);
+		};
+
+		/* Load audio file: streaming | base64 | arraybuffer
+		---------------------------------------------------------------------- */
+		var loadAudio = function(url, onload, onerror) {
+			if (useStreamingBuffer) {
+				var audio = new Audio();
+				audio.src = url;
+				audio.controls = false;
+				audio.autoplay = false;
+				audio.preload = false;
+				audio.addEventListener('canplay', function() {
+					onload && onload(audio);
+				});
+				audio.addEventListener('error', function(err) {
+					onerror && onerror(err);
+				});
+				document.body.appendChild(audio);
+			} else if (url.indexOf('data:audio') === 0) { // Base64 string
+				var base64 = url.split(',')[1];
+				var buffer = Base64Binary.decodeArrayBuffer(base64);
+				ctx.decodeAudioData(buffer, onload, onerror);
+			} else { // XMLHTTP buffer
+				var request = new XMLHttpRequest();
+				request.open('GET', url, true);
+				request.responseType = 'arraybuffer';
+				request.onload = function() {
+					ctx.decodeAudioData(request.response, onload, onerror);
+				};
+				request.send();
+			}
+		};
+	})();
+})(MIDI);
\ No newline at end of file
diff --git a/js/midi/plugin.webmidi.js b/js/midi/plugin.webmidi.js
new file mode 100644
index 0000000..cbec1f3
--- /dev/null
+++ b/js/midi/plugin.webmidi.js
@@ -0,0 +1,83 @@
+/*
+	----------------------------------------------------------------------
+	Web MIDI API - Native Soundbanks
+	----------------------------------------------------------------------
+	http://webaudio.github.io/web-midi-api/
+	----------------------------------------------------------------------
+*/
+
+(function(root) { 'use strict';
+
+	var plugin = null;
+	var output = null;
+	var channels = [];
+	var midi = root.WebMIDI = {api: 'webmidi'};
+	midi.send = function(data, delay) { // set channel volume
+		output.send(data, delay * 1000);
+	};
+
+	midi.setController = function(channel, type, value, delay) {
+		output.send([channel, type, value], delay * 1000);
+	};
+
+	midi.setVolume = function(channel, volume, delay) { // set channel volume
+		output.send([0xB0 + channel, 0x07, volume], delay * 1000);
+	};
+
+	midi.programChange = function(channel, program, delay) { // change patch (instrument)
+		output.send([0xC0 + channel, program], delay * 1000);
+	};
+
+	midi.pitchBend = function(channel, program, delay) { // pitch bend
+		output.send([0xE0 + channel, program], delay * 1000);
+	};
+
+	midi.noteOn = function(channel, note, velocity, delay) {
+		output.send([0x90 + channel, note, velocity], delay * 1000);
+	};
+
+	midi.noteOff = function(channel, note, delay) {
+		output.send([0x80 + channel, note, 0], delay * 1000);
+	};
+
+	midi.chordOn = function(channel, chord, velocity, delay) {
+		for (var n = 0; n < chord.length; n ++) {
+			var note = chord[n];
+			output.send([0x90 + channel, note, velocity], delay * 1000);
+		}
+	};
+
+	midi.chordOff = function(channel, chord, delay) {
+		for (var n = 0; n < chord.length; n ++) {
+			var note = chord[n];
+			output.send([0x80 + channel, note, 0], delay * 1000);
+		}
+	};
+
+	midi.stopAllNotes = function() {
+		output.cancel();
+		for (var channel = 0; channel < 16; channel ++) {
+			output.send([0xB0 + channel, 0x7B, 0]);
+		}
+	};
+
+	midi.connect = function(opts) {
+		root.setDefaultPlugin(midi);
+		///
+		navigator.requestMIDIAccess().then(function(access) {
+			plugin = access;
+			output = plugin.outputs()[0];
+			opts.callback && opts.callback();
+		}, function(err) { // well at least we tried!
+			if (window.AudioContext) { // Chrome
+				opts.api = 'webaudio';
+			} else if (window.Audio) { // Firefox
+				opts.api = 'audiotag';
+			} else { // no support
+				return;
+			}
+			root.loadPlugin(opts);
+		});
+	};
+
+})(MIDI);
\ No newline at end of file
diff --git a/js/midi/synesthesia.js b/js/midi/synesthesia.js
index a5d19db..d898374 100644
--- a/js/midi/synesthesia.js
+++ b/js/midi/synesthesia.js
@@ -1,26 +1,27 @@
 /*
-	------------------------------------------------------------
-	MusicTheory.Synesthesia : 0.3.1 : 01/06/2012
-	------------------------------------------------------------
+	----------------------------------------------------------
+	MIDI.Synesthesia : 0.3.1 : 01-06-2012
+	----------------------------------------------------------
 	Peacock:  “Instruments to perform color-music: Two centuries of technological experimentation,” Leonardo, 21 (1988), 397-406.
 	Gerstner:  Karl Gerstner, The Forms of Color 1986
 	Klein:  Colour-Music: The art of light, London: Crosby Lockwood and Son, 1927.
 	Jameson:  “Visual music in a visual programming language,” IEEE Symposium on Visual Languages, 1999, 111-118. 
 	Helmholtz:  Treatise on Physiological Optics, New York: Dover Books, 1962 
 	Jones:  The art of light & color, New York: Van Nostrand Reinhold, 1972
-	------------------------------------------------------------
+	----------------------------------------------------------
 	Reference: http://rhythmiclight.com/archives/ideas/colorscales.html
-	------------------------------------------------------------
+	----------------------------------------------------------
 */
 
-if (typeof(MusicTheory) === "undefined") var MusicTheory = {};
-if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {};
+if (typeof MIDI === 'undefined') var MIDI = {};
+
+MIDI.Synesthesia = MIDI.Synesthesia || {};
 
 (function(root) {
 	root.data = {
 		'Isaac Newton (1704)': { 
-			format: "HSL",
-			ref: "Gerstner, p.167",
+			format: 'HSL',
+			ref: 'Gerstner, p.167',
 			english: ['red',null,'orange',null,'yellow','green',null,'blue',null,'indigo',null,'violet'],
 			0: [ 0, 96, 51 ], // C
 			1: [ 0, 0, 0 ], // C#
@@ -36,7 +37,7 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 325, 84, 46 ] // B
 		},
 		'Louis Bertrand Castel (1734)': { 
-			format: "HSL",
+			format: 'HSL',
 			ref: 'Peacock, p.400',
 			english: ['blue','blue-green','green','olive green','yellow','yellow-orange','orange','red','crimson','violet','agate','indigo'],
 			0: [ 248, 82, 28 ],
@@ -53,7 +54,7 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 302, 88, 26 ]
 		},
 		'George Field (1816)': { 
-			format: "HSL",
+			format: 'HSL',
 			ref: 'Klein, p.69',
 			english: ['blue',null,'purple',null,'red','orange',null,'yellow',null,'yellow green',null,'green'],
 			0: [ 248, 82, 28 ],
@@ -70,7 +71,7 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 135, 76, 32 ]
 		},
 		'D. D. Jameson (1844)': { 
-			format: "HSL",
+			format: 'HSL',
 			ref: 'Jameson, p.12',
 			english: ['red','red-orange','orange','orange-yellow','yellow','green','green-blue','blue','blue-purple','purple','purple-violet','violet'],
 			0: [ 360, 96, 51 ],
@@ -87,7 +88,7 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 325, 84, 46 ]
 		},
 		'Theodor Seemann (1881)': { 
-			format: "HSL",
+			format: 'HSL',
 			ref: 'Klein, p.86',
 			english: ['carmine','scarlet','orange','yellow-orange','yellow','green','green blue','blue','indigo','violet','brown','black'],
 			0: [ 0, 58, 26 ],
@@ -104,7 +105,7 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 0, 0, 3 ]
 		},
 		'A. Wallace Rimington (1893)': { 
-			format: "HSL",
+			format: 'HSL',
 			ref: 'Peacock, p.402',
 			english: ['deep red','crimson','orange-crimson','orange','yellow','yellow-green','green','blueish green','blue-green','indigo','deep blue','violet'],
 			0: [ 360, 96, 51 ],
@@ -121,7 +122,7 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 325, 84, 46 ]
 		},
 		'Bainbridge Bishop (1893)': { 
-			format: "HSL",
+			format: 'HSL',
 			ref: 'Bishop, p.11',
 			english: ['red','orange-red or scarlet','orange','gold or yellow-orange','yellow or green-gold','yellow-green','green','greenish-blue or aquamarine','blue','indigo or violet-blue','violet','violet-red','red'],
 			0: [ 360, 96, 51 ],
@@ -138,7 +139,7 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 360, 96, 51 ]
 		},
 		'H. von Helmholtz (1910)': { 
-			format: "HSL",
+			format: 'HSL',
 			ref: 'Helmholtz, p.22',
 			english: ['yellow','green','greenish blue','cayan-blue','indigo blue','violet','end of red','red','red','red','red orange','orange'],
 			0: [ 60, 90, 60 ],
@@ -155,7 +156,7 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 28, 89, 50 ]
 		},
 		'Alexander Scriabin (1911)': { 
-			format: "HSL",
+			format: 'HSL',
 			ref: 'Jones, p.104',
 			english: ['red','violet','yellow','steely with the glint of metal','pearly blue the shimmer of moonshine','dark red','bright blue','rosy orange','purple','green','steely with a glint of metal','pearly blue the shimmer of moonshine'],
 			0: [ 360, 96, 51 ],
@@ -172,7 +173,7 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 211, 70, 37 ]
 		},
 		'Adrian Bernard Klein (1930)': { 
-			format: "HSL",
+			format: 'HSL',
 			ref: 'Klein, p.209',
 			english: ['dark red','red','red orange','orange','yellow','yellow green','green','blue-green','blue','blue violet','violet','dark violet'],
 			0: [ 0, 91, 40 ],
@@ -189,7 +190,7 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 330, 84, 34 ]
 		},
 		'August Aeppli (1940)': { 
-			format: "HSL",
+			format: 'HSL',
 			ref: 'Gerstner, p.169',
 			english: ['red',null,'orange',null,'yellow',null,'green','blue-green',null,'ultramarine blue','violet','purple'],
 			0: [ 0, 96, 51 ],
@@ -222,7 +223,7 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 338, 85, 37 ]
 		},
 		'Steve Zieverink (2004)': { 
-			format: "HSL",
+			format: 'HSL',
 			ref: 'Cincinnati Contemporary Art Center',
 			english: ['yellow-green','green','blue-green','blue','indigo','violet','ultra violet','infra red','red','orange','yellow-white','yellow'],
 			0: [ 73, 73, 55 ],
@@ -239,7 +240,7 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 60, 90, 60 ]
 		},
 		'Circle of Fifths (Johnston 2003)': {
-			format: "RGB",
+			format: 'RGB',
 			ref: 'Joseph Johnston',
 			english: ['yellow', 'blue', 'orange', 'teal', 'red', 'green', 'purple', 'light orange', 'light blue', 'dark orange', 'dark green', 'violet' ],
 			0: [ 255, 255, 0 ],
@@ -256,8 +257,8 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 			11: [ 225, 0, 225 ]
 		},
 		'Circle of Fifths (Wheatman 2002)': {
-			format: "HEX",
-			ref: "Stuart Wheatman", // http://www.valleysfamilychurch.org/
+			format: 'HEX',
+			ref: 'Stuart Wheatman', // http://www.valleysfamilychurch.org/
 			english: [],
 			data: ['#122400', '#2E002E', '#002914', '#470000', '#002142', '#2E2E00', '#290052', '#003D00', '#520029', '#003D3D', '#522900', '#000080', '#244700', '#570057', '#004D26', '#7A0000', '#003B75', '#4C4D00', '#47008F', '#006100', '#850042', '#005C5C', '#804000', '#0000C7', '#366B00', '#80007F', '#00753B', '#B80000', '#0057AD', '#6B6B00', '#6600CC', '#008A00', '#B8005C', '#007F80', '#B35900', '#2424FF', '#478F00', '#AD00AD', '#00994D', '#F00000', '#0073E6', '#8F8F00', '#8A14FF', '#00AD00', '#EB0075', '#00A3A3', '#E07000', '#6B6BFF', '#5CB800', '#DB00DB', '#00C261', '#FF5757', '#3399FF', '#ADAD00', '#B56BFF', '#00D600', '#FF57AB', '#00C7C7', '#FF9124', '#9999FF', '#6EDB00', '#FF29FF', '#00E070', '#FF9999', '#7ABDFF', '#D1D100', '#D1A3FF', '#00FA00', '#FFA3D1', '#00E5E6', '#FFC285', '#C2C2FF', '#80FF00', '#FFA8FF', '#00E070', '#FFCCCC', '#C2E0FF', '#F0F000', '#EBD6FF', '#ADFFAD', '#FFD6EB', '#8AFFFF', '#FFEBD6', '#EBEBFF', '#E0FFC2', '#FFEBFF', '#E5FFF2', '#FFF5F5']		}
 	};
@@ -271,34 +272,49 @@ if (typeof(MusicTheory.Synesthesia) === "undefined") MusicTheory.Synesthesia = {
 				(a[2] * 0.5 + b[2] * 0.5 + 0.5) >> 0
 			];
 		};
+		///
 		var syn = root.data;
-		var colors = syn[type] || syn["D. D. Jameson (1844)"];
-		for (var note = 0; note <= 88; note ++) { // creates mapping for 88 notes
+		var colors = syn[type] || syn['D. D. Jameson (1844)'];
+		for (var note = 0, pclr, H, S, L; note <= 88; note ++) { // creates mapping for 88 notes
 			if (colors.data) {
 				data[note] = {
 					hsl: colors.data[note],
 					hex: colors.data[note] 
-				}
-			} else { // array
+				};
+			} else {
 				var clr = colors[(note + 9) % 12];
-				var isRGB = colors.format === "RGB";
-				if (isRGB) clr = Color.Space(clr, "RGB>HSL");
-				var H = Math.round(isRGB ? clr.H : clr[0]);
-				var S = Math.round(isRGB ? clr.S : clr[1]);
-				var L = Math.round(isRGB ? clr.L : clr[2]);
-				if (H == S && S == L) clr = blend(parray, colors[(note + 10) % 12]);
-				var amount = L / 10;
-				var octave = note / 12 >> 0;
-				var octaveLum = L + amount * octave - 3 * amount; // map luminance to octave	
-//				L = octaveLum;
+				///
+				switch(colors.format) {
+					case 'RGB':
+						clr = Color.Space(clr, 'RGB>HSL');
+						H = clr.H >> 0;
+						S = clr.S >> 0;
+						L = clr.L >> 0;
+						break;
+					case 'HSL':
+						H = clr[0];
+						S = clr[1];
+						L = clr[2];
+						break;
+				}
+				///
+				if (H === S && S === L) { // note color is unset
+					clr = blend(pclr, colors[(note + 10) % 12]);
+				}
+				///
+// 				var amount = L / 10;
+// 				var octave = note / 12 >> 0;
+// 				var octaveLum = L + amount * octave - 3.0 * amount; // map luminance to octave
+				///
 				data[note] = {
 					hsl: 'hsla(' + H + ',' + S + '%,' + L + '%, 1)',
-					hex: Color.Space({H:H, S:S, L:L}, "HSL>RGB>HEX>W3")
+					hex: Color.Space({H: H, S: S, L: L}, 'HSL>RGB>HEX>W3')
 				};
-				var parray = clr;
+				///
+				pclr = clr;
 			}
 		}
 		return data;
 	};
 
-})(MusicTheory.Synesthesia);
\ No newline at end of file
+})(MIDI.Synesthesia);
\ No newline at end of file
diff --git a/js/util/dom_request_script.js b/js/util/dom_request_script.js
index a8b99ec..8e5d97d 100644
--- a/js/util/dom_request_script.js
+++ b/js/util/dom_request_script.js
@@ -1,8 +1,8 @@
 /*
 	-----------------------------------------------------------
-	dom.loadScript.js : 0.1.4 : 2012/12/12 : http://mudcu.be
+	dom.loadScript.js : 0.1.4 : 2014/02/12 : http://mudcu.be
 	-----------------------------------------------------------
-	Copyright 2011-2013 Mudcube. All rights reserved.
+	Copyright 2011-2014 Mudcube. All rights reserved.
 	-----------------------------------------------------------
 	/// No verification
 	dom.loadScript.add("../js/jszip/jszip.js");
@@ -39,8 +39,6 @@
 	});
 */
 
-/// sketch.util.script()
-
 if (typeof(dom) === "undefined") var dom = {};
 
 (function() { "use strict";
@@ -68,7 +66,7 @@ dom.loadScript.prototype.add = function(config) {
 	/// 
 	var testElement = function(element, test) {
 		if (that.loaded[element.url]) return;
-		if (test && typeof(window[test]) === "undefined") return;
+		if (test && globalExists(test) === false) return;
 		that.loaded[element.url] = true;
 		//
 		if (that.loading[element.url]) that.loading[element.url]();
@@ -87,7 +85,7 @@ dom.loadScript.prototype.add = function(config) {
 				verify: config.verify
 			};
 		}
-		if (/([\w\d.])$/.test(element.verify)) { // check whether its a variable reference
+		if (/([\w\d.\[\]\'\"])$/.test(element.verify)) { // check whether its a variable reference
 			var verify = element.test = element.verify;
 			if (typeof(verify) === "object") {
 				for (var n = 0; n < verify.length; n ++) {
@@ -141,24 +139,8 @@ dom.loadScript.prototype.add = function(config) {
 		}
 		var istrue = true;
 		for (var n = 0; n < batchTest.length; n ++) {
-			var test = batchTest[n];
-			if (test && test.indexOf(".") !== -1) {
-				test = test.split(".");
-				var level0 = window[test[0]];
-				if (typeof(level0) === "undefined") continue;
-				if (test.length === 2) { //- this is a bit messy and could handle more cases
-					if (typeof(level0[test[1]]) === "undefined") {
-						istrue = false;
-					}
-				} else if (test.length === 3) {
-					if (typeof(level0[test[1]][test[2]]) === "undefined") {
-						istrue = false;
-					}
-				}
-			} else {
-				if (typeof(window[test]) === "undefined") {
-					istrue = false;
-				}
+			if (globalExists(batchTest[n]) === false) {
+				istrue = false;
 			}
 		}
 		if (!config.strictOrder && istrue) { // finished loading all the requested scripts
@@ -215,6 +197,26 @@ dom.loadScript.prototype.add = function(config) {
 
 dom.loadScript = new dom.loadScript();
 
+var globalExists = function(path, root) {
+	try {
+		path = path.split('"').join('').split("'").join('').split(']').join('').split('[').join('.');
+		var parts = path.split(".");
+		var length = parts.length;
+		var object = root || window;
+		for (var n = 0; n < length; n ++) {
+			var key = parts[n];
+			if (object[key] == null) {
+				return false;
+			} else { //
+				object = object[key];
+			}
+		}
+		return true;
+	} catch(e) {
+		return false;
+	}
+};
+
 })();
 
 /// For NodeJS
diff --git a/js/util/dom_request_xhr.js b/js/util/dom_request_xhr.js
index 8384051..a518b93 100644
--- a/js/util/dom_request_xhr.js
+++ b/js/util/dom_request_xhr.js
@@ -1,130 +1,106 @@
 /*
-
-	DOMLoader.XMLHttp
-	--------------------------
-	DOMLoader.sendRequest({
-		url: "./dir/something.extension",
-		data: "test!",
+	----------------------------------------------------------
+	util/Request : 0.1.1 : 2014-10-17
+	----------------------------------------------------------
+	util.request({
+		url: './dir/something.extension',
+		body: 'test!',
 		onerror: function(event) {
 			console.log(event);
 		},
 		onload: function(response) {
 			console.log(response.responseText);
-		}, 
-		onprogress: function (event) {
+		},
+		onprogress: function(event) {
 			var percent = event.loaded / event.total * 100 >> 0;
-			loader.message("loading: " + percent + "%");
+			loader.create('thread', 'loading... ', percent);
 		}
 	});
-	
 */
 
-if (typeof(DOMLoader) === "undefined") var DOMLoader = {};
+if (typeof MIDI === 'undefined') MIDI = {};
 
-// Add XMLHttpRequest when not available
+(function(root) {
 
-if (typeof (XMLHttpRequest) === "undefined") {
-	var XMLHttpRequest;
-	(function () { // find equivalent for IE
-		var factories = [
-		function () {
-			return new ActiveXObject("Msxml2.XMLHTTP")
-		}, function () {
-			return new ActiveXObject("Msxml3.XMLHTTP")
-		}, function () {
-			return new ActiveXObject("Microsoft.XMLHTTP")
-		}];
-		for (var i = 0; i < factories.length; i++) {
-			try {
-				factories[i]();
-			} catch (e) {
-				continue;
-			}
-			break;
-		}
-		XMLHttpRequest = factories[i];
-	})();
-}
+	var util = root.util || (root.util = {});
 
-if (typeof ((new XMLHttpRequest()).responseText) === "undefined") {
-	// http://stackoverflow.com/questions/1919972/how-do-i-access-xhr-responsebody-for-binary-data-from-javascript-in-ie
-    var IEBinaryToArray_ByteStr_Script =
-    "<!-- IEBinaryToArray_ByteStr -->\r\n"+
-    "<script type='text/vbscript'>\r\n"+
-    "Function IEBinaryToArray_ByteStr(Binary)\r\n"+
-    "   IEBinaryToArray_ByteStr = CStr(Binary)\r\n"+
-    "End Function\r\n"+
-    "Function IEBinaryToArray_ByteStr_Last(Binary)\r\n"+
-    "   Dim lastIndex\r\n"+
-    "   lastIndex = LenB(Binary)\r\n"+
-    "   if lastIndex mod 2 Then\r\n"+
-    "       IEBinaryToArray_ByteStr_Last = Chr( AscB( MidB( Binary, lastIndex, 1 ) ) )\r\n"+
-    "   Else\r\n"+
-    "       IEBinaryToArray_ByteStr_Last = "+'""'+"\r\n"+
-    "   End If\r\n"+
-    "End Function\r\n"+
-    "</script>\r\n";
-
-	// inject VBScript
-	document.write(IEBinaryToArray_ByteStr_Script);
-
-	DOMLoader.sendRequest = function(conf) {
-		// helper to convert from responseBody to a "responseText" like thing
-		function getResponseText(binary) {
-			var byteMapping = {};
-			for (var i = 0; i < 256; i++) {
-				for (var j = 0; j < 256; j++) {
-					byteMapping[String.fromCharCode(i + j * 256)] = String.fromCharCode(i) + String.fromCharCode(j);
-				}
-			}
-			// call into VBScript utility fns
-			var rawBytes = IEBinaryToArray_ByteStr(binary);
-			var lastChr = IEBinaryToArray_ByteStr_Last(binary);
-			return rawBytes.replace(/[\s\S]/g, function (match) {
-				return byteMapping[match];
-			}) + lastChr;
-		};
-		//
-		var req = XMLHttpRequest();
-		req.open("GET", conf.url, true);
-		if (conf.responseType) req.responseType = conf.responseType;
-		if (conf.onerror) req.onerror = conf.onerror;
-		if (conf.onprogress) req.onprogress = conf.onprogress;
-		req.onreadystatechange = function (event) {
-			if (req.readyState === 4) {
-				if (req.status === 200) {
-					req.responseText = getResponseText(req.responseBody);
+	util.request = function(params, onload, onerror, onprogress) { 'use strict';
+		if (typeof(params) === 'string') params = {url: params};
+		///
+		var body = params.body;
+		var url = params.url;
+		var headers = params.headers;
+		var responseType = params.responseType;
+		var withCredentials = params.withCredentials;
+		var asBinaryString = params.asBinaryString;
+		var onload = onload || params.onload;
+		var onerror = onerror || params.onerror;
+		var onprogress = onprogress || params.onprogress;
+		///
+		if (typeof(NodeFS) !== 'undefined' && root.loc.isLocalUrl(url)) {
+			NodeFS.readFile(url, 'utf8', function(error, data) {
+				if (error) {
+					onerror && onerror(error, false);
 				} else {
-					req = false;
+					onload && onload({responseText: data});
 				}
-				if (conf.onload) conf.onload(req);
+			});
+			return;
+		}
+		///
+		var xhr = new XMLHttpRequest();
+		xhr.open(body ? 'POST' : 'GET', url, true);
+		///
+		if (headers) {
+			for (var key in headers) {
+				xhr.setRequestHeader(key, headers[key]);
 			}
-		};
-		req.setRequestHeader("Accept-Charset", "x-user-defined");
-		req.send(null);
-		return req;
-	}
-} else {
-	DOMLoader.sendRequest = function(conf) {
-		var req = new XMLHttpRequest();
-		req.open(conf.data ? "POST" : "GET", conf.url, true);
-		if (req.overrideMimeType) req.overrideMimeType("text/plain; charset=x-user-defined");
-		if (conf.data) req.setRequestHeader('Content-type','application/x-www-form-urlencoded');
-		if (conf.responseType) req.responseType = conf.responseType;
-		if (conf.onerror) req.onerror = conf.onerror;
-		if (conf.onprogress) req.onprogress = conf.onprogress;
-		req.onreadystatechange = function (event) {
-			if (req.readyState === 4) {
-				if (req.status !== 200 && req.status != 304) {
-					if (conf.onerror) conf.onerror(event, false);
-					return;
-				}
-				if (conf.onload) {
-					conf.onload(req);
+		} else if (body) { // set the default headers for POST
+			xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
+		}
+		if (asBinaryString) { //- default to responseType="blob" when supported
+			if (xhr.overrideMimeType) {
+				xhr.overrideMimeType('text/plain; charset=x-user-defined');
+			}
+		}
+		if (responseType) {
+			xhr.responseType = responseType;
+		}
+		if (withCredentials) {
+			xhr.withCredentials = 'true';
+		}
+		if (onerror && 'onerror' in xhr) {
+			xhr.onerror = onerror;
+		}
+		if (onprogress && xhr.upload && 'onprogress' in xhr.upload) {
+			if (body) {
+				xhr.upload.onprogress = onprogress;
+			} else {
+				xhr.onprogress = onprogress;
+			}
+		}
+		///
+		xhr.onreadystatechange = function(event) {
+			if (xhr.readyState === 4) { // The request is complete
+				if (xhr.status === 200 || // Response OK
+					xhr.status === 304 || // Not Modified
+					xhr.status === 0 && root.client && root.client.cordova // Cordova quirk
+				) {
+					onload && onload(xhr);
+				} else {
+					onerror && onerror(event, false);
 				}
 			}
 		};
-		req.send(conf.data);
-		return req;
+		xhr.send(body);
+		return xhr;
 	};
-}
\ No newline at end of file
+
+	/// NodeJS
+	if (typeof module !== 'undefined' && module.exports) {
+		var NodeFS = require('fs');
+		XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;
+		module.exports = root.util.request;
+	}
+
+})(MIDI);
\ No newline at end of file
diff --git a/js/util/queue.js b/js/util/queue.js
deleted file mode 100644
index 3787e1a..0000000
--- a/js/util/queue.js
+++ /dev/null
@@ -1,117 +0,0 @@
-/*
-	----------------------------------------------------
-	sketch.util.Queue : 0.1.1 : https://sketch.io
-	----------------------------------------------------
-*/
-
-var Queue = function(conf) {
-	/*
-		new sketch.util.Queue({
-			items: list,
-			range: { from: 0, to: 75 },
-			oncomplete: function() {
-	//			queue.reset(); // infinite loop!
-	//			queue.next();
-			},
-			next: function(entry, key, index) {
-				if (item[0] !== "." && item.indexOf(".") === -1) {
-					readDir(dir + item + "/", this.next);
-				} else {
-					setTimeout(this.next, 1)
-				}
-			}
-		});
-	*/
-	var that = this;
-	var oncomplete = conf.oncomplete || conf.complete || conf.callback;
-	var onprogress = conf.onprogress || conf.progress;
-	var flatten = conf.flatten === false ? false : true;
-	this.canceled = false;
-	this.cancel = function() {
-		if (that.canceled || that.remaining <= 0) return;
-		if (conf.oncancel) conf.oncancel();
-		that.canceled = true;
-	};
-	/// Request the next item in stack.
-	this.next = function() {
-		if (that.canceled) return;
-		/// Emit the progress of the queue.
-		var queue = that.queue;
-		var remaining = that.remaining;
-		var total = that.length;
-		var index = (total - remaining) - 1;
-		var key = that.keys[index];
-		///
-		if (onprogress) {
-			onprogress(total ? 1 - (remaining + 1) / total : 1);
-		}
-
-		/// Check whether the queue is complete.
-		if (!queue.length) {
-			if (oncomplete) {
-				oncomplete();
-			}
-			return;
-		}
-		/// Indicate previous element as processed.
-		that.remaining --;
-		///
-		var isObject = String(item) === "[object Object]";
-		var isArray = isObject && item.length;
-
-		/// Single level queue
-		if (flatten) {
-			conf.next.call(that, queue.shift(), key, index);
-		} else {
-			/// Remove previously completed level in stack.
-			var item = queue[0];
-			if (isObject && !isArray) queue.shift();
-			/// Process next item in multi-dimensional stack.
-			if (isObject && isArray) {
-				conf.next.call(that, item.shift(), key, index);
-			} else { // ditto for single-dimensional stack.
-				conf.next.call(that, queue.shift(), key, index);
-			}
-		}
-	};
-	/// 
-	this.reset = function(items) {
-		if (conf.range) {
-			var range = conf.range;
-			for (var n = range.from, items = []; n <= range.to; n++) {
-				items.push(n);
-			}
-		} else {
-			items = items || conf.items;		
-		}
-		///
-		this.length = 0;
-		this.remaining = -1;
-		this.queue = [];
-		this.keys = [];
-
-		/// Flatten multi-dimensional objects.
-		for (var key in items) {
-			if (String(items[key]) === "[object Object]" && !flatten) {
-				var sub = [];
-				this.queue.push(sub);
-				for (var key1 in items[key]) {
-					sub.push(items[key][key1]);
-					this.keys.push(key1);
-					this.length ++;
-					this.remaining ++;
-				}
-			} else {
-				this.keys.push(key);
-				this.queue.push(items[key]);
-				this.length ++;
-				this.remaining ++;
-			}
-		}
-	};
-	///
-	this.reset(); // populate queue
-	this.next(); // start queue
-	///
-	return this;
-};
\ No newline at end of file
